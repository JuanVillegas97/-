Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    ELSE
    FALSE
    IF
    PRINT
    THEN
    TRUE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE END
Rule 2     var_declarations -> var_declarations var_declaration
Rule 3     var_declarations -> var_declaration
Rule 4     var_declarations -> empty
Rule 5     var_declaration -> VARIABLE simple_type variables SEMICOLON
Rule 6     variables -> variables COMMA variable
Rule 7     variables -> variable
Rule 8     variable -> ID
Rule 9     variable -> ID LBRACK expression RBRACK
Rule 10    variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK
Rule 11    functions -> functions function
Rule 12    functions -> function
Rule 13    functions -> empty
Rule 14    function -> FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations LBRACE statements statement RBRACE
Rule 15    function -> FUNCTION VOID ID LPAREN parameters RPAREN var_declarations LBRACE statements RBRACE
Rule 16    parameters -> parameters COMMA parameter
Rule 17    parameters -> parameter
Rule 18    parameters -> empty
Rule 19    parameter -> simple_type ID
Rule 20    statements -> statements statement
Rule 21    statements -> statement
Rule 22    statements -> empty
Rule 23    statement -> assingation
Rule 24    statement -> invocation
Rule 25    statement -> read
Rule 26    statement -> return
Rule 27    return -> RETURN expression SEMICOLON
Rule 28    read -> READ LPAREN variable RPAREN SEMICOLON
Rule 29    assingation -> variable ASSIGN expression SEMICOLON
Rule 30    invocation -> ID LPAREN expressions RPAREN SEMICOLON
Rule 31    expressions -> expressions COMMA expression
Rule 32    expressions -> expression
Rule 33    expressions -> empty
Rule 34    expression -> t_expression
Rule 35    expression -> t_expression ASSIGN t_expression
Rule 36    t_expression -> g_expression
Rule 37    t_expression -> g_expression boolean_operator g_expression
Rule 38    g_expression -> m_expression
Rule 39    g_expression -> m_expression comparison_operator m_expression
Rule 40    m_expression -> term
Rule 41    m_expression -> term addition_operator term
Rule 42    term -> factor
Rule 43    term -> factor multiplication_operator factor
Rule 44    factor -> variable
Rule 45    factor -> cte
Rule 46    factor -> LPAREN expression RPAREN
Rule 47    comparison_operator -> LESS
Rule 48    comparison_operator -> GREATER
Rule 49    comparison_operator -> EQUALS
Rule 50    comparison_operator -> NOTEQUAL
Rule 51    addition_operator -> PLUS
Rule 52    addition_operator -> MINUS
Rule 53    boolean_operator -> AND
Rule 54    boolean_operator -> OR
Rule 55    multiplication_operator -> TIMES
Rule 56    multiplication_operator -> DIVIDE
Rule 57    simple_type -> INT
Rule 58    simple_type -> FLOAT
Rule 59    simple_type -> CHAR
Rule 60    simple_type -> STRING
Rule 61    simple_type -> BOOLEAN
Rule 62    cte -> CTEI
Rule 63    cte -> CTEF
Rule 64    cte -> CTEC
Rule 65    cte -> CTES
Rule 66    cte -> CTEB
Rule 67    empty -> <empty>

Terminals, with rules where they appear

AND                  : 53
ASSIGN               : 29 35
BOOLEAN              : 61
CHAR                 : 59
COLON                : 
COMMA                : 6 16 31
COMMENT              : 
CTEB                 : 66
CTEC                 : 64
CTEF                 : 63
CTEI                 : 62
CTES                 : 65
DIVIDE               : 56
ELSE                 : 
END                  : 1
EQUALS               : 49
FALSE                : 
FLOAT                : 58
FUNCTION             : 14 15
GREATER              : 48
ID                   : 1 8 9 10 14 15 19 30
IF                   : 
INT                  : 57
LBRACE               : 1 14 15
LBRACK               : 9 10 10
LESS                 : 47
LPAREN               : 1 14 15 28 30 46
MAIN                 : 1
MINUS                : 52
NOTEQUAL             : 50
OR                   : 54
PLUS                 : 51
PRINT                : 
PROGRAM              : 1
RBRACE               : 1 14 15
RBRACK               : 9 10 10
READ                 : 28
RETURN               : 27
RPAREN               : 1 14 15 28 30 46
SEMICOLON            : 1 5 27 28 29 30
STRING               : 60
THEN                 : 
TIMES                : 55
TRUE                 : 
VARIABLE             : 5
VOID                 : 15
WHILE                : 
error                : 

Nonterminals, with rules where they appear

addition_operator    : 41
assingation          : 23
boolean_operator     : 37
comparison_operator  : 39
cte                  : 45
empty                : 4 13 18 22 33
expression           : 9 10 10 27 29 31 32 46
expressions          : 30 31
factor               : 42 43 43
function             : 11 12
functions            : 1 11
g_expression         : 36 37 37
invocation           : 24
m_expression         : 38 39 39
multiplication_operator : 43
parameter            : 16 17
parameters           : 14 15 16
program              : 0
read                 : 25
return               : 26
simple_type          : 5 14 19
statement            : 14 20 21
statements           : 1 14 15 20
t_expression         : 34 35 35
term                 : 40 41 41
var_declaration      : 2 3
var_declarations     : 1 1 2 14 15
variable             : 6 7 28 29 44
variables            : 5 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE END

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE END
    (2) var_declarations -> . var_declarations var_declaration
    (3) var_declarations -> . var_declaration
    (4) var_declarations -> . empty
    (5) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (67) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 8
    FUNCTION        reduce using rule 67 (empty -> .)
    MAIN            reduce using rule 67 (empty -> .)

  ! VARIABLE        [ reduce using rule 67 (empty -> .) ]

    var_declarations               shift and go to state 5
    var_declaration                shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMICOLON var_declarations . functions MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE END
    (2) var_declarations -> var_declarations . var_declaration
    (11) functions -> . functions function
    (12) functions -> . function
    (13) functions -> . empty
    (5) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (14) function -> . FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations LBRACE statements statement RBRACE
    (15) function -> . FUNCTION VOID ID LPAREN parameters RPAREN var_declarations LBRACE statements RBRACE
    (67) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    VARIABLE        shift and go to state 8
    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 67 (empty -> .)

  ! FUNCTION        [ reduce using rule 67 (empty -> .) ]

    functions                      shift and go to state 9
    var_declaration                shift and go to state 10
    function                       shift and go to state 11
    empty                          shift and go to state 12

state 6

    (3) var_declarations -> var_declaration .

    VARIABLE        reduce using rule 3 (var_declarations -> var_declaration .)
    FUNCTION        reduce using rule 3 (var_declarations -> var_declaration .)
    MAIN            reduce using rule 3 (var_declarations -> var_declaration .)
    LBRACE          reduce using rule 3 (var_declarations -> var_declaration .)


state 7

    (4) var_declarations -> empty .

    VARIABLE        reduce using rule 4 (var_declarations -> empty .)
    FUNCTION        reduce using rule 4 (var_declarations -> empty .)
    MAIN            reduce using rule 4 (var_declarations -> empty .)
    LBRACE          reduce using rule 4 (var_declarations -> empty .)


state 8

    (5) var_declaration -> VARIABLE . simple_type variables SEMICOLON
    (57) simple_type -> . INT
    (58) simple_type -> . FLOAT
    (59) simple_type -> . CHAR
    (60) simple_type -> . STRING
    (61) simple_type -> . BOOLEAN

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 19

    simple_type                    shift and go to state 14

state 9

    (1) program -> PROGRAM ID SEMICOLON var_declarations functions . MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE END
    (11) functions -> functions . function
    (14) function -> . FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations LBRACE statements statement RBRACE
    (15) function -> . FUNCTION VOID ID LPAREN parameters RPAREN var_declarations LBRACE statements RBRACE

    MAIN            shift and go to state 20
    FUNCTION        shift and go to state 13

    function                       shift and go to state 21

state 10

    (2) var_declarations -> var_declarations var_declaration .

    VARIABLE        reduce using rule 2 (var_declarations -> var_declarations var_declaration .)
    FUNCTION        reduce using rule 2 (var_declarations -> var_declarations var_declaration .)
    MAIN            reduce using rule 2 (var_declarations -> var_declarations var_declaration .)
    LBRACE          reduce using rule 2 (var_declarations -> var_declarations var_declaration .)


state 11

    (12) functions -> function .

    MAIN            reduce using rule 12 (functions -> function .)
    FUNCTION        reduce using rule 12 (functions -> function .)


state 12

    (13) functions -> empty .

    MAIN            reduce using rule 13 (functions -> empty .)
    FUNCTION        reduce using rule 13 (functions -> empty .)


state 13

    (14) function -> FUNCTION . simple_type ID LPAREN parameters RPAREN var_declarations LBRACE statements statement RBRACE
    (15) function -> FUNCTION . VOID ID LPAREN parameters RPAREN var_declarations LBRACE statements RBRACE
    (57) simple_type -> . INT
    (58) simple_type -> . FLOAT
    (59) simple_type -> . CHAR
    (60) simple_type -> . STRING
    (61) simple_type -> . BOOLEAN

    VOID            shift and go to state 23
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 19

    simple_type                    shift and go to state 22

state 14

    (5) var_declaration -> VARIABLE simple_type . variables SEMICOLON
    (6) variables -> . variables COMMA variable
    (7) variables -> . variable
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 26

    variables                      shift and go to state 24
    variable                       shift and go to state 25

state 15

    (57) simple_type -> INT .

    ID              reduce using rule 57 (simple_type -> INT .)


state 16

    (58) simple_type -> FLOAT .

    ID              reduce using rule 58 (simple_type -> FLOAT .)


state 17

    (59) simple_type -> CHAR .

    ID              reduce using rule 59 (simple_type -> CHAR .)


state 18

    (60) simple_type -> STRING .

    ID              reduce using rule 60 (simple_type -> STRING .)


state 19

    (61) simple_type -> BOOLEAN .

    ID              reduce using rule 61 (simple_type -> BOOLEAN .)


state 20

    (1) program -> PROGRAM ID SEMICOLON var_declarations functions MAIN . LPAREN RPAREN var_declarations LBRACE statements RBRACE END

    LPAREN          shift and go to state 27


state 21

    (11) functions -> functions function .

    MAIN            reduce using rule 11 (functions -> functions function .)
    FUNCTION        reduce using rule 11 (functions -> functions function .)


state 22

    (14) function -> FUNCTION simple_type . ID LPAREN parameters RPAREN var_declarations LBRACE statements statement RBRACE

    ID              shift and go to state 28


state 23

    (15) function -> FUNCTION VOID . ID LPAREN parameters RPAREN var_declarations LBRACE statements RBRACE

    ID              shift and go to state 29


state 24

    (5) var_declaration -> VARIABLE simple_type variables . SEMICOLON
    (6) variables -> variables . COMMA variable

    SEMICOLON       shift and go to state 30
    COMMA           shift and go to state 31


state 25

    (7) variables -> variable .

    SEMICOLON       reduce using rule 7 (variables -> variable .)
    COMMA           reduce using rule 7 (variables -> variable .)


state 26

    (8) variable -> ID .
    (9) variable -> ID . LBRACK expression RBRACK
    (10) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    SEMICOLON       reduce using rule 8 (variable -> ID .)
    COMMA           reduce using rule 8 (variable -> ID .)
    TIMES           reduce using rule 8 (variable -> ID .)
    DIVIDE          reduce using rule 8 (variable -> ID .)
    PLUS            reduce using rule 8 (variable -> ID .)
    MINUS           reduce using rule 8 (variable -> ID .)
    LESS            reduce using rule 8 (variable -> ID .)
    GREATER         reduce using rule 8 (variable -> ID .)
    EQUALS          reduce using rule 8 (variable -> ID .)
    NOTEQUAL        reduce using rule 8 (variable -> ID .)
    AND             reduce using rule 8 (variable -> ID .)
    OR              reduce using rule 8 (variable -> ID .)
    ASSIGN          reduce using rule 8 (variable -> ID .)
    RBRACK          reduce using rule 8 (variable -> ID .)
    RPAREN          reduce using rule 8 (variable -> ID .)
    LBRACK          shift and go to state 32


state 27

    (1) program -> PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN . RPAREN var_declarations LBRACE statements RBRACE END

    RPAREN          shift and go to state 33


state 28

    (14) function -> FUNCTION simple_type ID . LPAREN parameters RPAREN var_declarations LBRACE statements statement RBRACE

    LPAREN          shift and go to state 34


state 29

    (15) function -> FUNCTION VOID ID . LPAREN parameters RPAREN var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 35


state 30

    (5) var_declaration -> VARIABLE simple_type variables SEMICOLON .

    VARIABLE        reduce using rule 5 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)
    FUNCTION        reduce using rule 5 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)
    MAIN            reduce using rule 5 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)
    LBRACE          reduce using rule 5 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)


state 31

    (6) variables -> variables COMMA . variable
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 26

    variable                       shift and go to state 36

state 32

    (9) variable -> ID LBRACK . expression RBRACK
    (10) variable -> ID LBRACK . expression RBRACK LBRACK expression RBRACK
    (34) expression -> . t_expression
    (35) expression -> . t_expression ASSIGN t_expression
    (36) t_expression -> . g_expression
    (37) t_expression -> . g_expression boolean_operator g_expression
    (38) g_expression -> . m_expression
    (39) g_expression -> . m_expression comparison_operator m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    expression                     shift and go to state 37
    t_expression                   shift and go to state 38
    g_expression                   shift and go to state 39
    m_expression                   shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 33

    (1) program -> PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN . var_declarations LBRACE statements RBRACE END
    (2) var_declarations -> . var_declarations var_declaration
    (3) var_declarations -> . var_declaration
    (4) var_declarations -> . empty
    (5) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (67) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 8
    LBRACE          reduce using rule 67 (empty -> .)

  ! VARIABLE        [ reduce using rule 67 (empty -> .) ]

    var_declarations               shift and go to state 51
    var_declaration                shift and go to state 6
    empty                          shift and go to state 7

state 34

    (14) function -> FUNCTION simple_type ID LPAREN . parameters RPAREN var_declarations LBRACE statements statement RBRACE
    (16) parameters -> . parameters COMMA parameter
    (17) parameters -> . parameter
    (18) parameters -> . empty
    (19) parameter -> . simple_type ID
    (67) empty -> .
    (57) simple_type -> . INT
    (58) simple_type -> . FLOAT
    (59) simple_type -> . CHAR
    (60) simple_type -> . STRING
    (61) simple_type -> . BOOLEAN

    RPAREN          reduce using rule 67 (empty -> .)
    COMMA           reduce using rule 67 (empty -> .)
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 19

    simple_type                    shift and go to state 52
    parameters                     shift and go to state 53
    parameter                      shift and go to state 54
    empty                          shift and go to state 55

state 35

    (15) function -> FUNCTION VOID ID LPAREN . parameters RPAREN var_declarations LBRACE statements RBRACE
    (16) parameters -> . parameters COMMA parameter
    (17) parameters -> . parameter
    (18) parameters -> . empty
    (19) parameter -> . simple_type ID
    (67) empty -> .
    (57) simple_type -> . INT
    (58) simple_type -> . FLOAT
    (59) simple_type -> . CHAR
    (60) simple_type -> . STRING
    (61) simple_type -> . BOOLEAN

    RPAREN          reduce using rule 67 (empty -> .)
    COMMA           reduce using rule 67 (empty -> .)
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 19

    parameters                     shift and go to state 56
    parameter                      shift and go to state 54
    empty                          shift and go to state 55
    simple_type                    shift and go to state 52

state 36

    (6) variables -> variables COMMA variable .

    SEMICOLON       reduce using rule 6 (variables -> variables COMMA variable .)
    COMMA           reduce using rule 6 (variables -> variables COMMA variable .)


state 37

    (9) variable -> ID LBRACK expression . RBRACK
    (10) variable -> ID LBRACK expression . RBRACK LBRACK expression RBRACK

    RBRACK          shift and go to state 57


state 38

    (34) expression -> t_expression .
    (35) expression -> t_expression . ASSIGN t_expression

    RBRACK          reduce using rule 34 (expression -> t_expression .)
    RPAREN          reduce using rule 34 (expression -> t_expression .)
    SEMICOLON       reduce using rule 34 (expression -> t_expression .)
    COMMA           reduce using rule 34 (expression -> t_expression .)
    ASSIGN          shift and go to state 58


state 39

    (36) t_expression -> g_expression .
    (37) t_expression -> g_expression . boolean_operator g_expression
    (53) boolean_operator -> . AND
    (54) boolean_operator -> . OR

    ASSIGN          reduce using rule 36 (t_expression -> g_expression .)
    RBRACK          reduce using rule 36 (t_expression -> g_expression .)
    RPAREN          reduce using rule 36 (t_expression -> g_expression .)
    SEMICOLON       reduce using rule 36 (t_expression -> g_expression .)
    COMMA           reduce using rule 36 (t_expression -> g_expression .)
    AND             shift and go to state 60
    OR              shift and go to state 61

    boolean_operator               shift and go to state 59

state 40

    (38) g_expression -> m_expression .
    (39) g_expression -> m_expression . comparison_operator m_expression
    (47) comparison_operator -> . LESS
    (48) comparison_operator -> . GREATER
    (49) comparison_operator -> . EQUALS
    (50) comparison_operator -> . NOTEQUAL

    AND             reduce using rule 38 (g_expression -> m_expression .)
    OR              reduce using rule 38 (g_expression -> m_expression .)
    ASSIGN          reduce using rule 38 (g_expression -> m_expression .)
    RBRACK          reduce using rule 38 (g_expression -> m_expression .)
    RPAREN          reduce using rule 38 (g_expression -> m_expression .)
    SEMICOLON       reduce using rule 38 (g_expression -> m_expression .)
    COMMA           reduce using rule 38 (g_expression -> m_expression .)
    LESS            shift and go to state 63
    GREATER         shift and go to state 64
    EQUALS          shift and go to state 65
    NOTEQUAL        shift and go to state 66

    comparison_operator            shift and go to state 62

state 41

    (40) m_expression -> term .
    (41) m_expression -> term . addition_operator term
    (51) addition_operator -> . PLUS
    (52) addition_operator -> . MINUS

    LESS            reduce using rule 40 (m_expression -> term .)
    GREATER         reduce using rule 40 (m_expression -> term .)
    EQUALS          reduce using rule 40 (m_expression -> term .)
    NOTEQUAL        reduce using rule 40 (m_expression -> term .)
    AND             reduce using rule 40 (m_expression -> term .)
    OR              reduce using rule 40 (m_expression -> term .)
    ASSIGN          reduce using rule 40 (m_expression -> term .)
    RBRACK          reduce using rule 40 (m_expression -> term .)
    RPAREN          reduce using rule 40 (m_expression -> term .)
    SEMICOLON       reduce using rule 40 (m_expression -> term .)
    COMMA           reduce using rule 40 (m_expression -> term .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69

    addition_operator              shift and go to state 67

state 42

    (42) term -> factor .
    (43) term -> factor . multiplication_operator factor
    (55) multiplication_operator -> . TIMES
    (56) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 42 (term -> factor .)
    MINUS           reduce using rule 42 (term -> factor .)
    LESS            reduce using rule 42 (term -> factor .)
    GREATER         reduce using rule 42 (term -> factor .)
    EQUALS          reduce using rule 42 (term -> factor .)
    NOTEQUAL        reduce using rule 42 (term -> factor .)
    AND             reduce using rule 42 (term -> factor .)
    OR              reduce using rule 42 (term -> factor .)
    ASSIGN          reduce using rule 42 (term -> factor .)
    RBRACK          reduce using rule 42 (term -> factor .)
    RPAREN          reduce using rule 42 (term -> factor .)
    SEMICOLON       reduce using rule 42 (term -> factor .)
    COMMA           reduce using rule 42 (term -> factor .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

    multiplication_operator        shift and go to state 70

state 43

    (44) factor -> variable .

    TIMES           reduce using rule 44 (factor -> variable .)
    DIVIDE          reduce using rule 44 (factor -> variable .)
    PLUS            reduce using rule 44 (factor -> variable .)
    MINUS           reduce using rule 44 (factor -> variable .)
    LESS            reduce using rule 44 (factor -> variable .)
    GREATER         reduce using rule 44 (factor -> variable .)
    EQUALS          reduce using rule 44 (factor -> variable .)
    NOTEQUAL        reduce using rule 44 (factor -> variable .)
    AND             reduce using rule 44 (factor -> variable .)
    OR              reduce using rule 44 (factor -> variable .)
    ASSIGN          reduce using rule 44 (factor -> variable .)
    RBRACK          reduce using rule 44 (factor -> variable .)
    RPAREN          reduce using rule 44 (factor -> variable .)
    SEMICOLON       reduce using rule 44 (factor -> variable .)
    COMMA           reduce using rule 44 (factor -> variable .)


state 44

    (45) factor -> cte .

    TIMES           reduce using rule 45 (factor -> cte .)
    DIVIDE          reduce using rule 45 (factor -> cte .)
    PLUS            reduce using rule 45 (factor -> cte .)
    MINUS           reduce using rule 45 (factor -> cte .)
    LESS            reduce using rule 45 (factor -> cte .)
    GREATER         reduce using rule 45 (factor -> cte .)
    EQUALS          reduce using rule 45 (factor -> cte .)
    NOTEQUAL        reduce using rule 45 (factor -> cte .)
    AND             reduce using rule 45 (factor -> cte .)
    OR              reduce using rule 45 (factor -> cte .)
    ASSIGN          reduce using rule 45 (factor -> cte .)
    RBRACK          reduce using rule 45 (factor -> cte .)
    RPAREN          reduce using rule 45 (factor -> cte .)
    SEMICOLON       reduce using rule 45 (factor -> cte .)
    COMMA           reduce using rule 45 (factor -> cte .)


state 45

    (46) factor -> LPAREN . expression RPAREN
    (34) expression -> . t_expression
    (35) expression -> . t_expression ASSIGN t_expression
    (36) t_expression -> . g_expression
    (37) t_expression -> . g_expression boolean_operator g_expression
    (38) g_expression -> . m_expression
    (39) g_expression -> . m_expression comparison_operator m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    expression                     shift and go to state 73
    t_expression                   shift and go to state 38
    g_expression                   shift and go to state 39
    m_expression                   shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 46

    (62) cte -> CTEI .

    TIMES           reduce using rule 62 (cte -> CTEI .)
    DIVIDE          reduce using rule 62 (cte -> CTEI .)
    PLUS            reduce using rule 62 (cte -> CTEI .)
    MINUS           reduce using rule 62 (cte -> CTEI .)
    LESS            reduce using rule 62 (cte -> CTEI .)
    GREATER         reduce using rule 62 (cte -> CTEI .)
    EQUALS          reduce using rule 62 (cte -> CTEI .)
    NOTEQUAL        reduce using rule 62 (cte -> CTEI .)
    AND             reduce using rule 62 (cte -> CTEI .)
    OR              reduce using rule 62 (cte -> CTEI .)
    ASSIGN          reduce using rule 62 (cte -> CTEI .)
    RBRACK          reduce using rule 62 (cte -> CTEI .)
    RPAREN          reduce using rule 62 (cte -> CTEI .)
    SEMICOLON       reduce using rule 62 (cte -> CTEI .)
    COMMA           reduce using rule 62 (cte -> CTEI .)


state 47

    (63) cte -> CTEF .

    TIMES           reduce using rule 63 (cte -> CTEF .)
    DIVIDE          reduce using rule 63 (cte -> CTEF .)
    PLUS            reduce using rule 63 (cte -> CTEF .)
    MINUS           reduce using rule 63 (cte -> CTEF .)
    LESS            reduce using rule 63 (cte -> CTEF .)
    GREATER         reduce using rule 63 (cte -> CTEF .)
    EQUALS          reduce using rule 63 (cte -> CTEF .)
    NOTEQUAL        reduce using rule 63 (cte -> CTEF .)
    AND             reduce using rule 63 (cte -> CTEF .)
    OR              reduce using rule 63 (cte -> CTEF .)
    ASSIGN          reduce using rule 63 (cte -> CTEF .)
    RBRACK          reduce using rule 63 (cte -> CTEF .)
    RPAREN          reduce using rule 63 (cte -> CTEF .)
    SEMICOLON       reduce using rule 63 (cte -> CTEF .)
    COMMA           reduce using rule 63 (cte -> CTEF .)


state 48

    (64) cte -> CTEC .

    TIMES           reduce using rule 64 (cte -> CTEC .)
    DIVIDE          reduce using rule 64 (cte -> CTEC .)
    PLUS            reduce using rule 64 (cte -> CTEC .)
    MINUS           reduce using rule 64 (cte -> CTEC .)
    LESS            reduce using rule 64 (cte -> CTEC .)
    GREATER         reduce using rule 64 (cte -> CTEC .)
    EQUALS          reduce using rule 64 (cte -> CTEC .)
    NOTEQUAL        reduce using rule 64 (cte -> CTEC .)
    AND             reduce using rule 64 (cte -> CTEC .)
    OR              reduce using rule 64 (cte -> CTEC .)
    ASSIGN          reduce using rule 64 (cte -> CTEC .)
    RBRACK          reduce using rule 64 (cte -> CTEC .)
    RPAREN          reduce using rule 64 (cte -> CTEC .)
    SEMICOLON       reduce using rule 64 (cte -> CTEC .)
    COMMA           reduce using rule 64 (cte -> CTEC .)


state 49

    (65) cte -> CTES .

    TIMES           reduce using rule 65 (cte -> CTES .)
    DIVIDE          reduce using rule 65 (cte -> CTES .)
    PLUS            reduce using rule 65 (cte -> CTES .)
    MINUS           reduce using rule 65 (cte -> CTES .)
    LESS            reduce using rule 65 (cte -> CTES .)
    GREATER         reduce using rule 65 (cte -> CTES .)
    EQUALS          reduce using rule 65 (cte -> CTES .)
    NOTEQUAL        reduce using rule 65 (cte -> CTES .)
    AND             reduce using rule 65 (cte -> CTES .)
    OR              reduce using rule 65 (cte -> CTES .)
    ASSIGN          reduce using rule 65 (cte -> CTES .)
    RBRACK          reduce using rule 65 (cte -> CTES .)
    RPAREN          reduce using rule 65 (cte -> CTES .)
    SEMICOLON       reduce using rule 65 (cte -> CTES .)
    COMMA           reduce using rule 65 (cte -> CTES .)


state 50

    (66) cte -> CTEB .

    TIMES           reduce using rule 66 (cte -> CTEB .)
    DIVIDE          reduce using rule 66 (cte -> CTEB .)
    PLUS            reduce using rule 66 (cte -> CTEB .)
    MINUS           reduce using rule 66 (cte -> CTEB .)
    LESS            reduce using rule 66 (cte -> CTEB .)
    GREATER         reduce using rule 66 (cte -> CTEB .)
    EQUALS          reduce using rule 66 (cte -> CTEB .)
    NOTEQUAL        reduce using rule 66 (cte -> CTEB .)
    AND             reduce using rule 66 (cte -> CTEB .)
    OR              reduce using rule 66 (cte -> CTEB .)
    ASSIGN          reduce using rule 66 (cte -> CTEB .)
    RBRACK          reduce using rule 66 (cte -> CTEB .)
    RPAREN          reduce using rule 66 (cte -> CTEB .)
    SEMICOLON       reduce using rule 66 (cte -> CTEB .)
    COMMA           reduce using rule 66 (cte -> CTEB .)


state 51

    (1) program -> PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations . LBRACE statements RBRACE END
    (2) var_declarations -> var_declarations . var_declaration
    (5) var_declaration -> . VARIABLE simple_type variables SEMICOLON

    LBRACE          shift and go to state 74
    VARIABLE        shift and go to state 8

    var_declaration                shift and go to state 10

state 52

    (19) parameter -> simple_type . ID

    ID              shift and go to state 75


state 53

    (14) function -> FUNCTION simple_type ID LPAREN parameters . RPAREN var_declarations LBRACE statements statement RBRACE
    (16) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 76
    COMMA           shift and go to state 77


state 54

    (17) parameters -> parameter .

    RPAREN          reduce using rule 17 (parameters -> parameter .)
    COMMA           reduce using rule 17 (parameters -> parameter .)


state 55

    (18) parameters -> empty .

    RPAREN          reduce using rule 18 (parameters -> empty .)
    COMMA           reduce using rule 18 (parameters -> empty .)


state 56

    (15) function -> FUNCTION VOID ID LPAREN parameters . RPAREN var_declarations LBRACE statements RBRACE
    (16) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 78
    COMMA           shift and go to state 77


state 57

    (9) variable -> ID LBRACK expression RBRACK .
    (10) variable -> ID LBRACK expression RBRACK . LBRACK expression RBRACK

    SEMICOLON       reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    COMMA           reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    TIMES           reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    PLUS            reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    MINUS           reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    LESS            reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    GREATER         reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    EQUALS          reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    AND             reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    OR              reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    RBRACK          reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    RPAREN          reduce using rule 9 (variable -> ID LBRACK expression RBRACK .)
    LBRACK          shift and go to state 79


state 58

    (35) expression -> t_expression ASSIGN . t_expression
    (36) t_expression -> . g_expression
    (37) t_expression -> . g_expression boolean_operator g_expression
    (38) g_expression -> . m_expression
    (39) g_expression -> . m_expression comparison_operator m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    t_expression                   shift and go to state 80
    g_expression                   shift and go to state 39
    m_expression                   shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 59

    (37) t_expression -> g_expression boolean_operator . g_expression
    (38) g_expression -> . m_expression
    (39) g_expression -> . m_expression comparison_operator m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    g_expression                   shift and go to state 81
    m_expression                   shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 60

    (53) boolean_operator -> AND .

    LPAREN          reduce using rule 53 (boolean_operator -> AND .)
    ID              reduce using rule 53 (boolean_operator -> AND .)
    CTEI            reduce using rule 53 (boolean_operator -> AND .)
    CTEF            reduce using rule 53 (boolean_operator -> AND .)
    CTEC            reduce using rule 53 (boolean_operator -> AND .)
    CTES            reduce using rule 53 (boolean_operator -> AND .)
    CTEB            reduce using rule 53 (boolean_operator -> AND .)


state 61

    (54) boolean_operator -> OR .

    LPAREN          reduce using rule 54 (boolean_operator -> OR .)
    ID              reduce using rule 54 (boolean_operator -> OR .)
    CTEI            reduce using rule 54 (boolean_operator -> OR .)
    CTEF            reduce using rule 54 (boolean_operator -> OR .)
    CTEC            reduce using rule 54 (boolean_operator -> OR .)
    CTES            reduce using rule 54 (boolean_operator -> OR .)
    CTEB            reduce using rule 54 (boolean_operator -> OR .)


state 62

    (39) g_expression -> m_expression comparison_operator . m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    m_expression                   shift and go to state 82
    term                           shift and go to state 41
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 63

    (47) comparison_operator -> LESS .

    LPAREN          reduce using rule 47 (comparison_operator -> LESS .)
    ID              reduce using rule 47 (comparison_operator -> LESS .)
    CTEI            reduce using rule 47 (comparison_operator -> LESS .)
    CTEF            reduce using rule 47 (comparison_operator -> LESS .)
    CTEC            reduce using rule 47 (comparison_operator -> LESS .)
    CTES            reduce using rule 47 (comparison_operator -> LESS .)
    CTEB            reduce using rule 47 (comparison_operator -> LESS .)


state 64

    (48) comparison_operator -> GREATER .

    LPAREN          reduce using rule 48 (comparison_operator -> GREATER .)
    ID              reduce using rule 48 (comparison_operator -> GREATER .)
    CTEI            reduce using rule 48 (comparison_operator -> GREATER .)
    CTEF            reduce using rule 48 (comparison_operator -> GREATER .)
    CTEC            reduce using rule 48 (comparison_operator -> GREATER .)
    CTES            reduce using rule 48 (comparison_operator -> GREATER .)
    CTEB            reduce using rule 48 (comparison_operator -> GREATER .)


state 65

    (49) comparison_operator -> EQUALS .

    LPAREN          reduce using rule 49 (comparison_operator -> EQUALS .)
    ID              reduce using rule 49 (comparison_operator -> EQUALS .)
    CTEI            reduce using rule 49 (comparison_operator -> EQUALS .)
    CTEF            reduce using rule 49 (comparison_operator -> EQUALS .)
    CTEC            reduce using rule 49 (comparison_operator -> EQUALS .)
    CTES            reduce using rule 49 (comparison_operator -> EQUALS .)
    CTEB            reduce using rule 49 (comparison_operator -> EQUALS .)


state 66

    (50) comparison_operator -> NOTEQUAL .

    LPAREN          reduce using rule 50 (comparison_operator -> NOTEQUAL .)
    ID              reduce using rule 50 (comparison_operator -> NOTEQUAL .)
    CTEI            reduce using rule 50 (comparison_operator -> NOTEQUAL .)
    CTEF            reduce using rule 50 (comparison_operator -> NOTEQUAL .)
    CTEC            reduce using rule 50 (comparison_operator -> NOTEQUAL .)
    CTES            reduce using rule 50 (comparison_operator -> NOTEQUAL .)
    CTEB            reduce using rule 50 (comparison_operator -> NOTEQUAL .)


state 67

    (41) m_expression -> term addition_operator . term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    term                           shift and go to state 83
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 68

    (51) addition_operator -> PLUS .

    LPAREN          reduce using rule 51 (addition_operator -> PLUS .)
    ID              reduce using rule 51 (addition_operator -> PLUS .)
    CTEI            reduce using rule 51 (addition_operator -> PLUS .)
    CTEF            reduce using rule 51 (addition_operator -> PLUS .)
    CTEC            reduce using rule 51 (addition_operator -> PLUS .)
    CTES            reduce using rule 51 (addition_operator -> PLUS .)
    CTEB            reduce using rule 51 (addition_operator -> PLUS .)


state 69

    (52) addition_operator -> MINUS .

    LPAREN          reduce using rule 52 (addition_operator -> MINUS .)
    ID              reduce using rule 52 (addition_operator -> MINUS .)
    CTEI            reduce using rule 52 (addition_operator -> MINUS .)
    CTEF            reduce using rule 52 (addition_operator -> MINUS .)
    CTEC            reduce using rule 52 (addition_operator -> MINUS .)
    CTES            reduce using rule 52 (addition_operator -> MINUS .)
    CTEB            reduce using rule 52 (addition_operator -> MINUS .)


state 70

    (43) term -> factor multiplication_operator . factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    factor                         shift and go to state 84
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 71

    (55) multiplication_operator -> TIMES .

    LPAREN          reduce using rule 55 (multiplication_operator -> TIMES .)
    ID              reduce using rule 55 (multiplication_operator -> TIMES .)
    CTEI            reduce using rule 55 (multiplication_operator -> TIMES .)
    CTEF            reduce using rule 55 (multiplication_operator -> TIMES .)
    CTEC            reduce using rule 55 (multiplication_operator -> TIMES .)
    CTES            reduce using rule 55 (multiplication_operator -> TIMES .)
    CTEB            reduce using rule 55 (multiplication_operator -> TIMES .)


state 72

    (56) multiplication_operator -> DIVIDE .

    LPAREN          reduce using rule 56 (multiplication_operator -> DIVIDE .)
    ID              reduce using rule 56 (multiplication_operator -> DIVIDE .)
    CTEI            reduce using rule 56 (multiplication_operator -> DIVIDE .)
    CTEF            reduce using rule 56 (multiplication_operator -> DIVIDE .)
    CTEC            reduce using rule 56 (multiplication_operator -> DIVIDE .)
    CTES            reduce using rule 56 (multiplication_operator -> DIVIDE .)
    CTEB            reduce using rule 56 (multiplication_operator -> DIVIDE .)


state 73

    (46) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 85


state 74

    (1) program -> PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE . statements RBRACE END
    (20) statements -> . statements statement
    (21) statements -> . statement
    (22) statements -> . empty
    (23) statement -> . assingation
    (24) statement -> . invocation
    (25) statement -> . read
    (26) statement -> . return
    (67) empty -> .
    (29) assingation -> . variable ASSIGN expression SEMICOLON
    (30) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (28) read -> . READ LPAREN variable RPAREN SEMICOLON
    (27) return -> . RETURN expression SEMICOLON
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RBRACE          reduce using rule 67 (empty -> .)
    ID              shift and go to state 86
    READ            shift and go to state 95
    RETURN          shift and go to state 96

  ! ID              [ reduce using rule 67 (empty -> .) ]
  ! READ            [ reduce using rule 67 (empty -> .) ]
  ! RETURN          [ reduce using rule 67 (empty -> .) ]

    statements                     shift and go to state 87
    statement                      shift and go to state 88
    empty                          shift and go to state 89
    assingation                    shift and go to state 90
    invocation                     shift and go to state 91
    read                           shift and go to state 92
    return                         shift and go to state 93
    variable                       shift and go to state 94

state 75

    (19) parameter -> simple_type ID .

    RPAREN          reduce using rule 19 (parameter -> simple_type ID .)
    COMMA           reduce using rule 19 (parameter -> simple_type ID .)


state 76

    (14) function -> FUNCTION simple_type ID LPAREN parameters RPAREN . var_declarations LBRACE statements statement RBRACE
    (2) var_declarations -> . var_declarations var_declaration
    (3) var_declarations -> . var_declaration
    (4) var_declarations -> . empty
    (5) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (67) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 8
    LBRACE          reduce using rule 67 (empty -> .)

  ! VARIABLE        [ reduce using rule 67 (empty -> .) ]

    var_declarations               shift and go to state 97
    var_declaration                shift and go to state 6
    empty                          shift and go to state 7

state 77

    (16) parameters -> parameters COMMA . parameter
    (19) parameter -> . simple_type ID
    (57) simple_type -> . INT
    (58) simple_type -> . FLOAT
    (59) simple_type -> . CHAR
    (60) simple_type -> . STRING
    (61) simple_type -> . BOOLEAN

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 19

    parameter                      shift and go to state 98
    simple_type                    shift and go to state 52

state 78

    (15) function -> FUNCTION VOID ID LPAREN parameters RPAREN . var_declarations LBRACE statements RBRACE
    (2) var_declarations -> . var_declarations var_declaration
    (3) var_declarations -> . var_declaration
    (4) var_declarations -> . empty
    (5) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (67) empty -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 8
    LBRACE          reduce using rule 67 (empty -> .)

  ! VARIABLE        [ reduce using rule 67 (empty -> .) ]

    var_declarations               shift and go to state 99
    var_declaration                shift and go to state 6
    empty                          shift and go to state 7

state 79

    (10) variable -> ID LBRACK expression RBRACK LBRACK . expression RBRACK
    (34) expression -> . t_expression
    (35) expression -> . t_expression ASSIGN t_expression
    (36) t_expression -> . g_expression
    (37) t_expression -> . g_expression boolean_operator g_expression
    (38) g_expression -> . m_expression
    (39) g_expression -> . m_expression comparison_operator m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    expression                     shift and go to state 100
    t_expression                   shift and go to state 38
    g_expression                   shift and go to state 39
    m_expression                   shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 80

    (35) expression -> t_expression ASSIGN t_expression .

    RBRACK          reduce using rule 35 (expression -> t_expression ASSIGN t_expression .)
    RPAREN          reduce using rule 35 (expression -> t_expression ASSIGN t_expression .)
    SEMICOLON       reduce using rule 35 (expression -> t_expression ASSIGN t_expression .)
    COMMA           reduce using rule 35 (expression -> t_expression ASSIGN t_expression .)


state 81

    (37) t_expression -> g_expression boolean_operator g_expression .

    ASSIGN          reduce using rule 37 (t_expression -> g_expression boolean_operator g_expression .)
    RBRACK          reduce using rule 37 (t_expression -> g_expression boolean_operator g_expression .)
    RPAREN          reduce using rule 37 (t_expression -> g_expression boolean_operator g_expression .)
    SEMICOLON       reduce using rule 37 (t_expression -> g_expression boolean_operator g_expression .)
    COMMA           reduce using rule 37 (t_expression -> g_expression boolean_operator g_expression .)


state 82

    (39) g_expression -> m_expression comparison_operator m_expression .

    AND             reduce using rule 39 (g_expression -> m_expression comparison_operator m_expression .)
    OR              reduce using rule 39 (g_expression -> m_expression comparison_operator m_expression .)
    ASSIGN          reduce using rule 39 (g_expression -> m_expression comparison_operator m_expression .)
    RBRACK          reduce using rule 39 (g_expression -> m_expression comparison_operator m_expression .)
    RPAREN          reduce using rule 39 (g_expression -> m_expression comparison_operator m_expression .)
    SEMICOLON       reduce using rule 39 (g_expression -> m_expression comparison_operator m_expression .)
    COMMA           reduce using rule 39 (g_expression -> m_expression comparison_operator m_expression .)


state 83

    (41) m_expression -> term addition_operator term .

    LESS            reduce using rule 41 (m_expression -> term addition_operator term .)
    GREATER         reduce using rule 41 (m_expression -> term addition_operator term .)
    EQUALS          reduce using rule 41 (m_expression -> term addition_operator term .)
    NOTEQUAL        reduce using rule 41 (m_expression -> term addition_operator term .)
    AND             reduce using rule 41 (m_expression -> term addition_operator term .)
    OR              reduce using rule 41 (m_expression -> term addition_operator term .)
    ASSIGN          reduce using rule 41 (m_expression -> term addition_operator term .)
    RBRACK          reduce using rule 41 (m_expression -> term addition_operator term .)
    RPAREN          reduce using rule 41 (m_expression -> term addition_operator term .)
    SEMICOLON       reduce using rule 41 (m_expression -> term addition_operator term .)
    COMMA           reduce using rule 41 (m_expression -> term addition_operator term .)


state 84

    (43) term -> factor multiplication_operator factor .

    PLUS            reduce using rule 43 (term -> factor multiplication_operator factor .)
    MINUS           reduce using rule 43 (term -> factor multiplication_operator factor .)
    LESS            reduce using rule 43 (term -> factor multiplication_operator factor .)
    GREATER         reduce using rule 43 (term -> factor multiplication_operator factor .)
    EQUALS          reduce using rule 43 (term -> factor multiplication_operator factor .)
    NOTEQUAL        reduce using rule 43 (term -> factor multiplication_operator factor .)
    AND             reduce using rule 43 (term -> factor multiplication_operator factor .)
    OR              reduce using rule 43 (term -> factor multiplication_operator factor .)
    ASSIGN          reduce using rule 43 (term -> factor multiplication_operator factor .)
    RBRACK          reduce using rule 43 (term -> factor multiplication_operator factor .)
    RPAREN          reduce using rule 43 (term -> factor multiplication_operator factor .)
    SEMICOLON       reduce using rule 43 (term -> factor multiplication_operator factor .)
    COMMA           reduce using rule 43 (term -> factor multiplication_operator factor .)


state 85

    (46) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 46 (factor -> LPAREN expression RPAREN .)


state 86

    (30) invocation -> ID . LPAREN expressions RPAREN SEMICOLON
    (8) variable -> ID .
    (9) variable -> ID . LBRACK expression RBRACK
    (10) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    LPAREN          shift and go to state 101
    ASSIGN          reduce using rule 8 (variable -> ID .)
    LBRACK          shift and go to state 32


state 87

    (1) program -> PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE statements . RBRACE END
    (20) statements -> statements . statement
    (23) statement -> . assingation
    (24) statement -> . invocation
    (25) statement -> . read
    (26) statement -> . return
    (29) assingation -> . variable ASSIGN expression SEMICOLON
    (30) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (28) read -> . READ LPAREN variable RPAREN SEMICOLON
    (27) return -> . RETURN expression SEMICOLON
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 102
    ID              shift and go to state 86
    READ            shift and go to state 95
    RETURN          shift and go to state 96

    statement                      shift and go to state 103
    assingation                    shift and go to state 90
    invocation                     shift and go to state 91
    read                           shift and go to state 92
    return                         shift and go to state 93
    variable                       shift and go to state 94

state 88

    (21) statements -> statement .

    RBRACE          reduce using rule 21 (statements -> statement .)
    ID              reduce using rule 21 (statements -> statement .)
    READ            reduce using rule 21 (statements -> statement .)
    RETURN          reduce using rule 21 (statements -> statement .)


state 89

    (22) statements -> empty .

    RBRACE          reduce using rule 22 (statements -> empty .)
    ID              reduce using rule 22 (statements -> empty .)
    READ            reduce using rule 22 (statements -> empty .)
    RETURN          reduce using rule 22 (statements -> empty .)


state 90

    (23) statement -> assingation .

    RBRACE          reduce using rule 23 (statement -> assingation .)
    ID              reduce using rule 23 (statement -> assingation .)
    READ            reduce using rule 23 (statement -> assingation .)
    RETURN          reduce using rule 23 (statement -> assingation .)


state 91

    (24) statement -> invocation .

    RBRACE          reduce using rule 24 (statement -> invocation .)
    ID              reduce using rule 24 (statement -> invocation .)
    READ            reduce using rule 24 (statement -> invocation .)
    RETURN          reduce using rule 24 (statement -> invocation .)


state 92

    (25) statement -> read .

    RBRACE          reduce using rule 25 (statement -> read .)
    ID              reduce using rule 25 (statement -> read .)
    READ            reduce using rule 25 (statement -> read .)
    RETURN          reduce using rule 25 (statement -> read .)


state 93

    (26) statement -> return .

    RBRACE          reduce using rule 26 (statement -> return .)
    ID              reduce using rule 26 (statement -> return .)
    READ            reduce using rule 26 (statement -> return .)
    RETURN          reduce using rule 26 (statement -> return .)


state 94

    (29) assingation -> variable . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 104


state 95

    (28) read -> READ . LPAREN variable RPAREN SEMICOLON

    LPAREN          shift and go to state 105


state 96

    (27) return -> RETURN . expression SEMICOLON
    (34) expression -> . t_expression
    (35) expression -> . t_expression ASSIGN t_expression
    (36) t_expression -> . g_expression
    (37) t_expression -> . g_expression boolean_operator g_expression
    (38) g_expression -> . m_expression
    (39) g_expression -> . m_expression comparison_operator m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    expression                     shift and go to state 106
    t_expression                   shift and go to state 38
    g_expression                   shift and go to state 39
    m_expression                   shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 97

    (14) function -> FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations . LBRACE statements statement RBRACE
    (2) var_declarations -> var_declarations . var_declaration
    (5) var_declaration -> . VARIABLE simple_type variables SEMICOLON

    LBRACE          shift and go to state 107
    VARIABLE        shift and go to state 8

    var_declaration                shift and go to state 10

state 98

    (16) parameters -> parameters COMMA parameter .

    RPAREN          reduce using rule 16 (parameters -> parameters COMMA parameter .)
    COMMA           reduce using rule 16 (parameters -> parameters COMMA parameter .)


state 99

    (15) function -> FUNCTION VOID ID LPAREN parameters RPAREN var_declarations . LBRACE statements RBRACE
    (2) var_declarations -> var_declarations . var_declaration
    (5) var_declaration -> . VARIABLE simple_type variables SEMICOLON

    LBRACE          shift and go to state 108
    VARIABLE        shift and go to state 8

    var_declaration                shift and go to state 10

state 100

    (10) variable -> ID LBRACK expression RBRACK LBRACK expression . RBRACK

    RBRACK          shift and go to state 109


state 101

    (30) invocation -> ID LPAREN . expressions RPAREN SEMICOLON
    (31) expressions -> . expressions COMMA expression
    (32) expressions -> . expression
    (33) expressions -> . empty
    (34) expression -> . t_expression
    (35) expression -> . t_expression ASSIGN t_expression
    (67) empty -> .
    (36) t_expression -> . g_expression
    (37) t_expression -> . g_expression boolean_operator g_expression
    (38) g_expression -> . m_expression
    (39) g_expression -> . m_expression comparison_operator m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    RPAREN          reduce using rule 67 (empty -> .)
    COMMA           reduce using rule 67 (empty -> .)
    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    expressions                    shift and go to state 110
    expression                     shift and go to state 111
    empty                          shift and go to state 112
    t_expression                   shift and go to state 38
    g_expression                   shift and go to state 39
    m_expression                   shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 102

    (1) program -> PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE . END

    END             shift and go to state 113


state 103

    (20) statements -> statements statement .

    RBRACE          reduce using rule 20 (statements -> statements statement .)
    ID              reduce using rule 20 (statements -> statements statement .)
    READ            reduce using rule 20 (statements -> statements statement .)
    RETURN          reduce using rule 20 (statements -> statements statement .)


state 104

    (29) assingation -> variable ASSIGN . expression SEMICOLON
    (34) expression -> . t_expression
    (35) expression -> . t_expression ASSIGN t_expression
    (36) t_expression -> . g_expression
    (37) t_expression -> . g_expression boolean_operator g_expression
    (38) g_expression -> . m_expression
    (39) g_expression -> . m_expression comparison_operator m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    variable                       shift and go to state 43
    expression                     shift and go to state 114
    t_expression                   shift and go to state 38
    g_expression                   shift and go to state 39
    m_expression                   shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    cte                            shift and go to state 44

state 105

    (28) read -> READ LPAREN . variable RPAREN SEMICOLON
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 26

    variable                       shift and go to state 115

state 106

    (27) return -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 116


state 107

    (14) function -> FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations LBRACE . statements statement RBRACE
    (20) statements -> . statements statement
    (21) statements -> . statement
    (22) statements -> . empty
    (23) statement -> . assingation
    (24) statement -> . invocation
    (25) statement -> . read
    (26) statement -> . return
    (67) empty -> .
    (29) assingation -> . variable ASSIGN expression SEMICOLON
    (30) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (28) read -> . READ LPAREN variable RPAREN SEMICOLON
    (27) return -> . RETURN expression SEMICOLON
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    ID              shift and go to state 86
    READ            shift and go to state 95
    RETURN          shift and go to state 96

  ! ID              [ reduce using rule 67 (empty -> .) ]
  ! READ            [ reduce using rule 67 (empty -> .) ]
  ! RETURN          [ reduce using rule 67 (empty -> .) ]

    statements                     shift and go to state 117
    statement                      shift and go to state 88
    empty                          shift and go to state 89
    assingation                    shift and go to state 90
    invocation                     shift and go to state 91
    read                           shift and go to state 92
    return                         shift and go to state 93
    variable                       shift and go to state 94

state 108

    (15) function -> FUNCTION VOID ID LPAREN parameters RPAREN var_declarations LBRACE . statements RBRACE
    (20) statements -> . statements statement
    (21) statements -> . statement
    (22) statements -> . empty
    (23) statement -> . assingation
    (24) statement -> . invocation
    (25) statement -> . read
    (26) statement -> . return
    (67) empty -> .
    (29) assingation -> . variable ASSIGN expression SEMICOLON
    (30) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (28) read -> . READ LPAREN variable RPAREN SEMICOLON
    (27) return -> . RETURN expression SEMICOLON
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RBRACE          reduce using rule 67 (empty -> .)
    ID              shift and go to state 86
    READ            shift and go to state 95
    RETURN          shift and go to state 96

  ! ID              [ reduce using rule 67 (empty -> .) ]
  ! READ            [ reduce using rule 67 (empty -> .) ]
  ! RETURN          [ reduce using rule 67 (empty -> .) ]

    statements                     shift and go to state 118
    statement                      shift and go to state 88
    empty                          shift and go to state 89
    assingation                    shift and go to state 90
    invocation                     shift and go to state 91
    read                           shift and go to state 92
    return                         shift and go to state 93
    variable                       shift and go to state 94

state 109

    (10) variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .

    SEMICOLON       reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    COMMA           reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    TIMES           reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    PLUS            reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    MINUS           reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESS            reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATER         reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    EQUALS          reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    AND             reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    OR              reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RBRACK          reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RPAREN          reduce using rule 10 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)


state 110

    (30) invocation -> ID LPAREN expressions . RPAREN SEMICOLON
    (31) expressions -> expressions . COMMA expression

    RPAREN          shift and go to state 119
    COMMA           shift and go to state 120


state 111

    (32) expressions -> expression .

    RPAREN          reduce using rule 32 (expressions -> expression .)
    COMMA           reduce using rule 32 (expressions -> expression .)


state 112

    (33) expressions -> empty .

    RPAREN          reduce using rule 33 (expressions -> empty .)
    COMMA           reduce using rule 33 (expressions -> empty .)


state 113

    (1) program -> PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE END .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON var_declarations functions MAIN LPAREN RPAREN var_declarations LBRACE statements RBRACE END .)


state 114

    (29) assingation -> variable ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 121


state 115

    (28) read -> READ LPAREN variable . RPAREN SEMICOLON

    RPAREN          shift and go to state 122


state 116

    (27) return -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 27 (return -> RETURN expression SEMICOLON .)
    ID              reduce using rule 27 (return -> RETURN expression SEMICOLON .)
    READ            reduce using rule 27 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 27 (return -> RETURN expression SEMICOLON .)


state 117

    (14) function -> FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations LBRACE statements . statement RBRACE
    (20) statements -> statements . statement
    (23) statement -> . assingation
    (24) statement -> . invocation
    (25) statement -> . read
    (26) statement -> . return
    (29) assingation -> . variable ASSIGN expression SEMICOLON
    (30) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (28) read -> . READ LPAREN variable RPAREN SEMICOLON
    (27) return -> . RETURN expression SEMICOLON
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 86
    READ            shift and go to state 95
    RETURN          shift and go to state 96

    statement                      shift and go to state 123
    assingation                    shift and go to state 90
    invocation                     shift and go to state 91
    read                           shift and go to state 92
    return                         shift and go to state 93
    variable                       shift and go to state 94

state 118

    (15) function -> FUNCTION VOID ID LPAREN parameters RPAREN var_declarations LBRACE statements . RBRACE
    (20) statements -> statements . statement
    (23) statement -> . assingation
    (24) statement -> . invocation
    (25) statement -> . read
    (26) statement -> . return
    (29) assingation -> . variable ASSIGN expression SEMICOLON
    (30) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (28) read -> . READ LPAREN variable RPAREN SEMICOLON
    (27) return -> . RETURN expression SEMICOLON
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 124
    ID              shift and go to state 86
    READ            shift and go to state 95
    RETURN          shift and go to state 96

    statement                      shift and go to state 103
    assingation                    shift and go to state 90
    invocation                     shift and go to state 91
    read                           shift and go to state 92
    return                         shift and go to state 93
    variable                       shift and go to state 94

state 119

    (30) invocation -> ID LPAREN expressions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 125


state 120

    (31) expressions -> expressions COMMA . expression
    (34) expression -> . t_expression
    (35) expression -> . t_expression ASSIGN t_expression
    (36) t_expression -> . g_expression
    (37) t_expression -> . g_expression boolean_operator g_expression
    (38) g_expression -> . m_expression
    (39) g_expression -> . m_expression comparison_operator m_expression
    (40) m_expression -> . term
    (41) m_expression -> . term addition_operator term
    (42) term -> . factor
    (43) term -> . factor multiplication_operator factor
    (44) factor -> . variable
    (45) factor -> . cte
    (46) factor -> . LPAREN expression RPAREN
    (8) variable -> . ID
    (9) variable -> . ID LBRACK expression RBRACK
    (10) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (62) cte -> . CTEI
    (63) cte -> . CTEF
    (64) cte -> . CTEC
    (65) cte -> . CTES
    (66) cte -> . CTEB

    LPAREN          shift and go to state 45
    ID              shift and go to state 26
    CTEI            shift and go to state 46
    CTEF            shift and go to state 47
    CTEC            shift and go to state 48
    CTES            shift and go to state 49
    CTEB            shift and go to state 50

    expression                     shift and go to state 126
    t_expression                   shift and go to state 38
    g_expression                   shift and go to state 39
    m_expression                   shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    variable                       shift and go to state 43
    cte                            shift and go to state 44

state 121

    (29) assingation -> variable ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 29 (assingation -> variable ASSIGN expression SEMICOLON .)
    ID              reduce using rule 29 (assingation -> variable ASSIGN expression SEMICOLON .)
    READ            reduce using rule 29 (assingation -> variable ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 29 (assingation -> variable ASSIGN expression SEMICOLON .)


state 122

    (28) read -> READ LPAREN variable RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 127


state 123

    (14) function -> FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations LBRACE statements statement . RBRACE
    (20) statements -> statements statement .

    RBRACE          shift and go to state 128
    ID              reduce using rule 20 (statements -> statements statement .)
    READ            reduce using rule 20 (statements -> statements statement .)
    RETURN          reduce using rule 20 (statements -> statements statement .)


state 124

    (15) function -> FUNCTION VOID ID LPAREN parameters RPAREN var_declarations LBRACE statements RBRACE .

    MAIN            reduce using rule 15 (function -> FUNCTION VOID ID LPAREN parameters RPAREN var_declarations LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 15 (function -> FUNCTION VOID ID LPAREN parameters RPAREN var_declarations LBRACE statements RBRACE .)


state 125

    (30) invocation -> ID LPAREN expressions RPAREN SEMICOLON .

    RBRACE          reduce using rule 30 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    ID              reduce using rule 30 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    READ            reduce using rule 30 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RETURN          reduce using rule 30 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)


state 126

    (31) expressions -> expressions COMMA expression .

    RPAREN          reduce using rule 31 (expressions -> expressions COMMA expression .)
    COMMA           reduce using rule 31 (expressions -> expressions COMMA expression .)


state 127

    (28) read -> READ LPAREN variable RPAREN SEMICOLON .

    RBRACE          reduce using rule 28 (read -> READ LPAREN variable RPAREN SEMICOLON .)
    ID              reduce using rule 28 (read -> READ LPAREN variable RPAREN SEMICOLON .)
    READ            reduce using rule 28 (read -> READ LPAREN variable RPAREN SEMICOLON .)
    RETURN          reduce using rule 28 (read -> READ LPAREN variable RPAREN SEMICOLON .)


state 128

    (14) function -> FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations LBRACE statements statement RBRACE .

    MAIN            reduce using rule 14 (function -> FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations LBRACE statements statement RBRACE .)
    FUNCTION        reduce using rule 14 (function -> FUNCTION simple_type ID LPAREN parameters RPAREN var_declarations LBRACE statements statement RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 5 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 33 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for READ in state 74 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for ID in state 107 resolved as shift
WARNING: shift/reduce conflict for READ in state 107 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 107 resolved as shift
WARNING: shift/reduce conflict for ID in state 108 resolved as shift
WARNING: shift/reduce conflict for READ in state 108 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 108 resolved as shift
