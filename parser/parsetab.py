
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSGREATEREQUALSNOTEQUALLESSTHANGREATERTHANleftPLUSMINUSleftTIMESDIVIDErightASSIGNAND ASSIGN BOOLEAN CHAR COLON COMMA COMMENT CTEB CTEC CTEF CTEI CTES DIVIDE DO ELSE END EQUALS FLOAT FOR FROM FUNCTION GREATER GREATERTHAN ID IF INT LBRACE LBRACK LESS LESSTHAN LPAREN MAIN MINUS NOT NOTEQUAL OR PLUS PRINT PROGRAM RBRACE RBRACK READ RETURN RPAREN SEMICOLON STRING THEN TIMES VARIABLE VOID WHILE\n    program : PROGRAM ID SEMICOLON global_scope var_declarations functions main END\n    \n    global_scope : empty\n    \n    functions : functions function\n                    | function\n                    | empty\n    \n    function : FUNCTION function_signature function_body\n    \n    function_signature : simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations\n                    | VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations\n    \n    function_body : LBRACE statements return_stmt RBRACE\n                | LBRACE statements RBRACE\n    \n    return_stmt : RETURN expression SEMICOLON\n    \n    return_stmt : RETURN SEMICOLON\n    \n    function_1 : empty\n    \n    main : MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE\n    \n    main_scope : empty\n    \n    var_declarations : var_declaration_list\n                    | empty\n    \n    var_declaration_list : var_declaration var_declarations\n    \n    var_declaration : VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration\n    \n    open_var_declaration : empty\n    \n    close_var_declaration : empty\n    \n    variables : variable \n            | variable COMMA variables\n    \n    variable : ID\n            | ID LBRACK expression RBRACK\n            | ID LBRACK expression RBRACK LBRACK expression RBRACK\n    \n    parameters : parameters  COMMA parameter\n    | parameter\n    | empty\n    \n    parameter : simple_type ID \n    \n    statements : statements statement\n    | statement\n    | empty\n    \n    statement : read \n    | assing_to_call\n    | assingation\n    | for\n    | do_while\n    | while\n    | if_else\n    | invocation\n    | if\n    | return\n    | print\n    \n    assing_to_call : variable ASSIGN invocation\n    \n    do_while : DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON \n    \n    for : FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4\n    \n    for_1 : empty\n    \n    for_2 : empty\n    \n    for_3 : empty\n    \n    for_4 : empty\n    \n    while : WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE\n    \n    breadcrumb : empty\n    \n    if : IF LPAREN expression  RPAREN gotof LBRACE statements RBRACE\n    \n    if_else : IF LPAREN  expression  RPAREN  gotof LBRACE statements RBRACE  ELSE goto LBRACE statements RBRACE\n    \n    gotot : empty\n    \n    goto : empty\n    \n    gotof : empty\n    \n    return : RETURN expression SEMICOLON\n    \n    read : READ LPAREN variable_list RPAREN SEMICOLON\n    \n    variable_list : variable\n                  | variable_list COMMA variable\n    \n    invocation : ID invocation_1 LPAREN  invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6    \n    invocation_1 : empty\n    \n    invocation_2 : empty\n    \n    invocation_3 : empty\n    \n    invocation_4 : empty\n    \n    invocation_5 : empty\n    \n    invocation_6 : empty\n    \n    expressions : expressions COMMA invocation_4 expression invocation_3\n                | expression invocation_3\n                | empty\n    \n    expression : t_expression \n                | NOT t_expression\n    \n    print : PRINT LPAREN print_arguments RPAREN SEMICOLON\n    \n    print_arguments : print_argument\n                    | print_arguments COMMA print_argument\n    \n    print_argument : CTES\n                    | expression\n    \n    assingation : variable ASSIGN expression SEMICOLON\n    \n    t_expression : g_expression \n                | t_expression boolean_operator g_expression\n    \n    g_expression : m_expression \n                | g_expression comparison_operator m_expression\n    \n    m_expression : term \n                |  m_expression addition_operator term\n    \n    term : factor \n        |  term multiplication_operator factor\n    \n    factor : variable\n            | cte\n            | expression_parenthesis\n    \n    expression_parenthesis : LPAREN expression RPAREN \n    \n    comparison_operator : LESS\n                        | GREATER\n                        | EQUALS\n                        | NOTEQUAL\n                        | GREATERTHAN\n                        | LESSTHAN\n    \n    addition_operator : PLUS\n                    | MINUS\n    \n    boolean_operator : AND\n                    | OR\n    \n    multiplication_operator : TIMES\n                            | DIVIDE\n    \n    simple_type : INT\n                | FLOAT\n                | CHAR\n                | BOOLEAN\n    \n    cte : CTEI\n        | CTEF\n        | CTEC\n        | CTEB\n    \n    empty :\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,30,],[0,-1,]),'ID':([2,23,24,25,26,27,28,29,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,61,67,68,73,74,75,76,77,83,86,98,99,112,115,116,117,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,145,146,148,149,152,153,154,163,164,169,170,171,173,181,191,196,205,206,207,208,209,212,213,216,217,219,220,223,232,233,235,236,237,238,239,240,241,],[3,34,35,-105,-106,-107,-108,38,57,57,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,38,38,38,-31,38,38,57,114,38,38,38,38,-45,-113,57,38,-59,38,-101,-102,38,-93,-94,-95,-96,-97,-98,38,-99,-100,38,-103,-104,57,-59,38,-80,38,-65,57,38,183,38,57,-60,38,-75,-113,57,38,-67,38,57,57,38,-113,57,-54,-63,-69,-52,-46,57,57,57,-55,57,-113,-47,-51,]),'SEMICOLON':([3,36,37,38,57,74,84,85,87,88,89,90,91,92,93,94,95,96,97,104,108,113,123,144,147,157,158,159,160,161,162,190,200,203,204,222,226,227,],[4,66,-22,-24,-24,109,119,-73,-81,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-23,146,149,-74,-25,171,-82,-84,-86,-88,-92,181,-113,-26,213,-68,-113,232,-56,]),'VARIABLE':([4,5,6,10,39,66,69,70,102,103,197,199,],[-113,11,-2,11,-113,-113,11,-15,-19,-21,11,11,]),'FUNCTION':([4,5,6,7,8,9,10,12,13,14,16,20,32,66,72,102,103,107,],[-113,-113,-2,15,-16,-17,-113,15,-4,-5,-18,-3,-6,-113,-10,-19,-21,-9,]),'MAIN':([4,5,6,7,8,9,10,12,13,14,16,20,32,66,72,102,103,107,],[-113,-113,-2,-113,-16,-17,-113,21,-4,-5,-18,-3,-6,-113,-10,-19,-21,-9,]),'LBRACE':([8,9,10,16,22,39,58,66,69,70,80,81,102,103,106,156,178,179,180,195,197,199,210,211,224,228,229,234,],[-16,-17,-113,-18,33,-113,-113,-113,-113,-15,116,-53,-19,-21,145,-113,-113,196,-58,208,-113,-113,-7,-8,-113,233,-57,236,]),'INT':([11,15,17,18,100,101,142,143,185,],[-113,25,25,-20,-113,-113,25,25,25,]),'FLOAT':([11,15,17,18,100,101,142,143,185,],[-113,26,26,-20,-113,-113,26,26,26,]),'CHAR':([11,15,17,18,100,101,142,143,185,],[-113,27,27,-20,-113,-113,27,27,27,]),'BOOLEAN':([11,15,17,18,100,101,142,143,185,],[-113,28,28,-20,-113,-113,28,28,28,]),'VOID':([15,],[24,]),'COMMA':([18,37,38,85,87,88,89,90,91,92,93,94,95,96,97,100,101,110,111,115,123,138,139,140,141,142,143,144,152,153,157,158,159,160,161,165,166,167,168,172,174,175,176,182,183,192,193,198,200,214,221,],[-20,67,-24,-73,-81,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-113,-113,148,-61,-113,-74,163,-76,-78,-79,-113,-113,-25,-113,-65,-82,-84,-86,-88,-92,185,-28,-29,185,-62,191,-113,-72,-77,-30,-71,-66,-27,-26,-113,-70,]),'RPAREN':([18,31,38,85,87,88,89,90,91,92,93,94,95,96,97,100,101,103,110,111,115,118,123,137,138,139,140,141,142,143,144,152,153,155,157,158,159,160,161,165,166,167,168,172,174,175,176,182,183,184,186,192,193,198,200,214,215,218,221,],[-20,39,-24,-73,-81,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-113,-113,-21,147,-61,-113,156,-74,161,162,-76,-78,-79,-113,-113,-25,-113,-65,178,-82,-84,-86,-88,-92,-113,-28,-29,-113,-62,190,-113,-72,-77,-30,197,199,-71,-66,-27,-26,-113,222,225,-70,]),'END':([19,188,],[30,-14,]),'LPAREN':([21,34,35,54,56,57,59,60,61,62,63,64,65,68,74,76,78,79,81,82,83,86,98,99,115,117,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,152,153,163,169,173,191,194,205,206,207,212,],[31,-113,-113,75,77,-113,-113,83,98,99,100,-13,101,98,98,98,115,-64,-53,117,98,98,98,98,-113,98,98,-101,-102,98,-93,-94,-95,-96,-97,-98,98,-99,-100,98,-103,-104,98,-65,98,98,98,-113,207,98,-67,98,98,]),'RBRACE':([33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,71,73,109,112,116,119,145,146,149,154,170,171,181,196,208,209,213,216,217,219,220,223,232,233,235,236,237,238,239,240,241,],[-113,72,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,107,-31,-12,-45,-113,-59,-113,-11,-80,177,188,-60,-75,-113,-113,217,-113,223,-54,-63,-69,-52,-46,-113,237,-113,-55,239,-113,-47,-51,]),'RETURN':([33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,73,112,116,119,145,146,149,154,170,171,181,196,208,209,213,216,217,219,220,223,232,233,235,236,237,238,239,240,241,],[61,74,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-31,-45,61,-59,61,-59,-80,61,61,-60,-75,61,61,61,-113,61,-54,-63,-69,-52,-46,61,61,61,-55,61,-113,-47,-51,]),'READ':([33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,73,112,116,119,145,146,149,154,170,171,181,196,208,209,213,216,217,219,220,223,232,233,235,236,237,238,239,240,241,],[54,54,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-31,-45,54,-59,54,-59,-80,54,54,-60,-75,54,54,54,-113,54,-54,-63,-69,-52,-46,54,54,54,-55,54,-113,-47,-51,]),'FOR':([33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,73,112,116,119,145,146,149,154,170,171,181,196,208,209,213,216,217,219,220,223,232,233,235,236,237,238,239,240,241,],[56,56,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-31,-45,56,-59,56,-59,-80,56,56,-60,-75,56,56,56,-113,56,-54,-63,-69,-52,-46,56,56,56,-55,56,-113,-47,-51,]),'DO':([33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,73,112,116,119,145,146,149,154,170,171,181,196,208,209,213,216,217,219,220,223,225,230,231,232,233,235,236,237,238,239,240,241,],[58,58,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-31,-45,58,-59,58,-59,-80,58,58,-60,-75,58,58,58,-113,58,-54,-63,-69,-52,-113,234,-50,-46,58,58,58,-55,58,-113,-47,-51,]),'WHILE':([33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,73,112,116,119,145,146,149,154,170,171,177,181,196,208,209,213,216,217,219,220,223,232,233,235,236,237,238,239,240,241,],[59,59,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-31,-45,59,-59,59,-59,-80,59,59,-60,194,-75,59,59,59,-113,59,-54,-63,-69,-52,-46,59,59,59,-55,59,-113,-47,-51,]),'IF':([33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,73,112,116,119,145,146,149,154,170,171,181,196,208,209,213,216,217,219,220,223,232,233,235,236,237,238,239,240,241,],[60,60,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-31,-45,60,-59,60,-59,-80,60,60,-60,-75,60,60,60,-113,60,-54,-63,-69,-52,-46,60,60,60,-55,60,-113,-47,-51,]),'PRINT':([33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,73,112,116,119,145,146,149,154,170,171,181,196,208,209,213,216,217,219,220,223,232,233,235,236,237,238,239,240,241,],[62,62,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-31,-45,62,-59,62,-59,-80,62,62,-60,-75,62,62,62,-113,62,-54,-63,-69,-52,-46,62,62,62,-55,62,-113,-47,-51,]),'TIMES':([38,57,89,90,91,92,93,94,95,96,97,144,159,160,161,200,],[-24,-24,135,-87,-89,-90,-91,-109,-110,-111,-112,-25,135,-88,-92,-26,]),'DIVIDE':([38,57,89,90,91,92,93,94,95,96,97,144,159,160,161,200,],[-24,-24,136,-87,-89,-90,-91,-109,-110,-111,-112,-25,136,-88,-92,-26,]),'PLUS':([38,57,88,89,90,91,92,93,94,95,96,97,144,158,159,160,161,200,],[-24,-24,132,-85,-87,-89,-90,-91,-109,-110,-111,-112,-25,132,-86,-88,-92,-26,]),'MINUS':([38,57,88,89,90,91,92,93,94,95,96,97,144,158,159,160,161,200,],[-24,-24,133,-85,-87,-89,-90,-91,-109,-110,-111,-112,-25,133,-86,-88,-92,-26,]),'LESS':([38,57,87,88,89,90,91,92,93,94,95,96,97,144,157,158,159,160,161,200,],[-24,-24,125,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-25,125,-84,-86,-88,-92,-26,]),'GREATER':([38,57,87,88,89,90,91,92,93,94,95,96,97,144,157,158,159,160,161,200,],[-24,-24,126,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-25,126,-84,-86,-88,-92,-26,]),'EQUALS':([38,57,87,88,89,90,91,92,93,94,95,96,97,144,157,158,159,160,161,200,],[-24,-24,127,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-25,127,-84,-86,-88,-92,-26,]),'NOTEQUAL':([38,57,87,88,89,90,91,92,93,94,95,96,97,144,157,158,159,160,161,200,],[-24,-24,128,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-25,128,-84,-86,-88,-92,-26,]),'GREATERTHAN':([38,57,87,88,89,90,91,92,93,94,95,96,97,144,157,158,159,160,161,200,],[-24,-24,129,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-25,129,-84,-86,-88,-92,-26,]),'LESSTHAN':([38,57,87,88,89,90,91,92,93,94,95,96,97,144,157,158,159,160,161,200,],[-24,-24,130,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-25,130,-84,-86,-88,-92,-26,]),'AND':([38,57,85,87,88,89,90,91,92,93,94,95,96,97,123,144,157,158,159,160,161,200,],[-24,-24,121,-81,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,121,-25,-82,-84,-86,-88,-92,-26,]),'OR':([38,57,85,87,88,89,90,91,92,93,94,95,96,97,123,144,157,158,159,160,161,200,],[-24,-24,122,-81,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,122,-25,-82,-84,-86,-88,-92,-26,]),'RBRACK':([38,85,87,88,89,90,91,92,93,94,95,96,97,105,123,144,157,158,159,160,161,187,200,],[-24,-73,-81,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,144,-74,-25,-82,-84,-86,-88,-92,200,-26,]),'FROM':([38,85,87,88,89,90,91,92,93,94,95,96,97,123,144,157,158,159,160,161,189,200,201,202,],[-24,-73,-81,-83,-85,-87,-89,-90,-91,-109,-110,-111,-112,-74,-25,-82,-84,-86,-88,-92,-113,-26,212,-49,]),'LBRACK':([38,57,144,],[68,68,169,]),'ASSIGN':([55,57,114,144,150,151,200,],[76,-24,-113,-25,173,-48,-26,]),'NOT':([61,68,74,76,83,98,99,115,117,152,153,163,169,173,191,205,206,207,212,],[86,86,86,86,86,86,86,-113,86,86,-65,86,86,86,-113,86,-67,86,86,]),'CTEI':([61,68,74,76,83,86,98,99,115,117,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,152,153,163,169,173,191,205,206,207,212,],[94,94,94,94,94,94,94,94,-113,94,94,-101,-102,94,-93,-94,-95,-96,-97,-98,94,-99,-100,94,-103,-104,94,-65,94,94,94,-113,94,-67,94,94,]),'CTEF':([61,68,74,76,83,86,98,99,115,117,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,152,153,163,169,173,191,205,206,207,212,],[95,95,95,95,95,95,95,95,-113,95,95,-101,-102,95,-93,-94,-95,-96,-97,-98,95,-99,-100,95,-103,-104,95,-65,95,95,95,-113,95,-67,95,95,]),'CTEC':([61,68,74,76,83,86,98,99,115,117,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,152,153,163,169,173,191,205,206,207,212,],[96,96,96,96,96,96,96,96,-113,96,96,-101,-102,96,-93,-94,-95,-96,-97,-98,96,-99,-100,96,-103,-104,96,-65,96,96,96,-113,96,-67,96,96,]),'CTEB':([61,68,74,76,83,86,98,99,115,117,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,152,153,163,169,173,191,205,206,207,212,],[97,97,97,97,97,97,97,97,-113,97,97,-101,-102,97,-93,-94,-95,-96,-97,-98,97,-99,-100,97,-103,-104,97,-65,97,97,97,-113,97,-67,97,97,]),'CTES':([99,163,],[140,140,]),'ELSE':([217,],[224,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_scope':([4,],[5,]),'empty':([4,5,7,10,11,33,34,35,39,57,58,59,66,69,100,101,114,115,116,142,143,145,152,156,165,168,175,178,189,190,191,196,197,199,208,213,214,222,224,225,233,236,239,],[6,9,14,9,18,42,64,64,70,79,81,81,103,9,18,18,151,153,42,167,167,42,176,180,103,103,193,180,202,204,206,42,9,9,42,220,193,227,229,231,42,42,241,]),'var_declarations':([5,10,69,197,199,],[7,16,106,210,211,]),'var_declaration_list':([5,10,69,197,199,],[8,8,8,8,8,]),'var_declaration':([5,10,69,197,199,],[10,10,10,10,10,]),'functions':([7,],[12,]),'function':([7,12,],[13,20,]),'open_var_declaration':([11,100,101,],[17,142,143,]),'main':([12,],[19,]),'function_signature':([15,],[22,]),'simple_type':([15,17,142,143,185,],[23,29,164,164,164,]),'function_body':([22,],[32,]),'variables':([29,67,],[36,104,]),'variable':([29,33,40,61,67,68,74,75,76,83,86,98,99,116,117,120,124,131,134,145,148,152,154,163,169,170,173,196,205,207,208,209,212,216,233,235,236,238,],[37,55,55,91,37,91,91,111,91,91,91,91,91,55,91,91,91,91,91,55,172,91,55,91,91,55,91,55,91,91,55,55,91,55,55,55,55,55,]),'statements':([33,116,145,196,208,233,236,],[40,154,170,209,216,235,238,]),'statement':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[41,73,41,41,73,73,41,41,73,73,41,73,41,73,]),'read':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'assing_to_call':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'assingation':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'for':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'do_while':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'while':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'if_else':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'invocation':([33,40,76,116,145,154,170,196,208,209,216,233,235,236,238,],[50,50,112,50,50,50,50,50,50,50,50,50,50,50,50,]),'if':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'return':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'print':([33,40,116,145,154,170,196,208,209,216,233,235,236,238,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'function_1':([34,35,],[63,65,]),'main_scope':([39,],[69,]),'return_stmt':([40,],[71,]),'invocation_1':([57,],[78,]),'breadcrumb':([58,59,],[80,82,]),'expression':([61,68,74,76,83,98,99,117,152,163,169,173,205,207,212,],[84,105,108,113,118,137,141,155,175,141,187,189,214,215,218,]),'t_expression':([61,68,74,76,83,86,98,99,117,152,163,169,173,205,207,212,],[85,85,85,85,85,123,85,85,85,85,85,85,85,85,85,85,]),'g_expression':([61,68,74,76,83,86,98,99,117,120,152,163,169,173,205,207,212,],[87,87,87,87,87,87,87,87,87,157,87,87,87,87,87,87,87,]),'m_expression':([61,68,74,76,83,86,98,99,117,120,124,152,163,169,173,205,207,212,],[88,88,88,88,88,88,88,88,88,88,158,88,88,88,88,88,88,88,]),'term':([61,68,74,76,83,86,98,99,117,120,124,131,152,163,169,173,205,207,212,],[89,89,89,89,89,89,89,89,89,89,89,159,89,89,89,89,89,89,89,]),'factor':([61,68,74,76,83,86,98,99,117,120,124,131,134,152,163,169,173,205,207,212,],[90,90,90,90,90,90,90,90,90,90,90,90,160,90,90,90,90,90,90,90,]),'cte':([61,68,74,76,83,86,98,99,117,120,124,131,134,152,163,169,173,205,207,212,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'expression_parenthesis':([61,68,74,76,83,86,98,99,117,120,124,131,134,152,163,169,173,205,207,212,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'close_var_declaration':([66,165,168,],[102,184,186,]),'variable_list':([75,],[110,]),'boolean_operator':([85,123,],[120,120,]),'comparison_operator':([87,157,],[124,124,]),'addition_operator':([88,158,],[131,131,]),'multiplication_operator':([89,159,],[134,134,]),'print_arguments':([99,],[138,]),'print_argument':([99,163,],[139,182,]),'for_1':([114,],[150,]),'invocation_2':([115,],[152,]),'parameters':([142,143,],[165,168,]),'parameter':([142,143,185,],[166,166,198,]),'expressions':([152,],[174,]),'gotof':([156,178,],[179,195,]),'invocation_3':([175,214,],[192,221,]),'for_2':([189,],[201,]),'invocation_5':([190,],[203,]),'invocation_4':([191,],[205,]),'invocation_6':([213,],[219,]),'gotot':([222,],[226,]),'goto':([224,],[228,]),'for_3':([225,],[230,]),'for_4':([239,],[240,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END','program',8,'p_program','grammar.py',26),
  ('global_scope -> empty','global_scope',1,'p_global_scope','grammar.py',32),
  ('functions -> functions function','functions',2,'p_functions','grammar.py',49),
  ('functions -> function','functions',1,'p_functions','grammar.py',50),
  ('functions -> empty','functions',1,'p_functions','grammar.py',51),
  ('function -> FUNCTION function_signature function_body','function',3,'p_function','grammar.py',56),
  ('function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations','function_signature',9,'p_function_signature','grammar.py',61),
  ('function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations','function_signature',9,'p_function_signature','grammar.py',62),
  ('function_body -> LBRACE statements return_stmt RBRACE','function_body',4,'p_function_body','grammar.py',68),
  ('function_body -> LBRACE statements RBRACE','function_body',3,'p_function_body','grammar.py',69),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt','grammar.py',81),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_empty_return_stmt','grammar.py',93),
  ('function_1 -> empty','function_1',1,'p_function_1','grammar.py',99),
  ('main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE','main',8,'p_main','grammar.py',118),
  ('main_scope -> empty','main_scope',1,'p_main_scope','grammar.py',128),
  ('var_declarations -> var_declaration_list','var_declarations',1,'p_var_declarations','grammar.py',140),
  ('var_declarations -> empty','var_declarations',1,'p_var_declarations','grammar.py',141),
  ('var_declaration_list -> var_declaration var_declarations','var_declaration_list',2,'p_var_declaration_list','grammar.py',147),
  ('var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration','var_declaration',6,'p_var_declaration','grammar.py',154),
  ('open_var_declaration -> empty','open_var_declaration',1,'p_open_var_declaration','grammar.py',164),
  ('close_var_declaration -> empty','close_var_declaration',1,'p_close_var_declaration','grammar.py',170),
  ('variables -> variable','variables',1,'p_variables','grammar.py',177),
  ('variables -> variable COMMA variables','variables',3,'p_variables','grammar.py',178),
  ('variable -> ID','variable',1,'p_variable','grammar.py',191),
  ('variable -> ID LBRACK expression RBRACK','variable',4,'p_variable','grammar.py',192),
  ('variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK','variable',7,'p_variable','grammar.py',193),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','grammar.py',202),
  ('parameters -> parameter','parameters',1,'p_parameters','grammar.py',203),
  ('parameters -> empty','parameters',1,'p_parameters','grammar.py',204),
  ('parameter -> simple_type ID','parameter',2,'p_parameter','grammar.py',209),
  ('statements -> statements statement','statements',2,'p_statements','grammar.py',221),
  ('statements -> statement','statements',1,'p_statements','grammar.py',222),
  ('statements -> empty','statements',1,'p_statements','grammar.py',223),
  ('statement -> read','statement',1,'p_statement','grammar.py',228),
  ('statement -> assing_to_call','statement',1,'p_statement','grammar.py',229),
  ('statement -> assingation','statement',1,'p_statement','grammar.py',230),
  ('statement -> for','statement',1,'p_statement','grammar.py',231),
  ('statement -> do_while','statement',1,'p_statement','grammar.py',232),
  ('statement -> while','statement',1,'p_statement','grammar.py',233),
  ('statement -> if_else','statement',1,'p_statement','grammar.py',234),
  ('statement -> invocation','statement',1,'p_statement','grammar.py',235),
  ('statement -> if','statement',1,'p_statement','grammar.py',236),
  ('statement -> return','statement',1,'p_statement','grammar.py',237),
  ('statement -> print','statement',1,'p_statement','grammar.py',238),
  ('assing_to_call -> variable ASSIGN invocation','assing_to_call',3,'p_assing_to_call','grammar.py',243),
  ('do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON','do_while',11,'p_do_while','grammar.py',248),
  ('for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4','for',16,'p_for','grammar.py',253),
  ('for_1 -> empty','for_1',1,'p_for_1','grammar.py',258),
  ('for_2 -> empty','for_2',1,'p_for_2','grammar.py',271),
  ('for_3 -> empty','for_3',1,'p_for_3','grammar.py',299),
  ('for_4 -> empty','for_4',1,'p_for_4','grammar.py',335),
  ('while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE','while',9,'p_while','grammar.py',379),
  ('breadcrumb -> empty','breadcrumb',1,'p_breadcrumb','grammar.py',385),
  ('if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE','if',8,'p_if','grammar.py',391),
  ('if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE','if_else',13,'p_if_else','grammar.py',397),
  ('gotot -> empty','gotot',1,'p_gotot','grammar.py',403),
  ('goto -> empty','goto',1,'p_goto','grammar.py',409),
  ('gotof -> empty','gotof',1,'p_gotof','grammar.py',415),
  ('return -> RETURN expression SEMICOLON','return',3,'p_return','grammar.py',421),
  ('read -> READ LPAREN variable_list RPAREN SEMICOLON','read',5,'p_read','grammar.py',426),
  ('variable_list -> variable','variable_list',1,'p_variable_list','grammar.py',435),
  ('variable_list -> variable_list COMMA variable','variable_list',3,'p_variable_list','grammar.py',436),
  ('invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6','invocation',9,'p_invocation','grammar.py',446),
  ('invocation_1 -> empty','invocation_1',1,'p_invocation_1','grammar.py',450),
  ('invocation_2 -> empty','invocation_2',1,'p_invocation_2','grammar.py',457),
  ('invocation_3 -> empty','invocation_3',1,'p_invocation_3','grammar.py',463),
  ('invocation_4 -> empty','invocation_4',1,'p_invocation_4','grammar.py',469),
  ('invocation_5 -> empty','invocation_5',1,'p_invocation_5','grammar.py',475),
  ('invocation_6 -> empty','invocation_6',1,'p_invocation_6','grammar.py',481),
  ('expressions -> expressions COMMA invocation_4 expression invocation_3','expressions',5,'p_expressions','grammar.py',487),
  ('expressions -> expression invocation_3','expressions',2,'p_expressions','grammar.py',488),
  ('expressions -> empty','expressions',1,'p_expressions','grammar.py',489),
  ('expression -> t_expression','expression',1,'p_expression','grammar.py',494),
  ('expression -> NOT t_expression','expression',2,'p_expression','grammar.py',495),
  ('print -> PRINT LPAREN print_arguments RPAREN SEMICOLON','print',5,'p_print','grammar.py',507),
  ('print_arguments -> print_argument','print_arguments',1,'p_print_arguments','grammar.py',512),
  ('print_arguments -> print_arguments COMMA print_argument','print_arguments',3,'p_print_arguments','grammar.py',513),
  ('print_argument -> CTES','print_argument',1,'p_print_argument','grammar.py',525),
  ('print_argument -> expression','print_argument',1,'p_print_argument','grammar.py',526),
  ('assingation -> variable ASSIGN expression SEMICOLON','assingation',4,'p_assingation','grammar.py',552),
  ('t_expression -> g_expression','t_expression',1,'p_t_expression','grammar.py',565),
  ('t_expression -> t_expression boolean_operator g_expression','t_expression',3,'p_t_expression','grammar.py',566),
  ('g_expression -> m_expression','g_expression',1,'p_g_expression','grammar.py',576),
  ('g_expression -> g_expression comparison_operator m_expression','g_expression',3,'p_g_expression','grammar.py',577),
  ('m_expression -> term','m_expression',1,'p_m_expression','grammar.py',587),
  ('m_expression -> m_expression addition_operator term','m_expression',3,'p_m_expression','grammar.py',588),
  ('term -> factor','term',1,'p_term','grammar.py',598),
  ('term -> term multiplication_operator factor','term',3,'p_term','grammar.py',599),
  ('factor -> variable','factor',1,'p_factor','grammar.py',609),
  ('factor -> cte','factor',1,'p_factor','grammar.py',610),
  ('factor -> expression_parenthesis','factor',1,'p_factor','grammar.py',611),
  ('expression_parenthesis -> LPAREN expression RPAREN','expression_parenthesis',3,'p_expression_parenthesis','grammar.py',622),
  ('comparison_operator -> LESS','comparison_operator',1,'p_comparison_operator','grammar.py',629),
  ('comparison_operator -> GREATER','comparison_operator',1,'p_comparison_operator','grammar.py',630),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','grammar.py',631),
  ('comparison_operator -> NOTEQUAL','comparison_operator',1,'p_comparison_operator','grammar.py',632),
  ('comparison_operator -> GREATERTHAN','comparison_operator',1,'p_comparison_operator','grammar.py',633),
  ('comparison_operator -> LESSTHAN','comparison_operator',1,'p_comparison_operator','grammar.py',634),
  ('addition_operator -> PLUS','addition_operator',1,'p_addition_operator','grammar.py',640),
  ('addition_operator -> MINUS','addition_operator',1,'p_addition_operator','grammar.py',641),
  ('boolean_operator -> AND','boolean_operator',1,'p_boolean_operator','grammar.py',647),
  ('boolean_operator -> OR','boolean_operator',1,'p_boolean_operator','grammar.py',648),
  ('multiplication_operator -> TIMES','multiplication_operator',1,'p_multiplication_operator','grammar.py',654),
  ('multiplication_operator -> DIVIDE','multiplication_operator',1,'p_multiplication_operator','grammar.py',655),
  ('simple_type -> INT','simple_type',1,'p_simple_type','grammar.py',661),
  ('simple_type -> FLOAT','simple_type',1,'p_simple_type','grammar.py',662),
  ('simple_type -> CHAR','simple_type',1,'p_simple_type','grammar.py',663),
  ('simple_type -> BOOLEAN','simple_type',1,'p_simple_type','grammar.py',664),
  ('cte -> CTEI','cte',1,'p_cte','grammar.py',670),
  ('cte -> CTEF','cte',1,'p_cte','grammar.py',671),
  ('cte -> CTEC','cte',1,'p_cte','grammar.py',672),
  ('cte -> CTEB','cte',1,'p_cte','grammar.py',673),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',681),
]
