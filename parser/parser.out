Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    FALSE
    THEN
    TRUE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END
Rule 2     global_scope -> empty
Rule 3     functions -> functions function
Rule 4     functions -> function
Rule 5     functions -> empty
Rule 6     function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
Rule 7     function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
Rule 8     function_scope -> empty
Rule 9     main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
Rule 10    main_scope -> empty
Rule 11    var_declarations -> var_declaration var_declarations
Rule 12    var_declarations -> var_declaration
Rule 13    var_declarations -> empty
Rule 14    var_declaration -> VARIABLE simple_type variables SEMICOLON
Rule 15    variables -> variable
Rule 16    variables -> variable COMMA variables
Rule 17    variable -> ID
Rule 18    variable -> ID LBRACK expression RBRACK
Rule 19    variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK
Rule 20    parameters -> parameters COMMA parameter
Rule 21    parameters -> parameter
Rule 22    parameters -> empty
Rule 23    parameter -> simple_type ID
Rule 24    statements -> statements statement
Rule 25    statements -> statement
Rule 26    statements -> empty
Rule 27    statement -> read
Rule 28    statement -> if_else
Rule 29    statement -> invocation
Rule 30    statement -> if
Rule 31    statement -> assingation
Rule 32    statement -> return
Rule 33    statement -> print
Rule 34    if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
Rule 35    if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
Rule 36    goto -> empty
Rule 37    fill -> empty
Rule 38    gotof -> empty
Rule 39    return -> RETURN expression SEMICOLON
Rule 40    read -> READ LPAREN variable_list RPAREN SEMICOLON
Rule 41    variable_list -> variable
Rule 42    variable_list -> variable_list COMMA variable
Rule 43    invocation -> ID LPAREN expressions RPAREN SEMICOLON
Rule 44    expressions -> expressions COMMA expression
Rule 45    expressions -> expression
Rule 46    expressions -> empty
Rule 47    print -> PRINT LPAREN print_arguments RPAREN SEMICOLON
Rule 48    print_arguments -> print_argument
Rule 49    print_arguments -> print_arguments COMMA print_argument
Rule 50    print_argument -> CTES
Rule 51    print_argument -> expression
Rule 52    assingation -> variable ASSIGN expression SEMICOLON
Rule 53    expression -> t_expression
Rule 54    expression -> NOT t_expression
Rule 55    t_expression -> g_expression
Rule 56    t_expression -> t_expression boolean_operator g_expression
Rule 57    g_expression -> m_expression
Rule 58    g_expression -> g_expression comparison_operator m_expression
Rule 59    m_expression -> term
Rule 60    m_expression -> m_expression addition_operator term
Rule 61    term -> factor
Rule 62    term -> term multiplication_operator factor
Rule 63    factor -> variable
Rule 64    factor -> cte
Rule 65    factor -> expression_parenthesis
Rule 66    factor -> invocation
Rule 67    expression_parenthesis -> LPAREN expression RPAREN
Rule 68    comparison_operator -> LESS
Rule 69    comparison_operator -> GREATER
Rule 70    comparison_operator -> EQUALS
Rule 71    comparison_operator -> NOTEQUAL
Rule 72    comparison_operator -> GREATERTHAN
Rule 73    comparison_operator -> LESSTHAN
Rule 74    addition_operator -> PLUS
Rule 75    addition_operator -> MINUS
Rule 76    boolean_operator -> AND
Rule 77    boolean_operator -> OR
Rule 78    multiplication_operator -> TIMES
Rule 79    multiplication_operator -> DIVIDE
Rule 80    simple_type -> INT
Rule 81    simple_type -> FLOAT
Rule 82    simple_type -> CHAR
Rule 83    simple_type -> STRING
Rule 84    simple_type -> BOOLEAN
Rule 85    cte -> CTEI
Rule 86    cte -> CTEF
Rule 87    cte -> CTEC
Rule 88    cte -> CTES
Rule 89    cte -> CTEB
Rule 90    empty -> <empty>

Terminals, with rules where they appear

AND                  : 76
ASSIGN               : 52
BOOLEAN              : 84
CHAR                 : 82
COLON                : 
COMMA                : 16 20 42 44 49
COMMENT              : 
CTEB                 : 89
CTEC                 : 87
CTEF                 : 86
CTEI                 : 85
CTES                 : 50 88
DIVIDE               : 79
ELSE                 : 35
END                  : 1
EQUALS               : 70
FALSE                : 
FLOAT                : 81
FUNCTION             : 6 7
GREATER              : 69
GREATERTHAN          : 72
ID                   : 1 6 7 17 18 19 23 43
IF                   : 34 35
INT                  : 80
LBRACE               : 6 7 9 34 35 35
LBRACK               : 18 19 19
LESS                 : 68
LESSTHAN             : 73
LPAREN               : 6 7 9 34 35 40 43 47 67
MAIN                 : 9
MINUS                : 75
NOT                  : 54
NOTEQUAL             : 71
OR                   : 77
PLUS                 : 74
PRINT                : 47
PROGRAM              : 1
RBRACE               : 6 7 9 34 35 35
RBRACK               : 18 19 19
READ                 : 40
RETURN               : 39
RPAREN               : 6 7 9 34 35 40 43 47 67
SEMICOLON            : 1 14 39 40 43 47 52
STRING               : 83
THEN                 : 
TIMES                : 78
TRUE                 : 
VARIABLE             : 14
VOID                 : 7
WHILE                : 
error                : 

Nonterminals, with rules where they appear

addition_operator    : 60
assingation          : 31
boolean_operator     : 56
comparison_operator  : 58
cte                  : 64
empty                : 2 5 8 10 13 22 26 36 37 38 46
expression           : 18 19 19 34 35 39 44 45 51 52 67
expression_parenthesis : 65
expressions          : 43 44
factor               : 61 62
fill                 : 34
function             : 3 4
function_scope       : 6 7
functions            : 1 3
g_expression         : 55 56 58
global_scope         : 1
goto                 : 35
gotof                : 34 35
if                   : 30
if_else              : 28
invocation           : 29 66
m_expression         : 57 58 60
main                 : 1
main_scope           : 9
multiplication_operator : 62
parameter            : 20 21
parameters           : 6 7 20
print                : 33
print_argument       : 48 49
print_arguments      : 47 49
program              : 0
read                 : 27
return               : 32
simple_type          : 6 14 23
statement            : 24 25
statements           : 6 7 9 24 34 35 35
t_expression         : 53 54 56
term                 : 59 60 62
var_declaration      : 11 12
var_declarations     : 1 6 7 9 11
variable             : 15 16 41 42 52 63
variable_list        : 40 42
variables            : 14 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON global_scope var_declarations functions main END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON global_scope var_declarations functions main END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON global_scope var_declarations functions main END

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . global_scope var_declarations functions main END
    (2) global_scope -> . empty
    (90) empty -> .

    VARIABLE        reduce using rule 90 (empty -> .)
    FUNCTION        reduce using rule 90 (empty -> .)
    MAIN            reduce using rule 90 (empty -> .)

    global_scope                   shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) program -> PROGRAM ID SEMICOLON global_scope . var_declarations functions main END
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (90) empty -> .

    VARIABLE        shift and go to state 10
    FUNCTION        reduce using rule 90 (empty -> .)
    MAIN            reduce using rule 90 (empty -> .)

    var_declarations               shift and go to state 7
    var_declaration                shift and go to state 8
    empty                          shift and go to state 9

state 6

    (2) global_scope -> empty .

    VARIABLE        reduce using rule 2 (global_scope -> empty .)
    FUNCTION        reduce using rule 2 (global_scope -> empty .)
    MAIN            reduce using rule 2 (global_scope -> empty .)


state 7

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations . functions main END
    (3) functions -> . functions function
    (4) functions -> . function
    (5) functions -> . empty
    (6) function -> . FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (7) function -> . FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (90) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 90 (empty -> .)

  ! FUNCTION        [ reduce using rule 90 (empty -> .) ]

    functions                      shift and go to state 11
    function                       shift and go to state 12
    empty                          shift and go to state 13

state 8

    (11) var_declarations -> var_declaration . var_declarations
    (12) var_declarations -> var_declaration .
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (90) empty -> .

  ! reduce/reduce conflict for FUNCTION resolved using rule 12 (var_declarations -> var_declaration .)
  ! reduce/reduce conflict for MAIN resolved using rule 12 (var_declarations -> var_declaration .)
  ! reduce/reduce conflict for LBRACE resolved using rule 12 (var_declarations -> var_declaration .)
    FUNCTION        reduce using rule 12 (var_declarations -> var_declaration .)
    MAIN            reduce using rule 12 (var_declarations -> var_declaration .)
    LBRACE          reduce using rule 12 (var_declarations -> var_declaration .)
    VARIABLE        shift and go to state 10

  ! FUNCTION        [ reduce using rule 90 (empty -> .) ]
  ! MAIN            [ reduce using rule 90 (empty -> .) ]
  ! LBRACE          [ reduce using rule 90 (empty -> .) ]

    var_declaration                shift and go to state 8
    var_declarations               shift and go to state 15
    empty                          shift and go to state 9

state 9

    (13) var_declarations -> empty .

    FUNCTION        reduce using rule 13 (var_declarations -> empty .)
    MAIN            reduce using rule 13 (var_declarations -> empty .)
    LBRACE          reduce using rule 13 (var_declarations -> empty .)


state 10

    (14) var_declaration -> VARIABLE . simple_type variables SEMICOLON
    (80) simple_type -> . INT
    (81) simple_type -> . FLOAT
    (82) simple_type -> . CHAR
    (83) simple_type -> . STRING
    (84) simple_type -> . BOOLEAN

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 21

    simple_type                    shift and go to state 16

state 11

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions . main END
    (3) functions -> functions . function
    (9) main -> . MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
    (6) function -> . FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (7) function -> . FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    MAIN            shift and go to state 24
    FUNCTION        shift and go to state 14

    main                           shift and go to state 22
    function                       shift and go to state 23

state 12

    (4) functions -> function .

    MAIN            reduce using rule 4 (functions -> function .)
    FUNCTION        reduce using rule 4 (functions -> function .)


state 13

    (5) functions -> empty .

    MAIN            reduce using rule 5 (functions -> empty .)
    FUNCTION        reduce using rule 5 (functions -> empty .)


state 14

    (6) function -> FUNCTION . simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (7) function -> FUNCTION . VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (80) simple_type -> . INT
    (81) simple_type -> . FLOAT
    (82) simple_type -> . CHAR
    (83) simple_type -> . STRING
    (84) simple_type -> . BOOLEAN

    VOID            shift and go to state 26
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 21

    simple_type                    shift and go to state 25

state 15

    (11) var_declarations -> var_declaration var_declarations .

    FUNCTION        reduce using rule 11 (var_declarations -> var_declaration var_declarations .)
    MAIN            reduce using rule 11 (var_declarations -> var_declaration var_declarations .)
    LBRACE          reduce using rule 11 (var_declarations -> var_declaration var_declarations .)


state 16

    (14) var_declaration -> VARIABLE simple_type . variables SEMICOLON
    (15) variables -> . variable
    (16) variables -> . variable COMMA variables
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 29

    variables                      shift and go to state 27
    variable                       shift and go to state 28

state 17

    (80) simple_type -> INT .

    ID              reduce using rule 80 (simple_type -> INT .)


state 18

    (81) simple_type -> FLOAT .

    ID              reduce using rule 81 (simple_type -> FLOAT .)


state 19

    (82) simple_type -> CHAR .

    ID              reduce using rule 82 (simple_type -> CHAR .)


state 20

    (83) simple_type -> STRING .

    ID              reduce using rule 83 (simple_type -> STRING .)


state 21

    (84) simple_type -> BOOLEAN .

    ID              reduce using rule 84 (simple_type -> BOOLEAN .)


state 22

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main . END

    END             shift and go to state 30


state 23

    (3) functions -> functions function .

    MAIN            reduce using rule 3 (functions -> functions function .)
    FUNCTION        reduce using rule 3 (functions -> functions function .)


state 24

    (9) main -> MAIN . LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 31


state 25

    (6) function -> FUNCTION simple_type . ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    ID              shift and go to state 32


state 26

    (7) function -> FUNCTION VOID . ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    ID              shift and go to state 33


state 27

    (14) var_declaration -> VARIABLE simple_type variables . SEMICOLON

    SEMICOLON       shift and go to state 34


state 28

    (15) variables -> variable .
    (16) variables -> variable . COMMA variables

    SEMICOLON       reduce using rule 15 (variables -> variable .)
    COMMA           shift and go to state 35


state 29

    (17) variable -> ID .
    (18) variable -> ID . LBRACK expression RBRACK
    (19) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    COMMA           reduce using rule 17 (variable -> ID .)
    SEMICOLON       reduce using rule 17 (variable -> ID .)
    RPAREN          reduce using rule 17 (variable -> ID .)
    LBRACK          shift and go to state 36


state 30

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .)


state 31

    (9) main -> MAIN LPAREN . RPAREN main_scope var_declarations LBRACE statements RBRACE

    RPAREN          shift and go to state 37


state 32

    (6) function -> FUNCTION simple_type ID . LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 38


state 33

    (7) function -> FUNCTION VOID ID . LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 39


state 34

    (14) var_declaration -> VARIABLE simple_type variables SEMICOLON .

    VARIABLE        reduce using rule 14 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)
    FUNCTION        reduce using rule 14 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)
    MAIN            reduce using rule 14 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)
    LBRACE          reduce using rule 14 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)


state 35

    (16) variables -> variable COMMA . variables
    (15) variables -> . variable
    (16) variables -> . variable COMMA variables
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 29

    variable                       shift and go to state 28
    variables                      shift and go to state 40

state 36

    (18) variable -> ID LBRACK . expression RBRACK
    (19) variable -> ID LBRACK . expression RBRACK LBRACK expression RBRACK
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 44
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    expression                     shift and go to state 42
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 37

    (9) main -> MAIN LPAREN RPAREN . main_scope var_declarations LBRACE statements RBRACE
    (10) main_scope -> . empty
    (90) empty -> .

    VARIABLE        reduce using rule 90 (empty -> .)
    LBRACE          reduce using rule 90 (empty -> .)

    main_scope                     shift and go to state 59
    empty                          shift and go to state 60

state 38

    (6) function -> FUNCTION simple_type ID LPAREN . function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (8) function_scope -> . empty
    (90) empty -> .

    INT             reduce using rule 90 (empty -> .)
    FLOAT           reduce using rule 90 (empty -> .)
    CHAR            reduce using rule 90 (empty -> .)
    STRING          reduce using rule 90 (empty -> .)
    BOOLEAN         reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)

    function_scope                 shift and go to state 61
    empty                          shift and go to state 62

state 39

    (7) function -> FUNCTION VOID ID LPAREN . function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (8) function_scope -> . empty
    (90) empty -> .

    INT             reduce using rule 90 (empty -> .)
    FLOAT           reduce using rule 90 (empty -> .)
    CHAR            reduce using rule 90 (empty -> .)
    STRING          reduce using rule 90 (empty -> .)
    BOOLEAN         reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)

    function_scope                 shift and go to state 63
    empty                          shift and go to state 62

state 40

    (16) variables -> variable COMMA variables .

    SEMICOLON       reduce using rule 16 (variables -> variable COMMA variables .)


state 41

    (17) variable -> ID .
    (18) variable -> ID . LBRACK expression RBRACK
    (19) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK
    (43) invocation -> ID . LPAREN expressions RPAREN SEMICOLON

    TIMES           reduce using rule 17 (variable -> ID .)
    DIVIDE          reduce using rule 17 (variable -> ID .)
    PLUS            reduce using rule 17 (variable -> ID .)
    MINUS           reduce using rule 17 (variable -> ID .)
    LESS            reduce using rule 17 (variable -> ID .)
    GREATER         reduce using rule 17 (variable -> ID .)
    EQUALS          reduce using rule 17 (variable -> ID .)
    NOTEQUAL        reduce using rule 17 (variable -> ID .)
    GREATERTHAN     reduce using rule 17 (variable -> ID .)
    LESSTHAN        reduce using rule 17 (variable -> ID .)
    AND             reduce using rule 17 (variable -> ID .)
    OR              reduce using rule 17 (variable -> ID .)
    RBRACK          reduce using rule 17 (variable -> ID .)
    RPAREN          reduce using rule 17 (variable -> ID .)
    COMMA           reduce using rule 17 (variable -> ID .)
    SEMICOLON       reduce using rule 17 (variable -> ID .)
    LBRACK          shift and go to state 36
    LPAREN          shift and go to state 64


state 42

    (18) variable -> ID LBRACK expression . RBRACK
    (19) variable -> ID LBRACK expression . RBRACK LBRACK expression RBRACK

    RBRACK          shift and go to state 65


state 43

    (53) expression -> t_expression .
    (56) t_expression -> t_expression . boolean_operator g_expression
    (76) boolean_operator -> . AND
    (77) boolean_operator -> . OR

    RBRACK          reduce using rule 53 (expression -> t_expression .)
    RPAREN          reduce using rule 53 (expression -> t_expression .)
    COMMA           reduce using rule 53 (expression -> t_expression .)
    SEMICOLON       reduce using rule 53 (expression -> t_expression .)
    AND             shift and go to state 67
    OR              shift and go to state 68

    boolean_operator               shift and go to state 66

state 44

    (54) expression -> NOT . t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    t_expression                   shift and go to state 69
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 45

    (55) t_expression -> g_expression .
    (58) g_expression -> g_expression . comparison_operator m_expression
    (68) comparison_operator -> . LESS
    (69) comparison_operator -> . GREATER
    (70) comparison_operator -> . EQUALS
    (71) comparison_operator -> . NOTEQUAL
    (72) comparison_operator -> . GREATERTHAN
    (73) comparison_operator -> . LESSTHAN

    AND             reduce using rule 55 (t_expression -> g_expression .)
    OR              reduce using rule 55 (t_expression -> g_expression .)
    RBRACK          reduce using rule 55 (t_expression -> g_expression .)
    RPAREN          reduce using rule 55 (t_expression -> g_expression .)
    COMMA           reduce using rule 55 (t_expression -> g_expression .)
    SEMICOLON       reduce using rule 55 (t_expression -> g_expression .)
    LESS            shift and go to state 71
    GREATER         shift and go to state 72
    EQUALS          shift and go to state 73
    NOTEQUAL        shift and go to state 74
    GREATERTHAN     shift and go to state 75
    LESSTHAN        shift and go to state 76

    comparison_operator            shift and go to state 70

state 46

    (57) g_expression -> m_expression .
    (60) m_expression -> m_expression . addition_operator term
    (74) addition_operator -> . PLUS
    (75) addition_operator -> . MINUS

    LESS            reduce using rule 57 (g_expression -> m_expression .)
    GREATER         reduce using rule 57 (g_expression -> m_expression .)
    EQUALS          reduce using rule 57 (g_expression -> m_expression .)
    NOTEQUAL        reduce using rule 57 (g_expression -> m_expression .)
    GREATERTHAN     reduce using rule 57 (g_expression -> m_expression .)
    LESSTHAN        reduce using rule 57 (g_expression -> m_expression .)
    AND             reduce using rule 57 (g_expression -> m_expression .)
    OR              reduce using rule 57 (g_expression -> m_expression .)
    RBRACK          reduce using rule 57 (g_expression -> m_expression .)
    RPAREN          reduce using rule 57 (g_expression -> m_expression .)
    COMMA           reduce using rule 57 (g_expression -> m_expression .)
    SEMICOLON       reduce using rule 57 (g_expression -> m_expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79

    addition_operator              shift and go to state 77

state 47

    (59) m_expression -> term .
    (62) term -> term . multiplication_operator factor
    (78) multiplication_operator -> . TIMES
    (79) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 59 (m_expression -> term .)
    MINUS           reduce using rule 59 (m_expression -> term .)
    LESS            reduce using rule 59 (m_expression -> term .)
    GREATER         reduce using rule 59 (m_expression -> term .)
    EQUALS          reduce using rule 59 (m_expression -> term .)
    NOTEQUAL        reduce using rule 59 (m_expression -> term .)
    GREATERTHAN     reduce using rule 59 (m_expression -> term .)
    LESSTHAN        reduce using rule 59 (m_expression -> term .)
    AND             reduce using rule 59 (m_expression -> term .)
    OR              reduce using rule 59 (m_expression -> term .)
    RBRACK          reduce using rule 59 (m_expression -> term .)
    RPAREN          reduce using rule 59 (m_expression -> term .)
    COMMA           reduce using rule 59 (m_expression -> term .)
    SEMICOLON       reduce using rule 59 (m_expression -> term .)
    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 82

    multiplication_operator        shift and go to state 80

state 48

    (61) term -> factor .

    TIMES           reduce using rule 61 (term -> factor .)
    DIVIDE          reduce using rule 61 (term -> factor .)
    PLUS            reduce using rule 61 (term -> factor .)
    MINUS           reduce using rule 61 (term -> factor .)
    LESS            reduce using rule 61 (term -> factor .)
    GREATER         reduce using rule 61 (term -> factor .)
    EQUALS          reduce using rule 61 (term -> factor .)
    NOTEQUAL        reduce using rule 61 (term -> factor .)
    GREATERTHAN     reduce using rule 61 (term -> factor .)
    LESSTHAN        reduce using rule 61 (term -> factor .)
    AND             reduce using rule 61 (term -> factor .)
    OR              reduce using rule 61 (term -> factor .)
    RBRACK          reduce using rule 61 (term -> factor .)
    RPAREN          reduce using rule 61 (term -> factor .)
    COMMA           reduce using rule 61 (term -> factor .)
    SEMICOLON       reduce using rule 61 (term -> factor .)


state 49

    (63) factor -> variable .

    TIMES           reduce using rule 63 (factor -> variable .)
    DIVIDE          reduce using rule 63 (factor -> variable .)
    PLUS            reduce using rule 63 (factor -> variable .)
    MINUS           reduce using rule 63 (factor -> variable .)
    LESS            reduce using rule 63 (factor -> variable .)
    GREATER         reduce using rule 63 (factor -> variable .)
    EQUALS          reduce using rule 63 (factor -> variable .)
    NOTEQUAL        reduce using rule 63 (factor -> variable .)
    GREATERTHAN     reduce using rule 63 (factor -> variable .)
    LESSTHAN        reduce using rule 63 (factor -> variable .)
    AND             reduce using rule 63 (factor -> variable .)
    OR              reduce using rule 63 (factor -> variable .)
    RBRACK          reduce using rule 63 (factor -> variable .)
    RPAREN          reduce using rule 63 (factor -> variable .)
    COMMA           reduce using rule 63 (factor -> variable .)
    SEMICOLON       reduce using rule 63 (factor -> variable .)


state 50

    (64) factor -> cte .

    TIMES           reduce using rule 64 (factor -> cte .)
    DIVIDE          reduce using rule 64 (factor -> cte .)
    PLUS            reduce using rule 64 (factor -> cte .)
    MINUS           reduce using rule 64 (factor -> cte .)
    LESS            reduce using rule 64 (factor -> cte .)
    GREATER         reduce using rule 64 (factor -> cte .)
    EQUALS          reduce using rule 64 (factor -> cte .)
    NOTEQUAL        reduce using rule 64 (factor -> cte .)
    GREATERTHAN     reduce using rule 64 (factor -> cte .)
    LESSTHAN        reduce using rule 64 (factor -> cte .)
    AND             reduce using rule 64 (factor -> cte .)
    OR              reduce using rule 64 (factor -> cte .)
    RBRACK          reduce using rule 64 (factor -> cte .)
    RPAREN          reduce using rule 64 (factor -> cte .)
    COMMA           reduce using rule 64 (factor -> cte .)
    SEMICOLON       reduce using rule 64 (factor -> cte .)


state 51

    (65) factor -> expression_parenthesis .

    TIMES           reduce using rule 65 (factor -> expression_parenthesis .)
    DIVIDE          reduce using rule 65 (factor -> expression_parenthesis .)
    PLUS            reduce using rule 65 (factor -> expression_parenthesis .)
    MINUS           reduce using rule 65 (factor -> expression_parenthesis .)
    LESS            reduce using rule 65 (factor -> expression_parenthesis .)
    GREATER         reduce using rule 65 (factor -> expression_parenthesis .)
    EQUALS          reduce using rule 65 (factor -> expression_parenthesis .)
    NOTEQUAL        reduce using rule 65 (factor -> expression_parenthesis .)
    GREATERTHAN     reduce using rule 65 (factor -> expression_parenthesis .)
    LESSTHAN        reduce using rule 65 (factor -> expression_parenthesis .)
    AND             reduce using rule 65 (factor -> expression_parenthesis .)
    OR              reduce using rule 65 (factor -> expression_parenthesis .)
    RBRACK          reduce using rule 65 (factor -> expression_parenthesis .)
    RPAREN          reduce using rule 65 (factor -> expression_parenthesis .)
    COMMA           reduce using rule 65 (factor -> expression_parenthesis .)
    SEMICOLON       reduce using rule 65 (factor -> expression_parenthesis .)


state 52

    (66) factor -> invocation .

    TIMES           reduce using rule 66 (factor -> invocation .)
    DIVIDE          reduce using rule 66 (factor -> invocation .)
    PLUS            reduce using rule 66 (factor -> invocation .)
    MINUS           reduce using rule 66 (factor -> invocation .)
    LESS            reduce using rule 66 (factor -> invocation .)
    GREATER         reduce using rule 66 (factor -> invocation .)
    EQUALS          reduce using rule 66 (factor -> invocation .)
    NOTEQUAL        reduce using rule 66 (factor -> invocation .)
    GREATERTHAN     reduce using rule 66 (factor -> invocation .)
    LESSTHAN        reduce using rule 66 (factor -> invocation .)
    AND             reduce using rule 66 (factor -> invocation .)
    OR              reduce using rule 66 (factor -> invocation .)
    RBRACK          reduce using rule 66 (factor -> invocation .)
    RPAREN          reduce using rule 66 (factor -> invocation .)
    COMMA           reduce using rule 66 (factor -> invocation .)
    SEMICOLON       reduce using rule 66 (factor -> invocation .)


state 53

    (85) cte -> CTEI .

    TIMES           reduce using rule 85 (cte -> CTEI .)
    DIVIDE          reduce using rule 85 (cte -> CTEI .)
    PLUS            reduce using rule 85 (cte -> CTEI .)
    MINUS           reduce using rule 85 (cte -> CTEI .)
    LESS            reduce using rule 85 (cte -> CTEI .)
    GREATER         reduce using rule 85 (cte -> CTEI .)
    EQUALS          reduce using rule 85 (cte -> CTEI .)
    NOTEQUAL        reduce using rule 85 (cte -> CTEI .)
    GREATERTHAN     reduce using rule 85 (cte -> CTEI .)
    LESSTHAN        reduce using rule 85 (cte -> CTEI .)
    AND             reduce using rule 85 (cte -> CTEI .)
    OR              reduce using rule 85 (cte -> CTEI .)
    RBRACK          reduce using rule 85 (cte -> CTEI .)
    RPAREN          reduce using rule 85 (cte -> CTEI .)
    COMMA           reduce using rule 85 (cte -> CTEI .)
    SEMICOLON       reduce using rule 85 (cte -> CTEI .)


state 54

    (86) cte -> CTEF .

    TIMES           reduce using rule 86 (cte -> CTEF .)
    DIVIDE          reduce using rule 86 (cte -> CTEF .)
    PLUS            reduce using rule 86 (cte -> CTEF .)
    MINUS           reduce using rule 86 (cte -> CTEF .)
    LESS            reduce using rule 86 (cte -> CTEF .)
    GREATER         reduce using rule 86 (cte -> CTEF .)
    EQUALS          reduce using rule 86 (cte -> CTEF .)
    NOTEQUAL        reduce using rule 86 (cte -> CTEF .)
    GREATERTHAN     reduce using rule 86 (cte -> CTEF .)
    LESSTHAN        reduce using rule 86 (cte -> CTEF .)
    AND             reduce using rule 86 (cte -> CTEF .)
    OR              reduce using rule 86 (cte -> CTEF .)
    RBRACK          reduce using rule 86 (cte -> CTEF .)
    RPAREN          reduce using rule 86 (cte -> CTEF .)
    COMMA           reduce using rule 86 (cte -> CTEF .)
    SEMICOLON       reduce using rule 86 (cte -> CTEF .)


state 55

    (87) cte -> CTEC .

    TIMES           reduce using rule 87 (cte -> CTEC .)
    DIVIDE          reduce using rule 87 (cte -> CTEC .)
    PLUS            reduce using rule 87 (cte -> CTEC .)
    MINUS           reduce using rule 87 (cte -> CTEC .)
    LESS            reduce using rule 87 (cte -> CTEC .)
    GREATER         reduce using rule 87 (cte -> CTEC .)
    EQUALS          reduce using rule 87 (cte -> CTEC .)
    NOTEQUAL        reduce using rule 87 (cte -> CTEC .)
    GREATERTHAN     reduce using rule 87 (cte -> CTEC .)
    LESSTHAN        reduce using rule 87 (cte -> CTEC .)
    AND             reduce using rule 87 (cte -> CTEC .)
    OR              reduce using rule 87 (cte -> CTEC .)
    RBRACK          reduce using rule 87 (cte -> CTEC .)
    RPAREN          reduce using rule 87 (cte -> CTEC .)
    COMMA           reduce using rule 87 (cte -> CTEC .)
    SEMICOLON       reduce using rule 87 (cte -> CTEC .)


state 56

    (88) cte -> CTES .

    TIMES           reduce using rule 88 (cte -> CTES .)
    DIVIDE          reduce using rule 88 (cte -> CTES .)
    PLUS            reduce using rule 88 (cte -> CTES .)
    MINUS           reduce using rule 88 (cte -> CTES .)
    LESS            reduce using rule 88 (cte -> CTES .)
    GREATER         reduce using rule 88 (cte -> CTES .)
    EQUALS          reduce using rule 88 (cte -> CTES .)
    NOTEQUAL        reduce using rule 88 (cte -> CTES .)
    GREATERTHAN     reduce using rule 88 (cte -> CTES .)
    LESSTHAN        reduce using rule 88 (cte -> CTES .)
    AND             reduce using rule 88 (cte -> CTES .)
    OR              reduce using rule 88 (cte -> CTES .)
    RBRACK          reduce using rule 88 (cte -> CTES .)
    RPAREN          reduce using rule 88 (cte -> CTES .)
    COMMA           reduce using rule 88 (cte -> CTES .)
    SEMICOLON       reduce using rule 88 (cte -> CTES .)


state 57

    (89) cte -> CTEB .

    TIMES           reduce using rule 89 (cte -> CTEB .)
    DIVIDE          reduce using rule 89 (cte -> CTEB .)
    PLUS            reduce using rule 89 (cte -> CTEB .)
    MINUS           reduce using rule 89 (cte -> CTEB .)
    LESS            reduce using rule 89 (cte -> CTEB .)
    GREATER         reduce using rule 89 (cte -> CTEB .)
    EQUALS          reduce using rule 89 (cte -> CTEB .)
    NOTEQUAL        reduce using rule 89 (cte -> CTEB .)
    GREATERTHAN     reduce using rule 89 (cte -> CTEB .)
    LESSTHAN        reduce using rule 89 (cte -> CTEB .)
    AND             reduce using rule 89 (cte -> CTEB .)
    OR              reduce using rule 89 (cte -> CTEB .)
    RBRACK          reduce using rule 89 (cte -> CTEB .)
    RPAREN          reduce using rule 89 (cte -> CTEB .)
    COMMA           reduce using rule 89 (cte -> CTEB .)
    SEMICOLON       reduce using rule 89 (cte -> CTEB .)


state 58

    (67) expression_parenthesis -> LPAREN . expression RPAREN
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 44
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    expression                     shift and go to state 83
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 59

    (9) main -> MAIN LPAREN RPAREN main_scope . var_declarations LBRACE statements RBRACE
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (90) empty -> .

    VARIABLE        shift and go to state 10
    LBRACE          reduce using rule 90 (empty -> .)

    var_declarations               shift and go to state 84
    var_declaration                shift and go to state 8
    empty                          shift and go to state 9

state 60

    (10) main_scope -> empty .

    VARIABLE        reduce using rule 10 (main_scope -> empty .)
    LBRACE          reduce using rule 10 (main_scope -> empty .)


state 61

    (6) function -> FUNCTION simple_type ID LPAREN function_scope . parameters RPAREN var_declarations LBRACE statements RBRACE
    (20) parameters -> . parameters COMMA parameter
    (21) parameters -> . parameter
    (22) parameters -> . empty
    (23) parameter -> . simple_type ID
    (90) empty -> .
    (80) simple_type -> . INT
    (81) simple_type -> . FLOAT
    (82) simple_type -> . CHAR
    (83) simple_type -> . STRING
    (84) simple_type -> . BOOLEAN

    RPAREN          reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 21

    simple_type                    shift and go to state 85
    parameters                     shift and go to state 86
    parameter                      shift and go to state 87
    empty                          shift and go to state 88

state 62

    (8) function_scope -> empty .

    INT             reduce using rule 8 (function_scope -> empty .)
    FLOAT           reduce using rule 8 (function_scope -> empty .)
    CHAR            reduce using rule 8 (function_scope -> empty .)
    STRING          reduce using rule 8 (function_scope -> empty .)
    BOOLEAN         reduce using rule 8 (function_scope -> empty .)
    RPAREN          reduce using rule 8 (function_scope -> empty .)
    COMMA           reduce using rule 8 (function_scope -> empty .)


state 63

    (7) function -> FUNCTION VOID ID LPAREN function_scope . parameters RPAREN var_declarations LBRACE statements RBRACE
    (20) parameters -> . parameters COMMA parameter
    (21) parameters -> . parameter
    (22) parameters -> . empty
    (23) parameter -> . simple_type ID
    (90) empty -> .
    (80) simple_type -> . INT
    (81) simple_type -> . FLOAT
    (82) simple_type -> . CHAR
    (83) simple_type -> . STRING
    (84) simple_type -> . BOOLEAN

    RPAREN          reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 21

    parameters                     shift and go to state 89
    parameter                      shift and go to state 87
    empty                          shift and go to state 88
    simple_type                    shift and go to state 85

state 64

    (43) invocation -> ID LPAREN . expressions RPAREN SEMICOLON
    (44) expressions -> . expressions COMMA expression
    (45) expressions -> . expression
    (46) expressions -> . empty
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (90) empty -> .
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 44
    RPAREN          reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    expressions                    shift and go to state 90
    expression                     shift and go to state 91
    empty                          shift and go to state 92
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 65

    (18) variable -> ID LBRACK expression RBRACK .
    (19) variable -> ID LBRACK expression RBRACK . LBRACK expression RBRACK

    COMMA           reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    TIMES           reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    PLUS            reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    MINUS           reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    LESS            reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    GREATER         reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    EQUALS          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    AND             reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    OR              reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    RBRACK          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    RPAREN          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    LBRACK          shift and go to state 93


state 66

    (56) t_expression -> t_expression boolean_operator . g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    g_expression                   shift and go to state 94
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 67

    (76) boolean_operator -> AND .

    ID              reduce using rule 76 (boolean_operator -> AND .)
    CTEI            reduce using rule 76 (boolean_operator -> AND .)
    CTEF            reduce using rule 76 (boolean_operator -> AND .)
    CTEC            reduce using rule 76 (boolean_operator -> AND .)
    CTES            reduce using rule 76 (boolean_operator -> AND .)
    CTEB            reduce using rule 76 (boolean_operator -> AND .)
    LPAREN          reduce using rule 76 (boolean_operator -> AND .)


state 68

    (77) boolean_operator -> OR .

    ID              reduce using rule 77 (boolean_operator -> OR .)
    CTEI            reduce using rule 77 (boolean_operator -> OR .)
    CTEF            reduce using rule 77 (boolean_operator -> OR .)
    CTEC            reduce using rule 77 (boolean_operator -> OR .)
    CTES            reduce using rule 77 (boolean_operator -> OR .)
    CTEB            reduce using rule 77 (boolean_operator -> OR .)
    LPAREN          reduce using rule 77 (boolean_operator -> OR .)


state 69

    (54) expression -> NOT t_expression .
    (56) t_expression -> t_expression . boolean_operator g_expression
    (76) boolean_operator -> . AND
    (77) boolean_operator -> . OR

    RBRACK          reduce using rule 54 (expression -> NOT t_expression .)
    RPAREN          reduce using rule 54 (expression -> NOT t_expression .)
    COMMA           reduce using rule 54 (expression -> NOT t_expression .)
    SEMICOLON       reduce using rule 54 (expression -> NOT t_expression .)
    AND             shift and go to state 67
    OR              shift and go to state 68

    boolean_operator               shift and go to state 66

state 70

    (58) g_expression -> g_expression comparison_operator . m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    m_expression                   shift and go to state 95
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 71

    (68) comparison_operator -> LESS .

    ID              reduce using rule 68 (comparison_operator -> LESS .)
    CTEI            reduce using rule 68 (comparison_operator -> LESS .)
    CTEF            reduce using rule 68 (comparison_operator -> LESS .)
    CTEC            reduce using rule 68 (comparison_operator -> LESS .)
    CTES            reduce using rule 68 (comparison_operator -> LESS .)
    CTEB            reduce using rule 68 (comparison_operator -> LESS .)
    LPAREN          reduce using rule 68 (comparison_operator -> LESS .)


state 72

    (69) comparison_operator -> GREATER .

    ID              reduce using rule 69 (comparison_operator -> GREATER .)
    CTEI            reduce using rule 69 (comparison_operator -> GREATER .)
    CTEF            reduce using rule 69 (comparison_operator -> GREATER .)
    CTEC            reduce using rule 69 (comparison_operator -> GREATER .)
    CTES            reduce using rule 69 (comparison_operator -> GREATER .)
    CTEB            reduce using rule 69 (comparison_operator -> GREATER .)
    LPAREN          reduce using rule 69 (comparison_operator -> GREATER .)


state 73

    (70) comparison_operator -> EQUALS .

    ID              reduce using rule 70 (comparison_operator -> EQUALS .)
    CTEI            reduce using rule 70 (comparison_operator -> EQUALS .)
    CTEF            reduce using rule 70 (comparison_operator -> EQUALS .)
    CTEC            reduce using rule 70 (comparison_operator -> EQUALS .)
    CTES            reduce using rule 70 (comparison_operator -> EQUALS .)
    CTEB            reduce using rule 70 (comparison_operator -> EQUALS .)
    LPAREN          reduce using rule 70 (comparison_operator -> EQUALS .)


state 74

    (71) comparison_operator -> NOTEQUAL .

    ID              reduce using rule 71 (comparison_operator -> NOTEQUAL .)
    CTEI            reduce using rule 71 (comparison_operator -> NOTEQUAL .)
    CTEF            reduce using rule 71 (comparison_operator -> NOTEQUAL .)
    CTEC            reduce using rule 71 (comparison_operator -> NOTEQUAL .)
    CTES            reduce using rule 71 (comparison_operator -> NOTEQUAL .)
    CTEB            reduce using rule 71 (comparison_operator -> NOTEQUAL .)
    LPAREN          reduce using rule 71 (comparison_operator -> NOTEQUAL .)


state 75

    (72) comparison_operator -> GREATERTHAN .

    ID              reduce using rule 72 (comparison_operator -> GREATERTHAN .)
    CTEI            reduce using rule 72 (comparison_operator -> GREATERTHAN .)
    CTEF            reduce using rule 72 (comparison_operator -> GREATERTHAN .)
    CTEC            reduce using rule 72 (comparison_operator -> GREATERTHAN .)
    CTES            reduce using rule 72 (comparison_operator -> GREATERTHAN .)
    CTEB            reduce using rule 72 (comparison_operator -> GREATERTHAN .)
    LPAREN          reduce using rule 72 (comparison_operator -> GREATERTHAN .)


state 76

    (73) comparison_operator -> LESSTHAN .

    ID              reduce using rule 73 (comparison_operator -> LESSTHAN .)
    CTEI            reduce using rule 73 (comparison_operator -> LESSTHAN .)
    CTEF            reduce using rule 73 (comparison_operator -> LESSTHAN .)
    CTEC            reduce using rule 73 (comparison_operator -> LESSTHAN .)
    CTES            reduce using rule 73 (comparison_operator -> LESSTHAN .)
    CTEB            reduce using rule 73 (comparison_operator -> LESSTHAN .)
    LPAREN          reduce using rule 73 (comparison_operator -> LESSTHAN .)


state 77

    (60) m_expression -> m_expression addition_operator . term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    term                           shift and go to state 96
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 78

    (74) addition_operator -> PLUS .

    ID              reduce using rule 74 (addition_operator -> PLUS .)
    CTEI            reduce using rule 74 (addition_operator -> PLUS .)
    CTEF            reduce using rule 74 (addition_operator -> PLUS .)
    CTEC            reduce using rule 74 (addition_operator -> PLUS .)
    CTES            reduce using rule 74 (addition_operator -> PLUS .)
    CTEB            reduce using rule 74 (addition_operator -> PLUS .)
    LPAREN          reduce using rule 74 (addition_operator -> PLUS .)


state 79

    (75) addition_operator -> MINUS .

    ID              reduce using rule 75 (addition_operator -> MINUS .)
    CTEI            reduce using rule 75 (addition_operator -> MINUS .)
    CTEF            reduce using rule 75 (addition_operator -> MINUS .)
    CTEC            reduce using rule 75 (addition_operator -> MINUS .)
    CTES            reduce using rule 75 (addition_operator -> MINUS .)
    CTEB            reduce using rule 75 (addition_operator -> MINUS .)
    LPAREN          reduce using rule 75 (addition_operator -> MINUS .)


state 80

    (62) term -> term multiplication_operator . factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    factor                         shift and go to state 97
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 81

    (78) multiplication_operator -> TIMES .

    ID              reduce using rule 78 (multiplication_operator -> TIMES .)
    CTEI            reduce using rule 78 (multiplication_operator -> TIMES .)
    CTEF            reduce using rule 78 (multiplication_operator -> TIMES .)
    CTEC            reduce using rule 78 (multiplication_operator -> TIMES .)
    CTES            reduce using rule 78 (multiplication_operator -> TIMES .)
    CTEB            reduce using rule 78 (multiplication_operator -> TIMES .)
    LPAREN          reduce using rule 78 (multiplication_operator -> TIMES .)


state 82

    (79) multiplication_operator -> DIVIDE .

    ID              reduce using rule 79 (multiplication_operator -> DIVIDE .)
    CTEI            reduce using rule 79 (multiplication_operator -> DIVIDE .)
    CTEF            reduce using rule 79 (multiplication_operator -> DIVIDE .)
    CTEC            reduce using rule 79 (multiplication_operator -> DIVIDE .)
    CTES            reduce using rule 79 (multiplication_operator -> DIVIDE .)
    CTEB            reduce using rule 79 (multiplication_operator -> DIVIDE .)
    LPAREN          reduce using rule 79 (multiplication_operator -> DIVIDE .)


state 83

    (67) expression_parenthesis -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 98


state 84

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 99


state 85

    (23) parameter -> simple_type . ID

    ID              shift and go to state 100


state 86

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters . RPAREN var_declarations LBRACE statements RBRACE
    (20) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 101
    COMMA           shift and go to state 102


state 87

    (21) parameters -> parameter .

    RPAREN          reduce using rule 21 (parameters -> parameter .)
    COMMA           reduce using rule 21 (parameters -> parameter .)


state 88

    (22) parameters -> empty .

    RPAREN          reduce using rule 22 (parameters -> empty .)
    COMMA           reduce using rule 22 (parameters -> empty .)


state 89

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters . RPAREN var_declarations LBRACE statements RBRACE
    (20) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 103
    COMMA           shift and go to state 102


state 90

    (43) invocation -> ID LPAREN expressions . RPAREN SEMICOLON
    (44) expressions -> expressions . COMMA expression

    RPAREN          shift and go to state 104
    COMMA           shift and go to state 105


state 91

    (45) expressions -> expression .

    RPAREN          reduce using rule 45 (expressions -> expression .)
    COMMA           reduce using rule 45 (expressions -> expression .)


state 92

    (46) expressions -> empty .

    RPAREN          reduce using rule 46 (expressions -> empty .)
    COMMA           reduce using rule 46 (expressions -> empty .)


state 93

    (19) variable -> ID LBRACK expression RBRACK LBRACK . expression RBRACK
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 44
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    expression                     shift and go to state 106
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 94

    (56) t_expression -> t_expression boolean_operator g_expression .
    (58) g_expression -> g_expression . comparison_operator m_expression
    (68) comparison_operator -> . LESS
    (69) comparison_operator -> . GREATER
    (70) comparison_operator -> . EQUALS
    (71) comparison_operator -> . NOTEQUAL
    (72) comparison_operator -> . GREATERTHAN
    (73) comparison_operator -> . LESSTHAN

    AND             reduce using rule 56 (t_expression -> t_expression boolean_operator g_expression .)
    OR              reduce using rule 56 (t_expression -> t_expression boolean_operator g_expression .)
    RBRACK          reduce using rule 56 (t_expression -> t_expression boolean_operator g_expression .)
    RPAREN          reduce using rule 56 (t_expression -> t_expression boolean_operator g_expression .)
    COMMA           reduce using rule 56 (t_expression -> t_expression boolean_operator g_expression .)
    SEMICOLON       reduce using rule 56 (t_expression -> t_expression boolean_operator g_expression .)
    LESS            shift and go to state 71
    GREATER         shift and go to state 72
    EQUALS          shift and go to state 73
    NOTEQUAL        shift and go to state 74
    GREATERTHAN     shift and go to state 75
    LESSTHAN        shift and go to state 76

    comparison_operator            shift and go to state 70

state 95

    (58) g_expression -> g_expression comparison_operator m_expression .
    (60) m_expression -> m_expression . addition_operator term
    (74) addition_operator -> . PLUS
    (75) addition_operator -> . MINUS

    LESS            reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    GREATER         reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    EQUALS          reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    NOTEQUAL        reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    GREATERTHAN     reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    LESSTHAN        reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    AND             reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    OR              reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    RBRACK          reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    RPAREN          reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    COMMA           reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    SEMICOLON       reduce using rule 58 (g_expression -> g_expression comparison_operator m_expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79

    addition_operator              shift and go to state 77

state 96

    (60) m_expression -> m_expression addition_operator term .
    (62) term -> term . multiplication_operator factor
    (78) multiplication_operator -> . TIMES
    (79) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    MINUS           reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    LESS            reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    GREATER         reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    EQUALS          reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    NOTEQUAL        reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    GREATERTHAN     reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    LESSTHAN        reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    AND             reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    OR              reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    RBRACK          reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    RPAREN          reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    COMMA           reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    SEMICOLON       reduce using rule 60 (m_expression -> m_expression addition_operator term .)
    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 82

    multiplication_operator        shift and go to state 80

state 97

    (62) term -> term multiplication_operator factor .

    TIMES           reduce using rule 62 (term -> term multiplication_operator factor .)
    DIVIDE          reduce using rule 62 (term -> term multiplication_operator factor .)
    PLUS            reduce using rule 62 (term -> term multiplication_operator factor .)
    MINUS           reduce using rule 62 (term -> term multiplication_operator factor .)
    LESS            reduce using rule 62 (term -> term multiplication_operator factor .)
    GREATER         reduce using rule 62 (term -> term multiplication_operator factor .)
    EQUALS          reduce using rule 62 (term -> term multiplication_operator factor .)
    NOTEQUAL        reduce using rule 62 (term -> term multiplication_operator factor .)
    GREATERTHAN     reduce using rule 62 (term -> term multiplication_operator factor .)
    LESSTHAN        reduce using rule 62 (term -> term multiplication_operator factor .)
    AND             reduce using rule 62 (term -> term multiplication_operator factor .)
    OR              reduce using rule 62 (term -> term multiplication_operator factor .)
    RBRACK          reduce using rule 62 (term -> term multiplication_operator factor .)
    RPAREN          reduce using rule 62 (term -> term multiplication_operator factor .)
    COMMA           reduce using rule 62 (term -> term multiplication_operator factor .)
    SEMICOLON       reduce using rule 62 (term -> term multiplication_operator factor .)


state 98

    (67) expression_parenthesis -> LPAREN expression RPAREN .

    TIMES           reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESS            reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    AND             reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    OR              reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 67 (expression_parenthesis -> LPAREN expression RPAREN .)


state 99

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE . statements RBRACE
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (90) empty -> .
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 90 (empty -> .)
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

  ! READ            [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! PRINT           [ reduce using rule 90 (empty -> .) ]

    statements                     shift and go to state 107
    statement                      shift and go to state 108
    empty                          shift and go to state 109
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 100

    (23) parameter -> simple_type ID .

    RPAREN          reduce using rule 23 (parameter -> simple_type ID .)
    COMMA           reduce using rule 23 (parameter -> simple_type ID .)


state 101

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN . var_declarations LBRACE statements RBRACE
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (90) empty -> .

    VARIABLE        shift and go to state 10
    LBRACE          reduce using rule 90 (empty -> .)

    var_declarations               shift and go to state 123
    var_declaration                shift and go to state 8
    empty                          shift and go to state 9

state 102

    (20) parameters -> parameters COMMA . parameter
    (23) parameter -> . simple_type ID
    (80) simple_type -> . INT
    (81) simple_type -> . FLOAT
    (82) simple_type -> . CHAR
    (83) simple_type -> . STRING
    (84) simple_type -> . BOOLEAN

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    STRING          shift and go to state 20
    BOOLEAN         shift and go to state 21

    parameter                      shift and go to state 124
    simple_type                    shift and go to state 85

state 103

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN . var_declarations LBRACE statements RBRACE
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (90) empty -> .

    VARIABLE        shift and go to state 10
    LBRACE          reduce using rule 90 (empty -> .)

    var_declarations               shift and go to state 125
    var_declaration                shift and go to state 8
    empty                          shift and go to state 9

state 104

    (43) invocation -> ID LPAREN expressions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 126


state 105

    (44) expressions -> expressions COMMA . expression
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 44
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    expression                     shift and go to state 127
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 106

    (19) variable -> ID LBRACK expression RBRACK LBRACK expression . RBRACK

    RBRACK          shift and go to state 128


state 107

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements . RBRACE
    (24) statements -> statements . statement
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 129
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

    statement                      shift and go to state 130
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 108

    (25) statements -> statement .

    RBRACE          reduce using rule 25 (statements -> statement .)
    READ            reduce using rule 25 (statements -> statement .)
    IF              reduce using rule 25 (statements -> statement .)
    ID              reduce using rule 25 (statements -> statement .)
    RETURN          reduce using rule 25 (statements -> statement .)
    PRINT           reduce using rule 25 (statements -> statement .)


state 109

    (26) statements -> empty .

    RBRACE          reduce using rule 26 (statements -> empty .)
    READ            reduce using rule 26 (statements -> empty .)
    IF              reduce using rule 26 (statements -> empty .)
    ID              reduce using rule 26 (statements -> empty .)
    RETURN          reduce using rule 26 (statements -> empty .)
    PRINT           reduce using rule 26 (statements -> empty .)


state 110

    (27) statement -> read .

    RBRACE          reduce using rule 27 (statement -> read .)
    READ            reduce using rule 27 (statement -> read .)
    IF              reduce using rule 27 (statement -> read .)
    ID              reduce using rule 27 (statement -> read .)
    RETURN          reduce using rule 27 (statement -> read .)
    PRINT           reduce using rule 27 (statement -> read .)


state 111

    (28) statement -> if_else .

    RBRACE          reduce using rule 28 (statement -> if_else .)
    READ            reduce using rule 28 (statement -> if_else .)
    IF              reduce using rule 28 (statement -> if_else .)
    ID              reduce using rule 28 (statement -> if_else .)
    RETURN          reduce using rule 28 (statement -> if_else .)
    PRINT           reduce using rule 28 (statement -> if_else .)


state 112

    (29) statement -> invocation .

    RBRACE          reduce using rule 29 (statement -> invocation .)
    READ            reduce using rule 29 (statement -> invocation .)
    IF              reduce using rule 29 (statement -> invocation .)
    ID              reduce using rule 29 (statement -> invocation .)
    RETURN          reduce using rule 29 (statement -> invocation .)
    PRINT           reduce using rule 29 (statement -> invocation .)


state 113

    (30) statement -> if .

    RBRACE          reduce using rule 30 (statement -> if .)
    READ            reduce using rule 30 (statement -> if .)
    IF              reduce using rule 30 (statement -> if .)
    ID              reduce using rule 30 (statement -> if .)
    RETURN          reduce using rule 30 (statement -> if .)
    PRINT           reduce using rule 30 (statement -> if .)


state 114

    (31) statement -> assingation .

    RBRACE          reduce using rule 31 (statement -> assingation .)
    READ            reduce using rule 31 (statement -> assingation .)
    IF              reduce using rule 31 (statement -> assingation .)
    ID              reduce using rule 31 (statement -> assingation .)
    RETURN          reduce using rule 31 (statement -> assingation .)
    PRINT           reduce using rule 31 (statement -> assingation .)


state 115

    (32) statement -> return .

    RBRACE          reduce using rule 32 (statement -> return .)
    READ            reduce using rule 32 (statement -> return .)
    IF              reduce using rule 32 (statement -> return .)
    ID              reduce using rule 32 (statement -> return .)
    RETURN          reduce using rule 32 (statement -> return .)
    PRINT           reduce using rule 32 (statement -> return .)


state 116

    (33) statement -> print .

    RBRACE          reduce using rule 33 (statement -> print .)
    READ            reduce using rule 33 (statement -> print .)
    IF              reduce using rule 33 (statement -> print .)
    ID              reduce using rule 33 (statement -> print .)
    RETURN          reduce using rule 33 (statement -> print .)
    PRINT           reduce using rule 33 (statement -> print .)


state 117

    (40) read -> READ . LPAREN variable_list RPAREN SEMICOLON

    LPAREN          shift and go to state 131


state 118

    (35) if_else -> IF . LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (34) if -> IF . LPAREN expression RPAREN gotof LBRACE statements RBRACE fill

    LPAREN          shift and go to state 132


state 119

    (43) invocation -> ID . LPAREN expressions RPAREN SEMICOLON
    (17) variable -> ID .
    (18) variable -> ID . LBRACK expression RBRACK
    (19) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    LPAREN          shift and go to state 64
    ASSIGN          reduce using rule 17 (variable -> ID .)
    LBRACK          shift and go to state 36


state 120

    (52) assingation -> variable . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 133


state 121

    (39) return -> RETURN . expression SEMICOLON
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 44
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    expression                     shift and go to state 134
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 122

    (47) print -> PRINT . LPAREN print_arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 135


state 123

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 136


state 124

    (20) parameters -> parameters COMMA parameter .

    RPAREN          reduce using rule 20 (parameters -> parameters COMMA parameter .)
    COMMA           reduce using rule 20 (parameters -> parameters COMMA parameter .)


state 125

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 137


state 126

    (43) invocation -> ID LPAREN expressions RPAREN SEMICOLON .

    TIMES           reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    PLUS            reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    MINUS           reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    LESS            reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    GREATER         reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    EQUALS          reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    GREATERTHAN     reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    AND             reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    OR              reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RBRACK          reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RPAREN          reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    COMMA           reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RBRACE          reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    READ            reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    IF              reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    ID              reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RETURN          reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    PRINT           reduce using rule 43 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)


state 127

    (44) expressions -> expressions COMMA expression .

    RPAREN          reduce using rule 44 (expressions -> expressions COMMA expression .)
    COMMA           reduce using rule 44 (expressions -> expressions COMMA expression .)


state 128

    (19) variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .

    COMMA           reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    TIMES           reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    PLUS            reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    MINUS           reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESS            reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATER         reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    EQUALS          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    AND             reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    OR              reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RBRACK          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RPAREN          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)


state 129

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .

    END             reduce using rule 9 (main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .)


state 130

    (24) statements -> statements statement .

    RBRACE          reduce using rule 24 (statements -> statements statement .)
    READ            reduce using rule 24 (statements -> statements statement .)
    IF              reduce using rule 24 (statements -> statements statement .)
    ID              reduce using rule 24 (statements -> statements statement .)
    RETURN          reduce using rule 24 (statements -> statements statement .)
    PRINT           reduce using rule 24 (statements -> statements statement .)


state 131

    (40) read -> READ LPAREN . variable_list RPAREN SEMICOLON
    (41) variable_list -> . variable
    (42) variable_list -> . variable_list COMMA variable
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 29

    variable_list                  shift and go to state 138
    variable                       shift and go to state 139

state 132

    (35) if_else -> IF LPAREN . expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (34) if -> IF LPAREN . expression RPAREN gotof LBRACE statements RBRACE fill
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 44
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    expression                     shift and go to state 140
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 133

    (52) assingation -> variable ASSIGN . expression SEMICOLON
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 44
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTES            shift and go to state 56
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    variable                       shift and go to state 49
    expression                     shift and go to state 141
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 134

    (39) return -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 142


state 135

    (47) print -> PRINT LPAREN . print_arguments RPAREN SEMICOLON
    (48) print_arguments -> . print_argument
    (49) print_arguments -> . print_arguments COMMA print_argument
    (50) print_argument -> . CTES
    (51) print_argument -> . expression
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    CTES            shift and go to state 145
    NOT             shift and go to state 44
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    print_arguments                shift and go to state 143
    print_argument                 shift and go to state 144
    expression                     shift and go to state 146
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 136

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE . statements RBRACE
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (90) empty -> .
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 90 (empty -> .)
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

  ! READ            [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! PRINT           [ reduce using rule 90 (empty -> .) ]

    statements                     shift and go to state 147
    statement                      shift and go to state 108
    empty                          shift and go to state 109
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 137

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE . statements RBRACE
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (90) empty -> .
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 90 (empty -> .)
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

  ! READ            [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! PRINT           [ reduce using rule 90 (empty -> .) ]

    statements                     shift and go to state 148
    statement                      shift and go to state 108
    empty                          shift and go to state 109
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 138

    (40) read -> READ LPAREN variable_list . RPAREN SEMICOLON
    (42) variable_list -> variable_list . COMMA variable

    RPAREN          shift and go to state 149
    COMMA           shift and go to state 150


state 139

    (41) variable_list -> variable .

    RPAREN          reduce using rule 41 (variable_list -> variable .)
    COMMA           reduce using rule 41 (variable_list -> variable .)


state 140

    (35) if_else -> IF LPAREN expression . RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (34) if -> IF LPAREN expression . RPAREN gotof LBRACE statements RBRACE fill

    RPAREN          shift and go to state 151


state 141

    (52) assingation -> variable ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 152


state 142

    (39) return -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 39 (return -> RETURN expression SEMICOLON .)
    READ            reduce using rule 39 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 39 (return -> RETURN expression SEMICOLON .)
    ID              reduce using rule 39 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 39 (return -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 39 (return -> RETURN expression SEMICOLON .)


state 143

    (47) print -> PRINT LPAREN print_arguments . RPAREN SEMICOLON
    (49) print_arguments -> print_arguments . COMMA print_argument

    RPAREN          shift and go to state 153
    COMMA           shift and go to state 154


state 144

    (48) print_arguments -> print_argument .

    RPAREN          reduce using rule 48 (print_arguments -> print_argument .)
    COMMA           reduce using rule 48 (print_arguments -> print_argument .)


state 145

    (50) print_argument -> CTES .
    (88) cte -> CTES .

  ! reduce/reduce conflict for RPAREN resolved using rule 50 (print_argument -> CTES .)
  ! reduce/reduce conflict for COMMA resolved using rule 50 (print_argument -> CTES .)
    RPAREN          reduce using rule 50 (print_argument -> CTES .)
    COMMA           reduce using rule 50 (print_argument -> CTES .)
    TIMES           reduce using rule 88 (cte -> CTES .)
    DIVIDE          reduce using rule 88 (cte -> CTES .)
    PLUS            reduce using rule 88 (cte -> CTES .)
    MINUS           reduce using rule 88 (cte -> CTES .)
    LESS            reduce using rule 88 (cte -> CTES .)
    GREATER         reduce using rule 88 (cte -> CTES .)
    EQUALS          reduce using rule 88 (cte -> CTES .)
    NOTEQUAL        reduce using rule 88 (cte -> CTES .)
    GREATERTHAN     reduce using rule 88 (cte -> CTES .)
    LESSTHAN        reduce using rule 88 (cte -> CTES .)
    AND             reduce using rule 88 (cte -> CTES .)
    OR              reduce using rule 88 (cte -> CTES .)

  ! RPAREN          [ reduce using rule 88 (cte -> CTES .) ]
  ! COMMA           [ reduce using rule 88 (cte -> CTES .) ]


state 146

    (51) print_argument -> expression .

    RPAREN          reduce using rule 51 (print_argument -> expression .)
    COMMA           reduce using rule 51 (print_argument -> expression .)


state 147

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements . RBRACE
    (24) statements -> statements . statement
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 155
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

    statement                      shift and go to state 130
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 148

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements . RBRACE
    (24) statements -> statements . statement
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 156
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

    statement                      shift and go to state 130
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 149

    (40) read -> READ LPAREN variable_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 157


state 150

    (42) variable_list -> variable_list COMMA . variable
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 29

    variable                       shift and go to state 158

state 151

    (35) if_else -> IF LPAREN expression RPAREN . gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (34) if -> IF LPAREN expression RPAREN . gotof LBRACE statements RBRACE fill
    (38) gotof -> . empty
    (90) empty -> .

    LBRACE          reduce using rule 90 (empty -> .)

    gotof                          shift and go to state 159
    empty                          shift and go to state 160

state 152

    (52) assingation -> variable ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 52 (assingation -> variable ASSIGN expression SEMICOLON .)
    READ            reduce using rule 52 (assingation -> variable ASSIGN expression SEMICOLON .)
    IF              reduce using rule 52 (assingation -> variable ASSIGN expression SEMICOLON .)
    ID              reduce using rule 52 (assingation -> variable ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 52 (assingation -> variable ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 52 (assingation -> variable ASSIGN expression SEMICOLON .)


state 153

    (47) print -> PRINT LPAREN print_arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 161


state 154

    (49) print_arguments -> print_arguments COMMA . print_argument
    (50) print_argument -> . CTES
    (51) print_argument -> . expression
    (53) expression -> . t_expression
    (54) expression -> . NOT t_expression
    (55) t_expression -> . g_expression
    (56) t_expression -> . t_expression boolean_operator g_expression
    (57) g_expression -> . m_expression
    (58) g_expression -> . g_expression comparison_operator m_expression
    (59) m_expression -> . term
    (60) m_expression -> . m_expression addition_operator term
    (61) term -> . factor
    (62) term -> . term multiplication_operator factor
    (63) factor -> . variable
    (64) factor -> . cte
    (65) factor -> . expression_parenthesis
    (66) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (85) cte -> . CTEI
    (86) cte -> . CTEF
    (87) cte -> . CTEC
    (88) cte -> . CTES
    (89) cte -> . CTEB
    (67) expression_parenthesis -> . LPAREN expression RPAREN
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    CTES            shift and go to state 145
    NOT             shift and go to state 44
    ID              shift and go to state 41
    CTEI            shift and go to state 53
    CTEF            shift and go to state 54
    CTEC            shift and go to state 55
    CTEB            shift and go to state 57
    LPAREN          shift and go to state 58

    print_argument                 shift and go to state 162
    expression                     shift and go to state 146
    t_expression                   shift and go to state 43
    g_expression                   shift and go to state 45
    m_expression                   shift and go to state 46
    term                           shift and go to state 47
    factor                         shift and go to state 48
    variable                       shift and go to state 49
    cte                            shift and go to state 50
    expression_parenthesis         shift and go to state 51
    invocation                     shift and go to state 52

state 155

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .

    MAIN            reduce using rule 6 (function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 6 (function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .)


state 156

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .

    MAIN            reduce using rule 7 (function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 7 (function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .)


state 157

    (40) read -> READ LPAREN variable_list RPAREN SEMICOLON .

    RBRACE          reduce using rule 40 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    READ            reduce using rule 40 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    IF              reduce using rule 40 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    ID              reduce using rule 40 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 40 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 40 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)


state 158

    (42) variable_list -> variable_list COMMA variable .

    RPAREN          reduce using rule 42 (variable_list -> variable_list COMMA variable .)
    COMMA           reduce using rule 42 (variable_list -> variable_list COMMA variable .)


state 159

    (35) if_else -> IF LPAREN expression RPAREN gotof . LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (34) if -> IF LPAREN expression RPAREN gotof . LBRACE statements RBRACE fill

    LBRACE          shift and go to state 163


state 160

    (38) gotof -> empty .

    LBRACE          reduce using rule 38 (gotof -> empty .)


state 161

    (47) print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .

    RBRACE          reduce using rule 47 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    READ            reduce using rule 47 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    IF              reduce using rule 47 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    ID              reduce using rule 47 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)


state 162

    (49) print_arguments -> print_arguments COMMA print_argument .

    RPAREN          reduce using rule 49 (print_arguments -> print_arguments COMMA print_argument .)
    COMMA           reduce using rule 49 (print_arguments -> print_arguments COMMA print_argument .)


state 163

    (35) if_else -> IF LPAREN expression RPAREN gotof LBRACE . statements RBRACE ELSE goto LBRACE statements RBRACE
    (34) if -> IF LPAREN expression RPAREN gotof LBRACE . statements RBRACE fill
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (90) empty -> .
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 90 (empty -> .)
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

  ! READ            [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! PRINT           [ reduce using rule 90 (empty -> .) ]

    statements                     shift and go to state 164
    statement                      shift and go to state 108
    empty                          shift and go to state 109
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 164

    (35) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements . RBRACE ELSE goto LBRACE statements RBRACE
    (34) if -> IF LPAREN expression RPAREN gotof LBRACE statements . RBRACE fill
    (24) statements -> statements . statement
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 165
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

    statement                      shift and go to state 130
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 165

    (35) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE . ELSE goto LBRACE statements RBRACE
    (34) if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE . fill
    (37) fill -> . empty
    (90) empty -> .

    ELSE            shift and go to state 166
    RBRACE          reduce using rule 90 (empty -> .)
    READ            reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    PRINT           reduce using rule 90 (empty -> .)

    fill                           shift and go to state 167
    empty                          shift and go to state 168

state 166

    (35) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE . goto LBRACE statements RBRACE
    (36) goto -> . empty
    (90) empty -> .

    LBRACE          reduce using rule 90 (empty -> .)

    goto                           shift and go to state 169
    empty                          shift and go to state 170

state 167

    (34) if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill .

    RBRACE          reduce using rule 34 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill .)
    READ            reduce using rule 34 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill .)
    IF              reduce using rule 34 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill .)
    ID              reduce using rule 34 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill .)
    RETURN          reduce using rule 34 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill .)
    PRINT           reduce using rule 34 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill .)


state 168

    (37) fill -> empty .

    RBRACE          reduce using rule 37 (fill -> empty .)
    READ            reduce using rule 37 (fill -> empty .)
    IF              reduce using rule 37 (fill -> empty .)
    ID              reduce using rule 37 (fill -> empty .)
    RETURN          reduce using rule 37 (fill -> empty .)
    PRINT           reduce using rule 37 (fill -> empty .)


state 169

    (35) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto . LBRACE statements RBRACE

    LBRACE          shift and go to state 171


state 170

    (36) goto -> empty .

    LBRACE          reduce using rule 36 (goto -> empty .)


state 171

    (35) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE . statements RBRACE
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (90) empty -> .
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 90 (empty -> .)
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

  ! READ            [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! PRINT           [ reduce using rule 90 (empty -> .) ]

    statements                     shift and go to state 172
    statement                      shift and go to state 108
    empty                          shift and go to state 109
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 172

    (35) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements . RBRACE
    (24) statements -> statements . statement
    (27) statement -> . read
    (28) statement -> . if_else
    (29) statement -> . invocation
    (30) statement -> . if
    (31) statement -> . assingation
    (32) statement -> . return
    (33) statement -> . print
    (40) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (35) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (43) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (34) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE fill
    (52) assingation -> . variable ASSIGN expression SEMICOLON
    (39) return -> . RETURN expression SEMICOLON
    (47) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 173
    READ            shift and go to state 117
    IF              shift and go to state 118
    ID              shift and go to state 119
    RETURN          shift and go to state 121
    PRINT           shift and go to state 122

    statement                      shift and go to state 130
    read                           shift and go to state 110
    if_else                        shift and go to state 111
    invocation                     shift and go to state 112
    if                             shift and go to state 113
    assingation                    shift and go to state 114
    return                         shift and go to state 115
    print                          shift and go to state 116
    variable                       shift and go to state 120

state 173

    (35) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .

    RBRACE          reduce using rule 35 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    READ            reduce using rule 35 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    IF              reduce using rule 35 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    ID              reduce using rule 35 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    RETURN          reduce using rule 35 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    PRINT           reduce using rule 35 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 7 resolved as shift
WARNING: shift/reduce conflict for READ in state 99 resolved as shift
WARNING: shift/reduce conflict for IF in state 99 resolved as shift
WARNING: shift/reduce conflict for ID in state 99 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 99 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 99 resolved as shift
WARNING: shift/reduce conflict for READ in state 136 resolved as shift
WARNING: shift/reduce conflict for IF in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 136 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 136 resolved as shift
WARNING: shift/reduce conflict for READ in state 137 resolved as shift
WARNING: shift/reduce conflict for IF in state 137 resolved as shift
WARNING: shift/reduce conflict for ID in state 137 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 137 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 137 resolved as shift
WARNING: shift/reduce conflict for READ in state 163 resolved as shift
WARNING: shift/reduce conflict for IF in state 163 resolved as shift
WARNING: shift/reduce conflict for ID in state 163 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 163 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 163 resolved as shift
WARNING: shift/reduce conflict for READ in state 171 resolved as shift
WARNING: shift/reduce conflict for IF in state 171 resolved as shift
WARNING: shift/reduce conflict for ID in state 171 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 171 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 171 resolved as shift
WARNING: reduce/reduce conflict in state 8 resolved using rule (var_declarations -> var_declaration)
WARNING: rejected rule (empty -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 145 resolved using rule (print_argument -> CTES)
WARNING: rejected rule (cte -> CTES) in state 145
