Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    THEN

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END
Rule 2     global_scope -> empty
Rule 3     functions -> functions function
Rule 4     functions -> function
Rule 5     functions -> empty
Rule 6     function -> FUNCTION function_signature block
Rule 7     function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
Rule 8     function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
Rule 9     return -> RETURN expressions SEMICOLON
Rule 10    function_1 -> empty
Rule 11    main -> MAIN LPAREN RPAREN main_scope var_declarations block
Rule 12    main_scope -> empty
Rule 13    var_declarations -> var_declaration_list
Rule 14    var_declarations -> empty
Rule 15    var_declaration_list -> var_declaration var_declarations
Rule 16    var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
Rule 17    open_var_declaration -> empty
Rule 18    close_var_declaration -> empty
Rule 19    variables -> variable
Rule 20    variables -> variable COMMA variables
Rule 21    variable -> ID
Rule 22    variable -> ID LBRACK expression RBRACK
Rule 23    variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK
Rule 24    parameters -> parameters COMMA parameter
Rule 25    parameters -> parameter
Rule 26    parameters -> empty
Rule 27    parameter -> simple_type ID
Rule 28    block -> LBRACE block2 RBRACE
Rule 29    block2 -> block3
Rule 30    block2 -> empty
Rule 31    block3 -> statement block2
Rule 32    statement -> read
Rule 33    statement -> assingation
Rule 34    statement -> for
Rule 35    statement -> do_while
Rule 36    statement -> while
Rule 37    statement -> if_else
Rule 38    statement -> invocation
Rule 39    statement -> if
Rule 40    statement -> print
Rule 41    statement -> special_func
Rule 42    special_func -> gen_key
Rule 43    gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON
Rule 44    read -> READ LPAREN ID RPAREN SEMICOLON
Rule 45    assing_to_call -> variable ASSIGN invocation
Rule 46    do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON
Rule 47    for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4
Rule 48    for_1 -> empty
Rule 49    for_2 -> empty
Rule 50    for_3 -> empty
Rule 51    for_4 -> empty
Rule 52    while -> WHILE breadcrumb LPAREN expression RPAREN gotof block
Rule 53    breadcrumb -> empty
Rule 54    if -> IF LPAREN expression RPAREN gotof block
Rule 55    if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block
Rule 56    gotot -> empty
Rule 57    goto -> empty
Rule 58    gotof -> empty
Rule 59    variable_list -> variable
Rule 60    variable_list -> variable_list COMMA variable
Rule 61    invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
Rule 62    invocation_1 -> empty
Rule 63    invocation_2 -> empty
Rule 64    invocation_3 -> empty
Rule 65    invocation_4 -> empty
Rule 66    invocation_5 -> empty
Rule 67    invocation_6 -> empty
Rule 68    expressions -> expressions COMMA invocation_4 expression invocation_3
Rule 69    expressions -> expression invocation_3
Rule 70    expressions -> empty
Rule 71    expression -> t_expression
Rule 72    expression -> NOT t_expression
Rule 73    print -> PRINT LPAREN print_arguments RPAREN SEMICOLON
Rule 74    print_arguments -> print_argument
Rule 75    print_arguments -> print_arguments COMMA print_argument
Rule 76    print_argument -> CTES
Rule 77    print_argument -> expression
Rule 78    assingation -> variable ASSIGN expression SEMICOLON
Rule 79    t_expression -> g_expression
Rule 80    t_expression -> t_expression boolean_operator g_expression
Rule 81    g_expression -> m_expression
Rule 82    g_expression -> g_expression comparison_operator m_expression
Rule 83    m_expression -> term
Rule 84    m_expression -> m_expression addition_operator term
Rule 85    term -> factor
Rule 86    term -> term multiplication_operator factor
Rule 87    factor -> variable
Rule 88    factor -> cte
Rule 89    factor -> invocation
Rule 90    factor -> expression_parenthesis
Rule 91    expression_parenthesis -> LPAREN expression RPAREN
Rule 92    comparison_operator -> LESS
Rule 93    comparison_operator -> GREATER
Rule 94    comparison_operator -> EQUALS
Rule 95    comparison_operator -> NOTEQUAL
Rule 96    comparison_operator -> GREATERTHAN
Rule 97    comparison_operator -> LESSTHAN
Rule 98    addition_operator -> PLUS
Rule 99    addition_operator -> MINUS
Rule 100   boolean_operator -> AND
Rule 101   boolean_operator -> OR
Rule 102   multiplication_operator -> TIMES
Rule 103   multiplication_operator -> DIVIDE
Rule 104   simple_type -> INT
Rule 105   simple_type -> FLOAT
Rule 106   simple_type -> CHAR
Rule 107   simple_type -> BOOLEAN
Rule 108   simple_type -> STRING
Rule 109   cte -> CTEI
Rule 110   cte -> CTEF
Rule 111   cte -> CTEC
Rule 112   cte -> CTEB
Rule 113   cte -> CTES
Rule 114   empty -> <empty>

Terminals, with rules where they appear

AND                  : 100
ASSIGN               : 45 47 78
BOOLEAN              : 107
CHAR                 : 106
COLON                : 
COMMA                : 20 24 60 68 75
COMMENT              : 
CTEB                 : 112
CTEC                 : 111
CTEF                 : 110
CTEI                 : 109
CTES                 : 43 76 113
DIVIDE               : 103
DO                   : 46 47
ELSE                 : 55
END                  : 1
EQUALS               : 94
FLOAT                : 105
FOR                  : 47
FROM                 : 47
FUNCTION             : 6
GENKEY               : 43
GREATER              : 93
GREATERTHAN          : 96
ID                   : 1 7 8 21 22 23 27 44 47 61
IF                   : 54 55
INT                  : 104
LBRACE               : 28
LBRACK               : 22 23 23
LESS                 : 92
LESSTHAN             : 97
LPAREN               : 7 8 11 43 44 46 47 52 54 55 61 73 91
MAIN                 : 11
MINUS                : 99
NOT                  : 72
NOTEQUAL             : 95
OR                   : 101
PLUS                 : 98
PRINT                : 73
PROGRAM              : 1
RBRACE               : 28
RBRACK               : 22 23 23
READ                 : 44
RETURN               : 9
RPAREN               : 7 8 11 43 44 46 47 52 54 55 61 73 91
SEMICOLON            : 1 9 16 43 44 46 61 73 78
STRING               : 108
THEN                 : 
TIMES                : 102
VARIABLE             : 16
VOID                 : 8
WHILE                : 46 52
error                : 

Nonterminals, with rules where they appear

addition_operator    : 84
assing_to_call       : 
assingation          : 33
block                : 6 11 46 47 52 54 55 55
block2               : 28 31
block3               : 29
boolean_operator     : 80
breadcrumb           : 46 52
close_var_declaration : 7 8 16
comparison_operator  : 82
cte                  : 88
do_while             : 35
empty                : 2 5 10 12 14 17 18 26 30 48 49 50 51 53 56 57 58 62 63 64 65 66 67 70
expression           : 22 23 23 46 47 47 52 54 55 68 69 77 78 91
expression_parenthesis : 90
expressions          : 9 61 68
factor               : 85 86
for                  : 34
for_1                : 47
for_2                : 47
for_3                : 47
for_4                : 47
function             : 3 4
function_1           : 7 8
function_signature   : 6
functions            : 1 3
g_expression         : 79 80 82
gen_key              : 42
global_scope         : 1
goto                 : 55
gotof                : 52 54 55
gotot                : 46
if                   : 39
if_else              : 37
invocation           : 38 45 89
invocation_1         : 61
invocation_2         : 61
invocation_3         : 68 69
invocation_4         : 68
invocation_5         : 61
invocation_6         : 61
m_expression         : 81 82 84
main                 : 1
main_scope           : 11
multiplication_operator : 86
open_var_declaration : 7 8 16
parameter            : 24 25
parameters           : 7 8 24
print                : 40
print_argument       : 74 75
print_arguments      : 73 75
program              : 0
read                 : 32
return               : 
simple_type          : 7 16 27
special_func         : 41
statement            : 31
t_expression         : 71 72 80
term                 : 83 84 86
var_declaration      : 15
var_declaration_list : 13
var_declarations     : 1 7 8 11 15
variable             : 19 20 45 59 60 78 87
variable_list        : 60
variables            : 16 20
while                : 36

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON global_scope var_declarations functions main END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON global_scope var_declarations functions main END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON global_scope var_declarations functions main END

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . global_scope var_declarations functions main END
    (2) global_scope -> . empty
    (114) empty -> .

    VARIABLE        reduce using rule 114 (empty -> .)
    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)

    global_scope                   shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) program -> PROGRAM ID SEMICOLON global_scope . var_declarations functions main END
    (13) var_declarations -> . var_declaration_list
    (14) var_declarations -> . empty
    (15) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (16) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 7
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 6

    (2) global_scope -> empty .

    VARIABLE        reduce using rule 2 (global_scope -> empty .)
    FUNCTION        reduce using rule 2 (global_scope -> empty .)
    MAIN            reduce using rule 2 (global_scope -> empty .)


state 7

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations . functions main END
    (3) functions -> . functions function
    (4) functions -> . function
    (5) functions -> . empty
    (6) function -> . FUNCTION function_signature block
    (114) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 114 (empty -> .)

  ! FUNCTION        [ reduce using rule 114 (empty -> .) ]

    functions                      shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 8

    (13) var_declarations -> var_declaration_list .

    FUNCTION        reduce using rule 13 (var_declarations -> var_declaration_list .)
    MAIN            reduce using rule 13 (var_declarations -> var_declaration_list .)
    LBRACE          reduce using rule 13 (var_declarations -> var_declaration_list .)


state 9

    (14) var_declarations -> empty .

    FUNCTION        reduce using rule 14 (var_declarations -> empty .)
    MAIN            reduce using rule 14 (var_declarations -> empty .)
    LBRACE          reduce using rule 14 (var_declarations -> empty .)


state 10

    (15) var_declaration_list -> var_declaration . var_declarations
    (13) var_declarations -> . var_declaration_list
    (14) var_declarations -> . empty
    (15) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (16) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)
    LBRACE          reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declaration                shift and go to state 10
    var_declarations               shift and go to state 16
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9

state 11

    (16) var_declaration -> VARIABLE . open_var_declaration simple_type variables SEMICOLON close_var_declaration
    (17) open_var_declaration -> . empty
    (114) empty -> .

    INT             reduce using rule 114 (empty -> .)
    FLOAT           reduce using rule 114 (empty -> .)
    CHAR            reduce using rule 114 (empty -> .)
    BOOLEAN         reduce using rule 114 (empty -> .)
    STRING          reduce using rule 114 (empty -> .)

    open_var_declaration           shift and go to state 17
    empty                          shift and go to state 18

state 12

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions . main END
    (3) functions -> functions . function
    (11) main -> . MAIN LPAREN RPAREN main_scope var_declarations block
    (6) function -> . FUNCTION function_signature block

    MAIN            shift and go to state 21
    FUNCTION        shift and go to state 15

    main                           shift and go to state 19
    function                       shift and go to state 20

state 13

    (4) functions -> function .

    MAIN            reduce using rule 4 (functions -> function .)
    FUNCTION        reduce using rule 4 (functions -> function .)


state 14

    (5) functions -> empty .

    MAIN            reduce using rule 5 (functions -> empty .)
    FUNCTION        reduce using rule 5 (functions -> empty .)


state 15

    (6) function -> FUNCTION . function_signature block
    (7) function_signature -> . simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (8) function_signature -> . VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (104) simple_type -> . INT
    (105) simple_type -> . FLOAT
    (106) simple_type -> . CHAR
    (107) simple_type -> . BOOLEAN
    (108) simple_type -> . STRING

    VOID            shift and go to state 24
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28
    STRING          shift and go to state 29

    function_signature             shift and go to state 22
    simple_type                    shift and go to state 23

state 16

    (15) var_declaration_list -> var_declaration var_declarations .

    FUNCTION        reduce using rule 15 (var_declaration_list -> var_declaration var_declarations .)
    MAIN            reduce using rule 15 (var_declaration_list -> var_declaration var_declarations .)
    LBRACE          reduce using rule 15 (var_declaration_list -> var_declaration var_declarations .)


state 17

    (16) var_declaration -> VARIABLE open_var_declaration . simple_type variables SEMICOLON close_var_declaration
    (104) simple_type -> . INT
    (105) simple_type -> . FLOAT
    (106) simple_type -> . CHAR
    (107) simple_type -> . BOOLEAN
    (108) simple_type -> . STRING

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28
    STRING          shift and go to state 29

    simple_type                    shift and go to state 30

state 18

    (17) open_var_declaration -> empty .

    INT             reduce using rule 17 (open_var_declaration -> empty .)
    FLOAT           reduce using rule 17 (open_var_declaration -> empty .)
    CHAR            reduce using rule 17 (open_var_declaration -> empty .)
    BOOLEAN         reduce using rule 17 (open_var_declaration -> empty .)
    STRING          reduce using rule 17 (open_var_declaration -> empty .)
    COMMA           reduce using rule 17 (open_var_declaration -> empty .)
    RPAREN          reduce using rule 17 (open_var_declaration -> empty .)


state 19

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main . END

    END             shift and go to state 31


state 20

    (3) functions -> functions function .

    MAIN            reduce using rule 3 (functions -> functions function .)
    FUNCTION        reduce using rule 3 (functions -> functions function .)


state 21

    (11) main -> MAIN . LPAREN RPAREN main_scope var_declarations block

    LPAREN          shift and go to state 32


state 22

    (6) function -> FUNCTION function_signature . block
    (28) block -> . LBRACE block2 RBRACE

    LBRACE          shift and go to state 34

    block                          shift and go to state 33

state 23

    (7) function_signature -> simple_type . ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    ID              shift and go to state 35


state 24

    (8) function_signature -> VOID . ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    ID              shift and go to state 36


state 25

    (104) simple_type -> INT .

    ID              reduce using rule 104 (simple_type -> INT .)


state 26

    (105) simple_type -> FLOAT .

    ID              reduce using rule 105 (simple_type -> FLOAT .)


state 27

    (106) simple_type -> CHAR .

    ID              reduce using rule 106 (simple_type -> CHAR .)


state 28

    (107) simple_type -> BOOLEAN .

    ID              reduce using rule 107 (simple_type -> BOOLEAN .)


state 29

    (108) simple_type -> STRING .

    ID              reduce using rule 108 (simple_type -> STRING .)


state 30

    (16) var_declaration -> VARIABLE open_var_declaration simple_type . variables SEMICOLON close_var_declaration
    (19) variables -> . variable
    (20) variables -> . variable COMMA variables
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 39

    variables                      shift and go to state 37
    variable                       shift and go to state 38

state 31

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .)


state 32

    (11) main -> MAIN LPAREN . RPAREN main_scope var_declarations block

    RPAREN          shift and go to state 40


state 33

    (6) function -> FUNCTION function_signature block .

    MAIN            reduce using rule 6 (function -> FUNCTION function_signature block .)
    FUNCTION        reduce using rule 6 (function -> FUNCTION function_signature block .)


state 34

    (28) block -> LBRACE . block2 RBRACE
    (29) block2 -> . block3
    (30) block2 -> . empty
    (31) block3 -> . statement block2
    (114) empty -> .
    (32) statement -> . read
    (33) statement -> . assingation
    (34) statement -> . for
    (35) statement -> . do_while
    (36) statement -> . while
    (37) statement -> . if_else
    (38) statement -> . invocation
    (39) statement -> . if
    (40) statement -> . print
    (41) statement -> . special_func
    (44) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (47) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4
    (46) do_while -> . DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON
    (52) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof block
    (55) if_else -> . IF LPAREN expression RPAREN gotof block ELSE goto block
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (54) if -> . IF LPAREN expression RPAREN gotof block
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (42) special_func -> . gen_key
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (43) gen_key -> . GENKEY LPAREN CTES RPAREN SEMICOLON

    RBRACE          reduce using rule 114 (empty -> .)
    READ            shift and go to state 55
    FOR             shift and go to state 58
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ID              shift and go to state 56
    PRINT           shift and go to state 62
    GENKEY          shift and go to state 64

    block2                         shift and go to state 41
    block3                         shift and go to state 42
    empty                          shift and go to state 43
    statement                      shift and go to state 44
    read                           shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    print                          shift and go to state 53
    special_func                   shift and go to state 54
    variable                       shift and go to state 57
    gen_key                        shift and go to state 63

state 35

    (7) function_signature -> simple_type ID . function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (10) function_1 -> . empty
    (114) empty -> .

    LPAREN          reduce using rule 114 (empty -> .)

    function_1                     shift and go to state 65
    empty                          shift and go to state 66

state 36

    (8) function_signature -> VOID ID . function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (10) function_1 -> . empty
    (114) empty -> .

    LPAREN          reduce using rule 114 (empty -> .)

    function_1                     shift and go to state 67
    empty                          shift and go to state 66

state 37

    (16) var_declaration -> VARIABLE open_var_declaration simple_type variables . SEMICOLON close_var_declaration

    SEMICOLON       shift and go to state 68


state 38

    (19) variables -> variable .
    (20) variables -> variable . COMMA variables

    SEMICOLON       reduce using rule 19 (variables -> variable .)
    COMMA           shift and go to state 69


state 39

    (21) variable -> ID .
    (22) variable -> ID . LBRACK expression RBRACK
    (23) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    COMMA           reduce using rule 21 (variable -> ID .)
    SEMICOLON       reduce using rule 21 (variable -> ID .)
    LBRACK          shift and go to state 70


state 40

    (11) main -> MAIN LPAREN RPAREN . main_scope var_declarations block
    (12) main_scope -> . empty
    (114) empty -> .

    VARIABLE        reduce using rule 114 (empty -> .)
    LBRACE          reduce using rule 114 (empty -> .)

    main_scope                     shift and go to state 71
    empty                          shift and go to state 72

state 41

    (28) block -> LBRACE block2 . RBRACE

    RBRACE          shift and go to state 73


state 42

    (29) block2 -> block3 .

    RBRACE          reduce using rule 29 (block2 -> block3 .)


state 43

    (30) block2 -> empty .

    RBRACE          reduce using rule 30 (block2 -> empty .)


state 44

    (31) block3 -> statement . block2
    (29) block2 -> . block3
    (30) block2 -> . empty
    (31) block3 -> . statement block2
    (114) empty -> .
    (32) statement -> . read
    (33) statement -> . assingation
    (34) statement -> . for
    (35) statement -> . do_while
    (36) statement -> . while
    (37) statement -> . if_else
    (38) statement -> . invocation
    (39) statement -> . if
    (40) statement -> . print
    (41) statement -> . special_func
    (44) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (47) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4
    (46) do_while -> . DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON
    (52) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof block
    (55) if_else -> . IF LPAREN expression RPAREN gotof block ELSE goto block
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (54) if -> . IF LPAREN expression RPAREN gotof block
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (42) special_func -> . gen_key
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (43) gen_key -> . GENKEY LPAREN CTES RPAREN SEMICOLON

    RBRACE          reduce using rule 114 (empty -> .)
    READ            shift and go to state 55
    FOR             shift and go to state 58
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    IF              shift and go to state 61
    ID              shift and go to state 56
    PRINT           shift and go to state 62
    GENKEY          shift and go to state 64

    statement                      shift and go to state 44
    block2                         shift and go to state 74
    block3                         shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    print                          shift and go to state 53
    special_func                   shift and go to state 54
    variable                       shift and go to state 57
    gen_key                        shift and go to state 63

state 45

    (32) statement -> read .

    READ            reduce using rule 32 (statement -> read .)
    FOR             reduce using rule 32 (statement -> read .)
    DO              reduce using rule 32 (statement -> read .)
    WHILE           reduce using rule 32 (statement -> read .)
    IF              reduce using rule 32 (statement -> read .)
    ID              reduce using rule 32 (statement -> read .)
    PRINT           reduce using rule 32 (statement -> read .)
    GENKEY          reduce using rule 32 (statement -> read .)
    RBRACE          reduce using rule 32 (statement -> read .)


state 46

    (33) statement -> assingation .

    READ            reduce using rule 33 (statement -> assingation .)
    FOR             reduce using rule 33 (statement -> assingation .)
    DO              reduce using rule 33 (statement -> assingation .)
    WHILE           reduce using rule 33 (statement -> assingation .)
    IF              reduce using rule 33 (statement -> assingation .)
    ID              reduce using rule 33 (statement -> assingation .)
    PRINT           reduce using rule 33 (statement -> assingation .)
    GENKEY          reduce using rule 33 (statement -> assingation .)
    RBRACE          reduce using rule 33 (statement -> assingation .)


state 47

    (34) statement -> for .

    READ            reduce using rule 34 (statement -> for .)
    FOR             reduce using rule 34 (statement -> for .)
    DO              reduce using rule 34 (statement -> for .)
    WHILE           reduce using rule 34 (statement -> for .)
    IF              reduce using rule 34 (statement -> for .)
    ID              reduce using rule 34 (statement -> for .)
    PRINT           reduce using rule 34 (statement -> for .)
    GENKEY          reduce using rule 34 (statement -> for .)
    RBRACE          reduce using rule 34 (statement -> for .)


state 48

    (35) statement -> do_while .

    READ            reduce using rule 35 (statement -> do_while .)
    FOR             reduce using rule 35 (statement -> do_while .)
    DO              reduce using rule 35 (statement -> do_while .)
    WHILE           reduce using rule 35 (statement -> do_while .)
    IF              reduce using rule 35 (statement -> do_while .)
    ID              reduce using rule 35 (statement -> do_while .)
    PRINT           reduce using rule 35 (statement -> do_while .)
    GENKEY          reduce using rule 35 (statement -> do_while .)
    RBRACE          reduce using rule 35 (statement -> do_while .)


state 49

    (36) statement -> while .

    READ            reduce using rule 36 (statement -> while .)
    FOR             reduce using rule 36 (statement -> while .)
    DO              reduce using rule 36 (statement -> while .)
    WHILE           reduce using rule 36 (statement -> while .)
    IF              reduce using rule 36 (statement -> while .)
    ID              reduce using rule 36 (statement -> while .)
    PRINT           reduce using rule 36 (statement -> while .)
    GENKEY          reduce using rule 36 (statement -> while .)
    RBRACE          reduce using rule 36 (statement -> while .)


state 50

    (37) statement -> if_else .

    READ            reduce using rule 37 (statement -> if_else .)
    FOR             reduce using rule 37 (statement -> if_else .)
    DO              reduce using rule 37 (statement -> if_else .)
    WHILE           reduce using rule 37 (statement -> if_else .)
    IF              reduce using rule 37 (statement -> if_else .)
    ID              reduce using rule 37 (statement -> if_else .)
    PRINT           reduce using rule 37 (statement -> if_else .)
    GENKEY          reduce using rule 37 (statement -> if_else .)
    RBRACE          reduce using rule 37 (statement -> if_else .)


state 51

    (38) statement -> invocation .

    READ            reduce using rule 38 (statement -> invocation .)
    FOR             reduce using rule 38 (statement -> invocation .)
    DO              reduce using rule 38 (statement -> invocation .)
    WHILE           reduce using rule 38 (statement -> invocation .)
    IF              reduce using rule 38 (statement -> invocation .)
    ID              reduce using rule 38 (statement -> invocation .)
    PRINT           reduce using rule 38 (statement -> invocation .)
    GENKEY          reduce using rule 38 (statement -> invocation .)
    RBRACE          reduce using rule 38 (statement -> invocation .)


state 52

    (39) statement -> if .

    READ            reduce using rule 39 (statement -> if .)
    FOR             reduce using rule 39 (statement -> if .)
    DO              reduce using rule 39 (statement -> if .)
    WHILE           reduce using rule 39 (statement -> if .)
    IF              reduce using rule 39 (statement -> if .)
    ID              reduce using rule 39 (statement -> if .)
    PRINT           reduce using rule 39 (statement -> if .)
    GENKEY          reduce using rule 39 (statement -> if .)
    RBRACE          reduce using rule 39 (statement -> if .)


state 53

    (40) statement -> print .

    READ            reduce using rule 40 (statement -> print .)
    FOR             reduce using rule 40 (statement -> print .)
    DO              reduce using rule 40 (statement -> print .)
    WHILE           reduce using rule 40 (statement -> print .)
    IF              reduce using rule 40 (statement -> print .)
    ID              reduce using rule 40 (statement -> print .)
    PRINT           reduce using rule 40 (statement -> print .)
    GENKEY          reduce using rule 40 (statement -> print .)
    RBRACE          reduce using rule 40 (statement -> print .)


state 54

    (41) statement -> special_func .

    READ            reduce using rule 41 (statement -> special_func .)
    FOR             reduce using rule 41 (statement -> special_func .)
    DO              reduce using rule 41 (statement -> special_func .)
    WHILE           reduce using rule 41 (statement -> special_func .)
    IF              reduce using rule 41 (statement -> special_func .)
    ID              reduce using rule 41 (statement -> special_func .)
    PRINT           reduce using rule 41 (statement -> special_func .)
    GENKEY          reduce using rule 41 (statement -> special_func .)
    RBRACE          reduce using rule 41 (statement -> special_func .)


state 55

    (44) read -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 75


state 56

    (61) invocation -> ID . invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (21) variable -> ID .
    (22) variable -> ID . LBRACK expression RBRACK
    (23) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK
    (62) invocation_1 -> . empty
    (114) empty -> .

    ASSIGN          reduce using rule 21 (variable -> ID .)
    LBRACK          shift and go to state 70
    LPAREN          reduce using rule 114 (empty -> .)

    invocation_1                   shift and go to state 76
    empty                          shift and go to state 77

state 57

    (78) assingation -> variable . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 78


state 58

    (47) for -> FOR . LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4

    LPAREN          shift and go to state 79


state 59

    (46) do_while -> DO . breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) breadcrumb -> . empty
    (114) empty -> .

    LBRACE          reduce using rule 114 (empty -> .)

    breadcrumb                     shift and go to state 80
    empty                          shift and go to state 81

state 60

    (52) while -> WHILE . breadcrumb LPAREN expression RPAREN gotof block
    (53) breadcrumb -> . empty
    (114) empty -> .

    LPAREN          reduce using rule 114 (empty -> .)

    breadcrumb                     shift and go to state 82
    empty                          shift and go to state 81

state 61

    (55) if_else -> IF . LPAREN expression RPAREN gotof block ELSE goto block
    (54) if -> IF . LPAREN expression RPAREN gotof block

    LPAREN          shift and go to state 83


state 62

    (73) print -> PRINT . LPAREN print_arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 63

    (42) special_func -> gen_key .

    READ            reduce using rule 42 (special_func -> gen_key .)
    FOR             reduce using rule 42 (special_func -> gen_key .)
    DO              reduce using rule 42 (special_func -> gen_key .)
    WHILE           reduce using rule 42 (special_func -> gen_key .)
    IF              reduce using rule 42 (special_func -> gen_key .)
    ID              reduce using rule 42 (special_func -> gen_key .)
    PRINT           reduce using rule 42 (special_func -> gen_key .)
    GENKEY          reduce using rule 42 (special_func -> gen_key .)
    RBRACE          reduce using rule 42 (special_func -> gen_key .)


state 64

    (43) gen_key -> GENKEY . LPAREN CTES RPAREN SEMICOLON

    LPAREN          shift and go to state 85


state 65

    (7) function_signature -> simple_type ID function_1 . LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    LPAREN          shift and go to state 86


state 66

    (10) function_1 -> empty .

    LPAREN          reduce using rule 10 (function_1 -> empty .)


state 67

    (8) function_signature -> VOID ID function_1 . LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    LPAREN          shift and go to state 87


state 68

    (16) var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON . close_var_declaration
    (18) close_var_declaration -> . empty
    (114) empty -> .

    VARIABLE        reduce using rule 114 (empty -> .)
    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)
    LBRACE          reduce using rule 114 (empty -> .)

    close_var_declaration          shift and go to state 88
    empty                          shift and go to state 89

state 69

    (20) variables -> variable COMMA . variables
    (19) variables -> . variable
    (20) variables -> . variable COMMA variables
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 39

    variable                       shift and go to state 38
    variables                      shift and go to state 90

state 70

    (22) variable -> ID LBRACK . expression RBRACK
    (23) variable -> ID LBRACK . expression RBRACK LBRACK expression RBRACK
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expression                     shift and go to state 92
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 71

    (11) main -> MAIN LPAREN RPAREN main_scope . var_declarations block
    (13) var_declarations -> . var_declaration_list
    (14) var_declarations -> . empty
    (15) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (16) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    LBRACE          reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 109
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 72

    (12) main_scope -> empty .

    VARIABLE        reduce using rule 12 (main_scope -> empty .)
    LBRACE          reduce using rule 12 (main_scope -> empty .)


state 73

    (28) block -> LBRACE block2 RBRACE .

    MAIN            reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    FUNCTION        reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    WHILE           reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    END             reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    ELSE            reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    READ            reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    FOR             reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    DO              reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    IF              reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    ID              reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    PRINT           reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    GENKEY          reduce using rule 28 (block -> LBRACE block2 RBRACE .)
    RBRACE          reduce using rule 28 (block -> LBRACE block2 RBRACE .)


state 74

    (31) block3 -> statement block2 .

    RBRACE          reduce using rule 31 (block3 -> statement block2 .)


state 75

    (44) read -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 110


state 76

    (61) invocation -> ID invocation_1 . LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6

    LPAREN          shift and go to state 111


state 77

    (62) invocation_1 -> empty .

    LPAREN          reduce using rule 62 (invocation_1 -> empty .)


state 78

    (78) assingation -> variable ASSIGN . expression SEMICOLON
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    variable                       shift and go to state 99
    expression                     shift and go to state 112
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 79

    (47) for -> FOR LPAREN . ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4

    ID              shift and go to state 113


state 80

    (46) do_while -> DO breadcrumb . block WHILE LPAREN expression RPAREN gotot SEMICOLON
    (28) block -> . LBRACE block2 RBRACE

    LBRACE          shift and go to state 34

    block                          shift and go to state 114

state 81

    (53) breadcrumb -> empty .

    LBRACE          reduce using rule 53 (breadcrumb -> empty .)
    LPAREN          reduce using rule 53 (breadcrumb -> empty .)


state 82

    (52) while -> WHILE breadcrumb . LPAREN expression RPAREN gotof block

    LPAREN          shift and go to state 115


state 83

    (55) if_else -> IF LPAREN . expression RPAREN gotof block ELSE goto block
    (54) if -> IF LPAREN . expression RPAREN gotof block
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expression                     shift and go to state 116
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 84

    (73) print -> PRINT LPAREN . print_arguments RPAREN SEMICOLON
    (74) print_arguments -> . print_argument
    (75) print_arguments -> . print_arguments COMMA print_argument
    (76) print_argument -> . CTES
    (77) print_argument -> . expression
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    CTES            shift and go to state 119
    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    LPAREN          shift and go to state 108

    print_arguments                shift and go to state 117
    print_argument                 shift and go to state 118
    expression                     shift and go to state 120
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 85

    (43) gen_key -> GENKEY LPAREN . CTES RPAREN SEMICOLON

    CTES            shift and go to state 121


state 86

    (7) function_signature -> simple_type ID function_1 LPAREN . open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (17) open_var_declaration -> . empty
    (114) empty -> .

    INT             reduce using rule 114 (empty -> .)
    FLOAT           reduce using rule 114 (empty -> .)
    CHAR            reduce using rule 114 (empty -> .)
    BOOLEAN         reduce using rule 114 (empty -> .)
    STRING          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)

    open_var_declaration           shift and go to state 122
    empty                          shift and go to state 18

state 87

    (8) function_signature -> VOID ID function_1 LPAREN . open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (17) open_var_declaration -> . empty
    (114) empty -> .

    INT             reduce using rule 114 (empty -> .)
    FLOAT           reduce using rule 114 (empty -> .)
    CHAR            reduce using rule 114 (empty -> .)
    BOOLEAN         reduce using rule 114 (empty -> .)
    STRING          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)

    open_var_declaration           shift and go to state 123
    empty                          shift and go to state 18

state 88

    (16) var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .

    VARIABLE        reduce using rule 16 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    FUNCTION        reduce using rule 16 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    MAIN            reduce using rule 16 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    LBRACE          reduce using rule 16 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)


state 89

    (18) close_var_declaration -> empty .

    VARIABLE        reduce using rule 18 (close_var_declaration -> empty .)
    FUNCTION        reduce using rule 18 (close_var_declaration -> empty .)
    MAIN            reduce using rule 18 (close_var_declaration -> empty .)
    LBRACE          reduce using rule 18 (close_var_declaration -> empty .)
    RPAREN          reduce using rule 18 (close_var_declaration -> empty .)


state 90

    (20) variables -> variable COMMA variables .

    SEMICOLON       reduce using rule 20 (variables -> variable COMMA variables .)


state 91

    (21) variable -> ID .
    (22) variable -> ID . LBRACK expression RBRACK
    (23) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK
    (61) invocation -> ID . invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (62) invocation_1 -> . empty
    (114) empty -> .

    TIMES           reduce using rule 21 (variable -> ID .)
    DIVIDE          reduce using rule 21 (variable -> ID .)
    PLUS            reduce using rule 21 (variable -> ID .)
    MINUS           reduce using rule 21 (variable -> ID .)
    LESS            reduce using rule 21 (variable -> ID .)
    GREATER         reduce using rule 21 (variable -> ID .)
    EQUALS          reduce using rule 21 (variable -> ID .)
    NOTEQUAL        reduce using rule 21 (variable -> ID .)
    GREATERTHAN     reduce using rule 21 (variable -> ID .)
    LESSTHAN        reduce using rule 21 (variable -> ID .)
    AND             reduce using rule 21 (variable -> ID .)
    OR              reduce using rule 21 (variable -> ID .)
    RBRACK          reduce using rule 21 (variable -> ID .)
    SEMICOLON       reduce using rule 21 (variable -> ID .)
    RPAREN          reduce using rule 21 (variable -> ID .)
    COMMA           reduce using rule 21 (variable -> ID .)
    FROM            reduce using rule 21 (variable -> ID .)
    LBRACK          shift and go to state 70
    LPAREN          reduce using rule 114 (empty -> .)

    invocation_1                   shift and go to state 76
    empty                          shift and go to state 77

state 92

    (22) variable -> ID LBRACK expression . RBRACK
    (23) variable -> ID LBRACK expression . RBRACK LBRACK expression RBRACK

    RBRACK          shift and go to state 124


state 93

    (71) expression -> t_expression .
    (80) t_expression -> t_expression . boolean_operator g_expression
    (100) boolean_operator -> . AND
    (101) boolean_operator -> . OR

    RBRACK          reduce using rule 71 (expression -> t_expression .)
    SEMICOLON       reduce using rule 71 (expression -> t_expression .)
    RPAREN          reduce using rule 71 (expression -> t_expression .)
    COMMA           reduce using rule 71 (expression -> t_expression .)
    FROM            reduce using rule 71 (expression -> t_expression .)
    AND             shift and go to state 126
    OR              shift and go to state 127

    boolean_operator               shift and go to state 125

state 94

    (72) expression -> NOT . t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    t_expression                   shift and go to state 128
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 95

    (79) t_expression -> g_expression .
    (82) g_expression -> g_expression . comparison_operator m_expression
    (92) comparison_operator -> . LESS
    (93) comparison_operator -> . GREATER
    (94) comparison_operator -> . EQUALS
    (95) comparison_operator -> . NOTEQUAL
    (96) comparison_operator -> . GREATERTHAN
    (97) comparison_operator -> . LESSTHAN

    AND             reduce using rule 79 (t_expression -> g_expression .)
    OR              reduce using rule 79 (t_expression -> g_expression .)
    RBRACK          reduce using rule 79 (t_expression -> g_expression .)
    SEMICOLON       reduce using rule 79 (t_expression -> g_expression .)
    RPAREN          reduce using rule 79 (t_expression -> g_expression .)
    COMMA           reduce using rule 79 (t_expression -> g_expression .)
    FROM            reduce using rule 79 (t_expression -> g_expression .)
    LESS            shift and go to state 130
    GREATER         shift and go to state 131
    EQUALS          shift and go to state 132
    NOTEQUAL        shift and go to state 133
    GREATERTHAN     shift and go to state 134
    LESSTHAN        shift and go to state 135

    comparison_operator            shift and go to state 129

state 96

    (81) g_expression -> m_expression .
    (84) m_expression -> m_expression . addition_operator term
    (98) addition_operator -> . PLUS
    (99) addition_operator -> . MINUS

    LESS            reduce using rule 81 (g_expression -> m_expression .)
    GREATER         reduce using rule 81 (g_expression -> m_expression .)
    EQUALS          reduce using rule 81 (g_expression -> m_expression .)
    NOTEQUAL        reduce using rule 81 (g_expression -> m_expression .)
    GREATERTHAN     reduce using rule 81 (g_expression -> m_expression .)
    LESSTHAN        reduce using rule 81 (g_expression -> m_expression .)
    AND             reduce using rule 81 (g_expression -> m_expression .)
    OR              reduce using rule 81 (g_expression -> m_expression .)
    RBRACK          reduce using rule 81 (g_expression -> m_expression .)
    SEMICOLON       reduce using rule 81 (g_expression -> m_expression .)
    RPAREN          reduce using rule 81 (g_expression -> m_expression .)
    COMMA           reduce using rule 81 (g_expression -> m_expression .)
    FROM            reduce using rule 81 (g_expression -> m_expression .)
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138

    addition_operator              shift and go to state 136

state 97

    (83) m_expression -> term .
    (86) term -> term . multiplication_operator factor
    (102) multiplication_operator -> . TIMES
    (103) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 83 (m_expression -> term .)
    MINUS           reduce using rule 83 (m_expression -> term .)
    LESS            reduce using rule 83 (m_expression -> term .)
    GREATER         reduce using rule 83 (m_expression -> term .)
    EQUALS          reduce using rule 83 (m_expression -> term .)
    NOTEQUAL        reduce using rule 83 (m_expression -> term .)
    GREATERTHAN     reduce using rule 83 (m_expression -> term .)
    LESSTHAN        reduce using rule 83 (m_expression -> term .)
    AND             reduce using rule 83 (m_expression -> term .)
    OR              reduce using rule 83 (m_expression -> term .)
    RBRACK          reduce using rule 83 (m_expression -> term .)
    SEMICOLON       reduce using rule 83 (m_expression -> term .)
    RPAREN          reduce using rule 83 (m_expression -> term .)
    COMMA           reduce using rule 83 (m_expression -> term .)
    FROM            reduce using rule 83 (m_expression -> term .)
    TIMES           shift and go to state 140
    DIVIDE          shift and go to state 141

    multiplication_operator        shift and go to state 139

state 98

    (85) term -> factor .

    TIMES           reduce using rule 85 (term -> factor .)
    DIVIDE          reduce using rule 85 (term -> factor .)
    PLUS            reduce using rule 85 (term -> factor .)
    MINUS           reduce using rule 85 (term -> factor .)
    LESS            reduce using rule 85 (term -> factor .)
    GREATER         reduce using rule 85 (term -> factor .)
    EQUALS          reduce using rule 85 (term -> factor .)
    NOTEQUAL        reduce using rule 85 (term -> factor .)
    GREATERTHAN     reduce using rule 85 (term -> factor .)
    LESSTHAN        reduce using rule 85 (term -> factor .)
    AND             reduce using rule 85 (term -> factor .)
    OR              reduce using rule 85 (term -> factor .)
    RBRACK          reduce using rule 85 (term -> factor .)
    SEMICOLON       reduce using rule 85 (term -> factor .)
    RPAREN          reduce using rule 85 (term -> factor .)
    COMMA           reduce using rule 85 (term -> factor .)
    FROM            reduce using rule 85 (term -> factor .)


state 99

    (87) factor -> variable .

    TIMES           reduce using rule 87 (factor -> variable .)
    DIVIDE          reduce using rule 87 (factor -> variable .)
    PLUS            reduce using rule 87 (factor -> variable .)
    MINUS           reduce using rule 87 (factor -> variable .)
    LESS            reduce using rule 87 (factor -> variable .)
    GREATER         reduce using rule 87 (factor -> variable .)
    EQUALS          reduce using rule 87 (factor -> variable .)
    NOTEQUAL        reduce using rule 87 (factor -> variable .)
    GREATERTHAN     reduce using rule 87 (factor -> variable .)
    LESSTHAN        reduce using rule 87 (factor -> variable .)
    AND             reduce using rule 87 (factor -> variable .)
    OR              reduce using rule 87 (factor -> variable .)
    RBRACK          reduce using rule 87 (factor -> variable .)
    SEMICOLON       reduce using rule 87 (factor -> variable .)
    RPAREN          reduce using rule 87 (factor -> variable .)
    COMMA           reduce using rule 87 (factor -> variable .)
    FROM            reduce using rule 87 (factor -> variable .)


state 100

    (88) factor -> cte .

    TIMES           reduce using rule 88 (factor -> cte .)
    DIVIDE          reduce using rule 88 (factor -> cte .)
    PLUS            reduce using rule 88 (factor -> cte .)
    MINUS           reduce using rule 88 (factor -> cte .)
    LESS            reduce using rule 88 (factor -> cte .)
    GREATER         reduce using rule 88 (factor -> cte .)
    EQUALS          reduce using rule 88 (factor -> cte .)
    NOTEQUAL        reduce using rule 88 (factor -> cte .)
    GREATERTHAN     reduce using rule 88 (factor -> cte .)
    LESSTHAN        reduce using rule 88 (factor -> cte .)
    AND             reduce using rule 88 (factor -> cte .)
    OR              reduce using rule 88 (factor -> cte .)
    RBRACK          reduce using rule 88 (factor -> cte .)
    SEMICOLON       reduce using rule 88 (factor -> cte .)
    RPAREN          reduce using rule 88 (factor -> cte .)
    COMMA           reduce using rule 88 (factor -> cte .)
    FROM            reduce using rule 88 (factor -> cte .)


state 101

    (89) factor -> invocation .

    TIMES           reduce using rule 89 (factor -> invocation .)
    DIVIDE          reduce using rule 89 (factor -> invocation .)
    PLUS            reduce using rule 89 (factor -> invocation .)
    MINUS           reduce using rule 89 (factor -> invocation .)
    LESS            reduce using rule 89 (factor -> invocation .)
    GREATER         reduce using rule 89 (factor -> invocation .)
    EQUALS          reduce using rule 89 (factor -> invocation .)
    NOTEQUAL        reduce using rule 89 (factor -> invocation .)
    GREATERTHAN     reduce using rule 89 (factor -> invocation .)
    LESSTHAN        reduce using rule 89 (factor -> invocation .)
    AND             reduce using rule 89 (factor -> invocation .)
    OR              reduce using rule 89 (factor -> invocation .)
    RBRACK          reduce using rule 89 (factor -> invocation .)
    SEMICOLON       reduce using rule 89 (factor -> invocation .)
    RPAREN          reduce using rule 89 (factor -> invocation .)
    COMMA           reduce using rule 89 (factor -> invocation .)
    FROM            reduce using rule 89 (factor -> invocation .)


state 102

    (90) factor -> expression_parenthesis .

    TIMES           reduce using rule 90 (factor -> expression_parenthesis .)
    DIVIDE          reduce using rule 90 (factor -> expression_parenthesis .)
    PLUS            reduce using rule 90 (factor -> expression_parenthesis .)
    MINUS           reduce using rule 90 (factor -> expression_parenthesis .)
    LESS            reduce using rule 90 (factor -> expression_parenthesis .)
    GREATER         reduce using rule 90 (factor -> expression_parenthesis .)
    EQUALS          reduce using rule 90 (factor -> expression_parenthesis .)
    NOTEQUAL        reduce using rule 90 (factor -> expression_parenthesis .)
    GREATERTHAN     reduce using rule 90 (factor -> expression_parenthesis .)
    LESSTHAN        reduce using rule 90 (factor -> expression_parenthesis .)
    AND             reduce using rule 90 (factor -> expression_parenthesis .)
    OR              reduce using rule 90 (factor -> expression_parenthesis .)
    RBRACK          reduce using rule 90 (factor -> expression_parenthesis .)
    SEMICOLON       reduce using rule 90 (factor -> expression_parenthesis .)
    RPAREN          reduce using rule 90 (factor -> expression_parenthesis .)
    COMMA           reduce using rule 90 (factor -> expression_parenthesis .)
    FROM            reduce using rule 90 (factor -> expression_parenthesis .)


state 103

    (109) cte -> CTEI .

    TIMES           reduce using rule 109 (cte -> CTEI .)
    DIVIDE          reduce using rule 109 (cte -> CTEI .)
    PLUS            reduce using rule 109 (cte -> CTEI .)
    MINUS           reduce using rule 109 (cte -> CTEI .)
    LESS            reduce using rule 109 (cte -> CTEI .)
    GREATER         reduce using rule 109 (cte -> CTEI .)
    EQUALS          reduce using rule 109 (cte -> CTEI .)
    NOTEQUAL        reduce using rule 109 (cte -> CTEI .)
    GREATERTHAN     reduce using rule 109 (cte -> CTEI .)
    LESSTHAN        reduce using rule 109 (cte -> CTEI .)
    AND             reduce using rule 109 (cte -> CTEI .)
    OR              reduce using rule 109 (cte -> CTEI .)
    RBRACK          reduce using rule 109 (cte -> CTEI .)
    SEMICOLON       reduce using rule 109 (cte -> CTEI .)
    RPAREN          reduce using rule 109 (cte -> CTEI .)
    COMMA           reduce using rule 109 (cte -> CTEI .)
    FROM            reduce using rule 109 (cte -> CTEI .)


state 104

    (110) cte -> CTEF .

    TIMES           reduce using rule 110 (cte -> CTEF .)
    DIVIDE          reduce using rule 110 (cte -> CTEF .)
    PLUS            reduce using rule 110 (cte -> CTEF .)
    MINUS           reduce using rule 110 (cte -> CTEF .)
    LESS            reduce using rule 110 (cte -> CTEF .)
    GREATER         reduce using rule 110 (cte -> CTEF .)
    EQUALS          reduce using rule 110 (cte -> CTEF .)
    NOTEQUAL        reduce using rule 110 (cte -> CTEF .)
    GREATERTHAN     reduce using rule 110 (cte -> CTEF .)
    LESSTHAN        reduce using rule 110 (cte -> CTEF .)
    AND             reduce using rule 110 (cte -> CTEF .)
    OR              reduce using rule 110 (cte -> CTEF .)
    RBRACK          reduce using rule 110 (cte -> CTEF .)
    SEMICOLON       reduce using rule 110 (cte -> CTEF .)
    RPAREN          reduce using rule 110 (cte -> CTEF .)
    COMMA           reduce using rule 110 (cte -> CTEF .)
    FROM            reduce using rule 110 (cte -> CTEF .)


state 105

    (111) cte -> CTEC .

    TIMES           reduce using rule 111 (cte -> CTEC .)
    DIVIDE          reduce using rule 111 (cte -> CTEC .)
    PLUS            reduce using rule 111 (cte -> CTEC .)
    MINUS           reduce using rule 111 (cte -> CTEC .)
    LESS            reduce using rule 111 (cte -> CTEC .)
    GREATER         reduce using rule 111 (cte -> CTEC .)
    EQUALS          reduce using rule 111 (cte -> CTEC .)
    NOTEQUAL        reduce using rule 111 (cte -> CTEC .)
    GREATERTHAN     reduce using rule 111 (cte -> CTEC .)
    LESSTHAN        reduce using rule 111 (cte -> CTEC .)
    AND             reduce using rule 111 (cte -> CTEC .)
    OR              reduce using rule 111 (cte -> CTEC .)
    RBRACK          reduce using rule 111 (cte -> CTEC .)
    SEMICOLON       reduce using rule 111 (cte -> CTEC .)
    RPAREN          reduce using rule 111 (cte -> CTEC .)
    COMMA           reduce using rule 111 (cte -> CTEC .)
    FROM            reduce using rule 111 (cte -> CTEC .)


state 106

    (112) cte -> CTEB .

    TIMES           reduce using rule 112 (cte -> CTEB .)
    DIVIDE          reduce using rule 112 (cte -> CTEB .)
    PLUS            reduce using rule 112 (cte -> CTEB .)
    MINUS           reduce using rule 112 (cte -> CTEB .)
    LESS            reduce using rule 112 (cte -> CTEB .)
    GREATER         reduce using rule 112 (cte -> CTEB .)
    EQUALS          reduce using rule 112 (cte -> CTEB .)
    NOTEQUAL        reduce using rule 112 (cte -> CTEB .)
    GREATERTHAN     reduce using rule 112 (cte -> CTEB .)
    LESSTHAN        reduce using rule 112 (cte -> CTEB .)
    AND             reduce using rule 112 (cte -> CTEB .)
    OR              reduce using rule 112 (cte -> CTEB .)
    RBRACK          reduce using rule 112 (cte -> CTEB .)
    SEMICOLON       reduce using rule 112 (cte -> CTEB .)
    RPAREN          reduce using rule 112 (cte -> CTEB .)
    COMMA           reduce using rule 112 (cte -> CTEB .)
    FROM            reduce using rule 112 (cte -> CTEB .)


state 107

    (113) cte -> CTES .

    TIMES           reduce using rule 113 (cte -> CTES .)
    DIVIDE          reduce using rule 113 (cte -> CTES .)
    PLUS            reduce using rule 113 (cte -> CTES .)
    MINUS           reduce using rule 113 (cte -> CTES .)
    LESS            reduce using rule 113 (cte -> CTES .)
    GREATER         reduce using rule 113 (cte -> CTES .)
    EQUALS          reduce using rule 113 (cte -> CTES .)
    NOTEQUAL        reduce using rule 113 (cte -> CTES .)
    GREATERTHAN     reduce using rule 113 (cte -> CTES .)
    LESSTHAN        reduce using rule 113 (cte -> CTES .)
    AND             reduce using rule 113 (cte -> CTES .)
    OR              reduce using rule 113 (cte -> CTES .)
    RBRACK          reduce using rule 113 (cte -> CTES .)
    SEMICOLON       reduce using rule 113 (cte -> CTES .)
    RPAREN          reduce using rule 113 (cte -> CTES .)
    COMMA           reduce using rule 113 (cte -> CTES .)
    FROM            reduce using rule 113 (cte -> CTES .)


state 108

    (91) expression_parenthesis -> LPAREN . expression RPAREN
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expression                     shift and go to state 142
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 109

    (11) main -> MAIN LPAREN RPAREN main_scope var_declarations . block
    (28) block -> . LBRACE block2 RBRACE

    LBRACE          shift and go to state 34

    block                          shift and go to state 143

state 110

    (44) read -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 144


state 111

    (61) invocation -> ID invocation_1 LPAREN . invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (63) invocation_2 -> . empty
    (114) empty -> .

    NOT             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEB            reduce using rule 114 (empty -> .)
    CTES            reduce using rule 114 (empty -> .)
    LPAREN          reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)

    invocation_2                   shift and go to state 145
    empty                          shift and go to state 146

state 112

    (78) assingation -> variable ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 147


state 113

    (47) for -> FOR LPAREN ID . for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4
    (48) for_1 -> . empty
    (114) empty -> .

    ASSIGN          reduce using rule 114 (empty -> .)

    for_1                          shift and go to state 148
    empty                          shift and go to state 149

state 114

    (46) do_while -> DO breadcrumb block . WHILE LPAREN expression RPAREN gotot SEMICOLON

    WHILE           shift and go to state 150


state 115

    (52) while -> WHILE breadcrumb LPAREN . expression RPAREN gotof block
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expression                     shift and go to state 151
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 116

    (55) if_else -> IF LPAREN expression . RPAREN gotof block ELSE goto block
    (54) if -> IF LPAREN expression . RPAREN gotof block

    RPAREN          shift and go to state 152


state 117

    (73) print -> PRINT LPAREN print_arguments . RPAREN SEMICOLON
    (75) print_arguments -> print_arguments . COMMA print_argument

    RPAREN          shift and go to state 153
    COMMA           shift and go to state 154


state 118

    (74) print_arguments -> print_argument .

    RPAREN          reduce using rule 74 (print_arguments -> print_argument .)
    COMMA           reduce using rule 74 (print_arguments -> print_argument .)


state 119

    (76) print_argument -> CTES .
    (113) cte -> CTES .

  ! reduce/reduce conflict for RPAREN resolved using rule 76 (print_argument -> CTES .)
  ! reduce/reduce conflict for COMMA resolved using rule 76 (print_argument -> CTES .)
    RPAREN          reduce using rule 76 (print_argument -> CTES .)
    COMMA           reduce using rule 76 (print_argument -> CTES .)
    TIMES           reduce using rule 113 (cte -> CTES .)
    DIVIDE          reduce using rule 113 (cte -> CTES .)
    PLUS            reduce using rule 113 (cte -> CTES .)
    MINUS           reduce using rule 113 (cte -> CTES .)
    LESS            reduce using rule 113 (cte -> CTES .)
    GREATER         reduce using rule 113 (cte -> CTES .)
    EQUALS          reduce using rule 113 (cte -> CTES .)
    NOTEQUAL        reduce using rule 113 (cte -> CTES .)
    GREATERTHAN     reduce using rule 113 (cte -> CTES .)
    LESSTHAN        reduce using rule 113 (cte -> CTES .)
    AND             reduce using rule 113 (cte -> CTES .)
    OR              reduce using rule 113 (cte -> CTES .)

  ! RPAREN          [ reduce using rule 113 (cte -> CTES .) ]
  ! COMMA           [ reduce using rule 113 (cte -> CTES .) ]


state 120

    (77) print_argument -> expression .

    RPAREN          reduce using rule 77 (print_argument -> expression .)
    COMMA           reduce using rule 77 (print_argument -> expression .)


state 121

    (43) gen_key -> GENKEY LPAREN CTES . RPAREN SEMICOLON

    RPAREN          shift and go to state 155


state 122

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration . parameters close_var_declaration RPAREN var_declarations
    (24) parameters -> . parameters COMMA parameter
    (25) parameters -> . parameter
    (26) parameters -> . empty
    (27) parameter -> . simple_type ID
    (114) empty -> .
    (104) simple_type -> . INT
    (105) simple_type -> . FLOAT
    (106) simple_type -> . CHAR
    (107) simple_type -> . BOOLEAN
    (108) simple_type -> . STRING

    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28
    STRING          shift and go to state 29

    simple_type                    shift and go to state 156
    parameters                     shift and go to state 157
    parameter                      shift and go to state 158
    empty                          shift and go to state 159

state 123

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration . parameters close_var_declaration RPAREN var_declarations
    (24) parameters -> . parameters COMMA parameter
    (25) parameters -> . parameter
    (26) parameters -> . empty
    (27) parameter -> . simple_type ID
    (114) empty -> .
    (104) simple_type -> . INT
    (105) simple_type -> . FLOAT
    (106) simple_type -> . CHAR
    (107) simple_type -> . BOOLEAN
    (108) simple_type -> . STRING

    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28
    STRING          shift and go to state 29

    parameters                     shift and go to state 160
    parameter                      shift and go to state 158
    empty                          shift and go to state 159
    simple_type                    shift and go to state 156

state 124

    (22) variable -> ID LBRACK expression RBRACK .
    (23) variable -> ID LBRACK expression RBRACK . LBRACK expression RBRACK

    COMMA           reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    TIMES           reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    PLUS            reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    MINUS           reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    LESS            reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    GREATER         reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    EQUALS          reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    AND             reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    OR              reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    RBRACK          reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    RPAREN          reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    FROM            reduce using rule 22 (variable -> ID LBRACK expression RBRACK .)
    LBRACK          shift and go to state 161


state 125

    (80) t_expression -> t_expression boolean_operator . g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    g_expression                   shift and go to state 162
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 126

    (100) boolean_operator -> AND .

    ID              reduce using rule 100 (boolean_operator -> AND .)
    CTEI            reduce using rule 100 (boolean_operator -> AND .)
    CTEF            reduce using rule 100 (boolean_operator -> AND .)
    CTEC            reduce using rule 100 (boolean_operator -> AND .)
    CTEB            reduce using rule 100 (boolean_operator -> AND .)
    CTES            reduce using rule 100 (boolean_operator -> AND .)
    LPAREN          reduce using rule 100 (boolean_operator -> AND .)


state 127

    (101) boolean_operator -> OR .

    ID              reduce using rule 101 (boolean_operator -> OR .)
    CTEI            reduce using rule 101 (boolean_operator -> OR .)
    CTEF            reduce using rule 101 (boolean_operator -> OR .)
    CTEC            reduce using rule 101 (boolean_operator -> OR .)
    CTEB            reduce using rule 101 (boolean_operator -> OR .)
    CTES            reduce using rule 101 (boolean_operator -> OR .)
    LPAREN          reduce using rule 101 (boolean_operator -> OR .)


state 128

    (72) expression -> NOT t_expression .
    (80) t_expression -> t_expression . boolean_operator g_expression
    (100) boolean_operator -> . AND
    (101) boolean_operator -> . OR

    RBRACK          reduce using rule 72 (expression -> NOT t_expression .)
    SEMICOLON       reduce using rule 72 (expression -> NOT t_expression .)
    RPAREN          reduce using rule 72 (expression -> NOT t_expression .)
    COMMA           reduce using rule 72 (expression -> NOT t_expression .)
    FROM            reduce using rule 72 (expression -> NOT t_expression .)
    AND             shift and go to state 126
    OR              shift and go to state 127

    boolean_operator               shift and go to state 125

state 129

    (82) g_expression -> g_expression comparison_operator . m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    m_expression                   shift and go to state 163
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 130

    (92) comparison_operator -> LESS .

    ID              reduce using rule 92 (comparison_operator -> LESS .)
    CTEI            reduce using rule 92 (comparison_operator -> LESS .)
    CTEF            reduce using rule 92 (comparison_operator -> LESS .)
    CTEC            reduce using rule 92 (comparison_operator -> LESS .)
    CTEB            reduce using rule 92 (comparison_operator -> LESS .)
    CTES            reduce using rule 92 (comparison_operator -> LESS .)
    LPAREN          reduce using rule 92 (comparison_operator -> LESS .)


state 131

    (93) comparison_operator -> GREATER .

    ID              reduce using rule 93 (comparison_operator -> GREATER .)
    CTEI            reduce using rule 93 (comparison_operator -> GREATER .)
    CTEF            reduce using rule 93 (comparison_operator -> GREATER .)
    CTEC            reduce using rule 93 (comparison_operator -> GREATER .)
    CTEB            reduce using rule 93 (comparison_operator -> GREATER .)
    CTES            reduce using rule 93 (comparison_operator -> GREATER .)
    LPAREN          reduce using rule 93 (comparison_operator -> GREATER .)


state 132

    (94) comparison_operator -> EQUALS .

    ID              reduce using rule 94 (comparison_operator -> EQUALS .)
    CTEI            reduce using rule 94 (comparison_operator -> EQUALS .)
    CTEF            reduce using rule 94 (comparison_operator -> EQUALS .)
    CTEC            reduce using rule 94 (comparison_operator -> EQUALS .)
    CTEB            reduce using rule 94 (comparison_operator -> EQUALS .)
    CTES            reduce using rule 94 (comparison_operator -> EQUALS .)
    LPAREN          reduce using rule 94 (comparison_operator -> EQUALS .)


state 133

    (95) comparison_operator -> NOTEQUAL .

    ID              reduce using rule 95 (comparison_operator -> NOTEQUAL .)
    CTEI            reduce using rule 95 (comparison_operator -> NOTEQUAL .)
    CTEF            reduce using rule 95 (comparison_operator -> NOTEQUAL .)
    CTEC            reduce using rule 95 (comparison_operator -> NOTEQUAL .)
    CTEB            reduce using rule 95 (comparison_operator -> NOTEQUAL .)
    CTES            reduce using rule 95 (comparison_operator -> NOTEQUAL .)
    LPAREN          reduce using rule 95 (comparison_operator -> NOTEQUAL .)


state 134

    (96) comparison_operator -> GREATERTHAN .

    ID              reduce using rule 96 (comparison_operator -> GREATERTHAN .)
    CTEI            reduce using rule 96 (comparison_operator -> GREATERTHAN .)
    CTEF            reduce using rule 96 (comparison_operator -> GREATERTHAN .)
    CTEC            reduce using rule 96 (comparison_operator -> GREATERTHAN .)
    CTEB            reduce using rule 96 (comparison_operator -> GREATERTHAN .)
    CTES            reduce using rule 96 (comparison_operator -> GREATERTHAN .)
    LPAREN          reduce using rule 96 (comparison_operator -> GREATERTHAN .)


state 135

    (97) comparison_operator -> LESSTHAN .

    ID              reduce using rule 97 (comparison_operator -> LESSTHAN .)
    CTEI            reduce using rule 97 (comparison_operator -> LESSTHAN .)
    CTEF            reduce using rule 97 (comparison_operator -> LESSTHAN .)
    CTEC            reduce using rule 97 (comparison_operator -> LESSTHAN .)
    CTEB            reduce using rule 97 (comparison_operator -> LESSTHAN .)
    CTES            reduce using rule 97 (comparison_operator -> LESSTHAN .)
    LPAREN          reduce using rule 97 (comparison_operator -> LESSTHAN .)


state 136

    (84) m_expression -> m_expression addition_operator . term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    term                           shift and go to state 164
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 137

    (98) addition_operator -> PLUS .

    ID              reduce using rule 98 (addition_operator -> PLUS .)
    CTEI            reduce using rule 98 (addition_operator -> PLUS .)
    CTEF            reduce using rule 98 (addition_operator -> PLUS .)
    CTEC            reduce using rule 98 (addition_operator -> PLUS .)
    CTEB            reduce using rule 98 (addition_operator -> PLUS .)
    CTES            reduce using rule 98 (addition_operator -> PLUS .)
    LPAREN          reduce using rule 98 (addition_operator -> PLUS .)


state 138

    (99) addition_operator -> MINUS .

    ID              reduce using rule 99 (addition_operator -> MINUS .)
    CTEI            reduce using rule 99 (addition_operator -> MINUS .)
    CTEF            reduce using rule 99 (addition_operator -> MINUS .)
    CTEC            reduce using rule 99 (addition_operator -> MINUS .)
    CTEB            reduce using rule 99 (addition_operator -> MINUS .)
    CTES            reduce using rule 99 (addition_operator -> MINUS .)
    LPAREN          reduce using rule 99 (addition_operator -> MINUS .)


state 139

    (86) term -> term multiplication_operator . factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    factor                         shift and go to state 165
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 140

    (102) multiplication_operator -> TIMES .

    ID              reduce using rule 102 (multiplication_operator -> TIMES .)
    CTEI            reduce using rule 102 (multiplication_operator -> TIMES .)
    CTEF            reduce using rule 102 (multiplication_operator -> TIMES .)
    CTEC            reduce using rule 102 (multiplication_operator -> TIMES .)
    CTEB            reduce using rule 102 (multiplication_operator -> TIMES .)
    CTES            reduce using rule 102 (multiplication_operator -> TIMES .)
    LPAREN          reduce using rule 102 (multiplication_operator -> TIMES .)


state 141

    (103) multiplication_operator -> DIVIDE .

    ID              reduce using rule 103 (multiplication_operator -> DIVIDE .)
    CTEI            reduce using rule 103 (multiplication_operator -> DIVIDE .)
    CTEF            reduce using rule 103 (multiplication_operator -> DIVIDE .)
    CTEC            reduce using rule 103 (multiplication_operator -> DIVIDE .)
    CTEB            reduce using rule 103 (multiplication_operator -> DIVIDE .)
    CTES            reduce using rule 103 (multiplication_operator -> DIVIDE .)
    LPAREN          reduce using rule 103 (multiplication_operator -> DIVIDE .)


state 142

    (91) expression_parenthesis -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 166


state 143

    (11) main -> MAIN LPAREN RPAREN main_scope var_declarations block .

    END             reduce using rule 11 (main -> MAIN LPAREN RPAREN main_scope var_declarations block .)


state 144

    (44) read -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 167


state 145

    (61) invocation -> ID invocation_1 LPAREN invocation_2 . expressions RPAREN invocation_5 SEMICOLON invocation_6
    (68) expressions -> . expressions COMMA invocation_4 expression invocation_3
    (69) expressions -> . expression invocation_3
    (70) expressions -> . empty
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (114) empty -> .
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    RPAREN          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expressions                    shift and go to state 168
    expression                     shift and go to state 169
    empty                          shift and go to state 170
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 146

    (63) invocation_2 -> empty .

    NOT             reduce using rule 63 (invocation_2 -> empty .)
    ID              reduce using rule 63 (invocation_2 -> empty .)
    CTEI            reduce using rule 63 (invocation_2 -> empty .)
    CTEF            reduce using rule 63 (invocation_2 -> empty .)
    CTEC            reduce using rule 63 (invocation_2 -> empty .)
    CTEB            reduce using rule 63 (invocation_2 -> empty .)
    CTES            reduce using rule 63 (invocation_2 -> empty .)
    LPAREN          reduce using rule 63 (invocation_2 -> empty .)
    RPAREN          reduce using rule 63 (invocation_2 -> empty .)
    COMMA           reduce using rule 63 (invocation_2 -> empty .)


state 147

    (78) assingation -> variable ASSIGN expression SEMICOLON .

    READ            reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    DO              reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    IF              reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    ID              reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    GENKEY          reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)


state 148

    (47) for -> FOR LPAREN ID for_1 . ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4

    ASSIGN          shift and go to state 171


state 149

    (48) for_1 -> empty .

    ASSIGN          reduce using rule 48 (for_1 -> empty .)


state 150

    (46) do_while -> DO breadcrumb block WHILE . LPAREN expression RPAREN gotot SEMICOLON

    LPAREN          shift and go to state 172


state 151

    (52) while -> WHILE breadcrumb LPAREN expression . RPAREN gotof block

    RPAREN          shift and go to state 173


state 152

    (55) if_else -> IF LPAREN expression RPAREN . gotof block ELSE goto block
    (54) if -> IF LPAREN expression RPAREN . gotof block
    (58) gotof -> . empty
    (114) empty -> .

    LBRACE          reduce using rule 114 (empty -> .)

    gotof                          shift and go to state 174
    empty                          shift and go to state 175

state 153

    (73) print -> PRINT LPAREN print_arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 176


state 154

    (75) print_arguments -> print_arguments COMMA . print_argument
    (76) print_argument -> . CTES
    (77) print_argument -> . expression
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    CTES            shift and go to state 119
    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    LPAREN          shift and go to state 108

    print_argument                 shift and go to state 177
    expression                     shift and go to state 120
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 155

    (43) gen_key -> GENKEY LPAREN CTES RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 178


state 156

    (27) parameter -> simple_type . ID

    ID              shift and go to state 179


state 157

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters . close_var_declaration RPAREN var_declarations
    (24) parameters -> parameters . COMMA parameter
    (18) close_var_declaration -> . empty
    (114) empty -> .

    COMMA           shift and go to state 181
    RPAREN          reduce using rule 114 (empty -> .)

    close_var_declaration          shift and go to state 180
    empty                          shift and go to state 89

state 158

    (25) parameters -> parameter .

    COMMA           reduce using rule 25 (parameters -> parameter .)
    RPAREN          reduce using rule 25 (parameters -> parameter .)


state 159

    (26) parameters -> empty .

    COMMA           reduce using rule 26 (parameters -> empty .)
    RPAREN          reduce using rule 26 (parameters -> empty .)


state 160

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters . close_var_declaration RPAREN var_declarations
    (24) parameters -> parameters . COMMA parameter
    (18) close_var_declaration -> . empty
    (114) empty -> .

    COMMA           shift and go to state 181
    RPAREN          reduce using rule 114 (empty -> .)

    close_var_declaration          shift and go to state 182
    empty                          shift and go to state 89

state 161

    (23) variable -> ID LBRACK expression RBRACK LBRACK . expression RBRACK
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expression                     shift and go to state 183
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 162

    (80) t_expression -> t_expression boolean_operator g_expression .
    (82) g_expression -> g_expression . comparison_operator m_expression
    (92) comparison_operator -> . LESS
    (93) comparison_operator -> . GREATER
    (94) comparison_operator -> . EQUALS
    (95) comparison_operator -> . NOTEQUAL
    (96) comparison_operator -> . GREATERTHAN
    (97) comparison_operator -> . LESSTHAN

    AND             reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    OR              reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    RBRACK          reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    SEMICOLON       reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    RPAREN          reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    COMMA           reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    FROM            reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    LESS            shift and go to state 130
    GREATER         shift and go to state 131
    EQUALS          shift and go to state 132
    NOTEQUAL        shift and go to state 133
    GREATERTHAN     shift and go to state 134
    LESSTHAN        shift and go to state 135

    comparison_operator            shift and go to state 129

state 163

    (82) g_expression -> g_expression comparison_operator m_expression .
    (84) m_expression -> m_expression . addition_operator term
    (98) addition_operator -> . PLUS
    (99) addition_operator -> . MINUS

    LESS            reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    GREATER         reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    EQUALS          reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    NOTEQUAL        reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    GREATERTHAN     reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    LESSTHAN        reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    AND             reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    OR              reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    RBRACK          reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    SEMICOLON       reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    RPAREN          reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    COMMA           reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    FROM            reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138

    addition_operator              shift and go to state 136

state 164

    (84) m_expression -> m_expression addition_operator term .
    (86) term -> term . multiplication_operator factor
    (102) multiplication_operator -> . TIMES
    (103) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    MINUS           reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    LESS            reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    GREATER         reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    EQUALS          reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    NOTEQUAL        reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    GREATERTHAN     reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    LESSTHAN        reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    AND             reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    OR              reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    RBRACK          reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    SEMICOLON       reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    RPAREN          reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    COMMA           reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    FROM            reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    TIMES           shift and go to state 140
    DIVIDE          shift and go to state 141

    multiplication_operator        shift and go to state 139

state 165

    (86) term -> term multiplication_operator factor .

    TIMES           reduce using rule 86 (term -> term multiplication_operator factor .)
    DIVIDE          reduce using rule 86 (term -> term multiplication_operator factor .)
    PLUS            reduce using rule 86 (term -> term multiplication_operator factor .)
    MINUS           reduce using rule 86 (term -> term multiplication_operator factor .)
    LESS            reduce using rule 86 (term -> term multiplication_operator factor .)
    GREATER         reduce using rule 86 (term -> term multiplication_operator factor .)
    EQUALS          reduce using rule 86 (term -> term multiplication_operator factor .)
    NOTEQUAL        reduce using rule 86 (term -> term multiplication_operator factor .)
    GREATERTHAN     reduce using rule 86 (term -> term multiplication_operator factor .)
    LESSTHAN        reduce using rule 86 (term -> term multiplication_operator factor .)
    AND             reduce using rule 86 (term -> term multiplication_operator factor .)
    OR              reduce using rule 86 (term -> term multiplication_operator factor .)
    RBRACK          reduce using rule 86 (term -> term multiplication_operator factor .)
    SEMICOLON       reduce using rule 86 (term -> term multiplication_operator factor .)
    RPAREN          reduce using rule 86 (term -> term multiplication_operator factor .)
    COMMA           reduce using rule 86 (term -> term multiplication_operator factor .)
    FROM            reduce using rule 86 (term -> term multiplication_operator factor .)


state 166

    (91) expression_parenthesis -> LPAREN expression RPAREN .

    TIMES           reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESS            reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    AND             reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    OR              reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)
    FROM            reduce using rule 91 (expression_parenthesis -> LPAREN expression RPAREN .)


state 167

    (44) read -> READ LPAREN ID RPAREN SEMICOLON .

    READ            reduce using rule 44 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    FOR             reduce using rule 44 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    DO              reduce using rule 44 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 44 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 44 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 44 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 44 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    GENKEY          reduce using rule 44 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 44 (read -> READ LPAREN ID RPAREN SEMICOLON .)


state 168

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions . RPAREN invocation_5 SEMICOLON invocation_6
    (68) expressions -> expressions . COMMA invocation_4 expression invocation_3

    RPAREN          shift and go to state 184
    COMMA           shift and go to state 185


state 169

    (69) expressions -> expression . invocation_3
    (64) invocation_3 -> . empty
    (114) empty -> .

    RPAREN          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)

    invocation_3                   shift and go to state 186
    empty                          shift and go to state 187

state 170

    (70) expressions -> empty .

    RPAREN          reduce using rule 70 (expressions -> empty .)
    COMMA           reduce using rule 70 (expressions -> empty .)


state 171

    (47) for -> FOR LPAREN ID for_1 ASSIGN . expression for_2 FROM expression RPAREN for_3 DO block for_4
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expression                     shift and go to state 188
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 172

    (46) do_while -> DO breadcrumb block WHILE LPAREN . expression RPAREN gotot SEMICOLON
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expression                     shift and go to state 189
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 173

    (52) while -> WHILE breadcrumb LPAREN expression RPAREN . gotof block
    (58) gotof -> . empty
    (114) empty -> .

    LBRACE          reduce using rule 114 (empty -> .)

    gotof                          shift and go to state 190
    empty                          shift and go to state 175

state 174

    (55) if_else -> IF LPAREN expression RPAREN gotof . block ELSE goto block
    (54) if -> IF LPAREN expression RPAREN gotof . block
    (28) block -> . LBRACE block2 RBRACE

    LBRACE          shift and go to state 34

    block                          shift and go to state 191

state 175

    (58) gotof -> empty .

    LBRACE          reduce using rule 58 (gotof -> empty .)


state 176

    (73) print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .

    READ            reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    FOR             reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    DO              reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    IF              reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    ID              reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    PRINT           reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    GENKEY          reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)


state 177

    (75) print_arguments -> print_arguments COMMA print_argument .

    RPAREN          reduce using rule 75 (print_arguments -> print_arguments COMMA print_argument .)
    COMMA           reduce using rule 75 (print_arguments -> print_arguments COMMA print_argument .)


state 178

    (43) gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .

    READ            reduce using rule 43 (gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .)
    FOR             reduce using rule 43 (gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .)
    DO              reduce using rule 43 (gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .)
    WHILE           reduce using rule 43 (gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .)
    IF              reduce using rule 43 (gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .)
    ID              reduce using rule 43 (gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .)
    PRINT           reduce using rule 43 (gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .)
    GENKEY          reduce using rule 43 (gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .)
    RBRACE          reduce using rule 43 (gen_key -> GENKEY LPAREN CTES RPAREN SEMICOLON .)


state 179

    (27) parameter -> simple_type ID .

    COMMA           reduce using rule 27 (parameter -> simple_type ID .)
    RPAREN          reduce using rule 27 (parameter -> simple_type ID .)


state 180

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration . RPAREN var_declarations

    RPAREN          shift and go to state 192


state 181

    (24) parameters -> parameters COMMA . parameter
    (27) parameter -> . simple_type ID
    (104) simple_type -> . INT
    (105) simple_type -> . FLOAT
    (106) simple_type -> . CHAR
    (107) simple_type -> . BOOLEAN
    (108) simple_type -> . STRING

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28
    STRING          shift and go to state 29

    parameter                      shift and go to state 193
    simple_type                    shift and go to state 156

state 182

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration . RPAREN var_declarations

    RPAREN          shift and go to state 194


state 183

    (23) variable -> ID LBRACK expression RBRACK LBRACK expression . RBRACK

    RBRACK          shift and go to state 195


state 184

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN . invocation_5 SEMICOLON invocation_6
    (66) invocation_5 -> . empty
    (114) empty -> .

    SEMICOLON       reduce using rule 114 (empty -> .)

    invocation_5                   shift and go to state 196
    empty                          shift and go to state 197

state 185

    (68) expressions -> expressions COMMA . invocation_4 expression invocation_3
    (65) invocation_4 -> . empty
    (114) empty -> .

    NOT             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEB            reduce using rule 114 (empty -> .)
    CTES            reduce using rule 114 (empty -> .)
    LPAREN          reduce using rule 114 (empty -> .)

    invocation_4                   shift and go to state 198
    empty                          shift and go to state 199

state 186

    (69) expressions -> expression invocation_3 .

    RPAREN          reduce using rule 69 (expressions -> expression invocation_3 .)
    COMMA           reduce using rule 69 (expressions -> expression invocation_3 .)


state 187

    (64) invocation_3 -> empty .

    RPAREN          reduce using rule 64 (invocation_3 -> empty .)
    COMMA           reduce using rule 64 (invocation_3 -> empty .)


state 188

    (47) for -> FOR LPAREN ID for_1 ASSIGN expression . for_2 FROM expression RPAREN for_3 DO block for_4
    (49) for_2 -> . empty
    (114) empty -> .

    FROM            reduce using rule 114 (empty -> .)

    for_2                          shift and go to state 200
    empty                          shift and go to state 201

state 189

    (46) do_while -> DO breadcrumb block WHILE LPAREN expression . RPAREN gotot SEMICOLON

    RPAREN          shift and go to state 202


state 190

    (52) while -> WHILE breadcrumb LPAREN expression RPAREN gotof . block
    (28) block -> . LBRACE block2 RBRACE

    LBRACE          shift and go to state 34

    block                          shift and go to state 203

state 191

    (55) if_else -> IF LPAREN expression RPAREN gotof block . ELSE goto block
    (54) if -> IF LPAREN expression RPAREN gotof block .

    ELSE            shift and go to state 204
    READ            reduce using rule 54 (if -> IF LPAREN expression RPAREN gotof block .)
    FOR             reduce using rule 54 (if -> IF LPAREN expression RPAREN gotof block .)
    DO              reduce using rule 54 (if -> IF LPAREN expression RPAREN gotof block .)
    WHILE           reduce using rule 54 (if -> IF LPAREN expression RPAREN gotof block .)
    IF              reduce using rule 54 (if -> IF LPAREN expression RPAREN gotof block .)
    ID              reduce using rule 54 (if -> IF LPAREN expression RPAREN gotof block .)
    PRINT           reduce using rule 54 (if -> IF LPAREN expression RPAREN gotof block .)
    GENKEY          reduce using rule 54 (if -> IF LPAREN expression RPAREN gotof block .)
    RBRACE          reduce using rule 54 (if -> IF LPAREN expression RPAREN gotof block .)


state 192

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN . var_declarations
    (13) var_declarations -> . var_declaration_list
    (14) var_declarations -> . empty
    (15) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (16) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    LBRACE          reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 205
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 193

    (24) parameters -> parameters COMMA parameter .

    COMMA           reduce using rule 24 (parameters -> parameters COMMA parameter .)
    RPAREN          reduce using rule 24 (parameters -> parameters COMMA parameter .)


state 194

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN . var_declarations
    (13) var_declarations -> . var_declaration_list
    (14) var_declarations -> . empty
    (15) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (16) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    LBRACE          reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 206
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 195

    (23) variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .

    COMMA           reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    TIMES           reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    PLUS            reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    MINUS           reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESS            reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATER         reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    EQUALS          reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    AND             reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    OR              reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RBRACK          reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RPAREN          reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    FROM            reduce using rule 23 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)


state 196

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 . SEMICOLON invocation_6

    SEMICOLON       shift and go to state 207


state 197

    (66) invocation_5 -> empty .

    SEMICOLON       reduce using rule 66 (invocation_5 -> empty .)


state 198

    (68) expressions -> expressions COMMA invocation_4 . expression invocation_3
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expression                     shift and go to state 208
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 199

    (65) invocation_4 -> empty .

    NOT             reduce using rule 65 (invocation_4 -> empty .)
    ID              reduce using rule 65 (invocation_4 -> empty .)
    CTEI            reduce using rule 65 (invocation_4 -> empty .)
    CTEF            reduce using rule 65 (invocation_4 -> empty .)
    CTEC            reduce using rule 65 (invocation_4 -> empty .)
    CTEB            reduce using rule 65 (invocation_4 -> empty .)
    CTES            reduce using rule 65 (invocation_4 -> empty .)
    LPAREN          reduce using rule 65 (invocation_4 -> empty .)


state 200

    (47) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 . FROM expression RPAREN for_3 DO block for_4

    FROM            shift and go to state 209


state 201

    (49) for_2 -> empty .

    FROM            reduce using rule 49 (for_2 -> empty .)


state 202

    (46) do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN . gotot SEMICOLON
    (56) gotot -> . empty
    (114) empty -> .

    SEMICOLON       reduce using rule 114 (empty -> .)

    gotot                          shift and go to state 210
    empty                          shift and go to state 211

state 203

    (52) while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .

    READ            reduce using rule 52 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .)
    FOR             reduce using rule 52 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .)
    DO              reduce using rule 52 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .)
    WHILE           reduce using rule 52 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .)
    IF              reduce using rule 52 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .)
    ID              reduce using rule 52 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .)
    PRINT           reduce using rule 52 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .)
    GENKEY          reduce using rule 52 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .)
    RBRACE          reduce using rule 52 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof block .)


state 204

    (55) if_else -> IF LPAREN expression RPAREN gotof block ELSE . goto block
    (57) goto -> . empty
    (114) empty -> .

    LBRACE          reduce using rule 114 (empty -> .)

    goto                           shift and go to state 212
    empty                          shift and go to state 213

state 205

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .

    LBRACE          reduce using rule 7 (function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .)


state 206

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .

    LBRACE          reduce using rule 8 (function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .)


state 207

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON . invocation_6
    (67) invocation_6 -> . empty
    (114) empty -> .

    READ            reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    PRINT           reduce using rule 114 (empty -> .)
    GENKEY          reduce using rule 114 (empty -> .)
    RBRACE          reduce using rule 114 (empty -> .)
    TIMES           reduce using rule 114 (empty -> .)
    DIVIDE          reduce using rule 114 (empty -> .)
    PLUS            reduce using rule 114 (empty -> .)
    MINUS           reduce using rule 114 (empty -> .)
    LESS            reduce using rule 114 (empty -> .)
    GREATER         reduce using rule 114 (empty -> .)
    EQUALS          reduce using rule 114 (empty -> .)
    NOTEQUAL        reduce using rule 114 (empty -> .)
    GREATERTHAN     reduce using rule 114 (empty -> .)
    LESSTHAN        reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    RBRACK          reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    FROM            reduce using rule 114 (empty -> .)

    invocation_6                   shift and go to state 214
    empty                          shift and go to state 215

state 208

    (68) expressions -> expressions COMMA invocation_4 expression . invocation_3
    (64) invocation_3 -> . empty
    (114) empty -> .

    RPAREN          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)

    invocation_3                   shift and go to state 216
    empty                          shift and go to state 187

state 209

    (47) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM . expression RPAREN for_3 DO block for_4
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . invocation
    (90) factor -> . expression_parenthesis
    (21) variable -> . ID
    (22) variable -> . ID LBRACK expression RBRACK
    (23) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (109) cte -> . CTEI
    (110) cte -> . CTEF
    (111) cte -> . CTEC
    (112) cte -> . CTEB
    (113) cte -> . CTES
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (91) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 94
    ID              shift and go to state 91
    CTEI            shift and go to state 103
    CTEF            shift and go to state 104
    CTEC            shift and go to state 105
    CTEB            shift and go to state 106
    CTES            shift and go to state 107
    LPAREN          shift and go to state 108

    expression                     shift and go to state 217
    t_expression                   shift and go to state 93
    g_expression                   shift and go to state 95
    m_expression                   shift and go to state 96
    term                           shift and go to state 97
    factor                         shift and go to state 98
    variable                       shift and go to state 99
    cte                            shift and go to state 100
    invocation                     shift and go to state 101
    expression_parenthesis         shift and go to state 102

state 210

    (46) do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot . SEMICOLON

    SEMICOLON       shift and go to state 218


state 211

    (56) gotot -> empty .

    SEMICOLON       reduce using rule 56 (gotot -> empty .)


state 212

    (55) if_else -> IF LPAREN expression RPAREN gotof block ELSE goto . block
    (28) block -> . LBRACE block2 RBRACE

    LBRACE          shift and go to state 34

    block                          shift and go to state 219

state 213

    (57) goto -> empty .

    LBRACE          reduce using rule 57 (goto -> empty .)


state 214

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .

    READ            reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    FOR             reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    DO              reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    WHILE           reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    IF              reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    ID              reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    PRINT           reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    GENKEY          reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    RBRACE          reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    TIMES           reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    DIVIDE          reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    PLUS            reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    MINUS           reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    LESS            reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    GREATER         reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    EQUALS          reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    NOTEQUAL        reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    GREATERTHAN     reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    LESSTHAN        reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    AND             reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    OR              reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    RBRACK          reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    SEMICOLON       reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    RPAREN          reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    COMMA           reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    FROM            reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)


state 215

    (67) invocation_6 -> empty .

    READ            reduce using rule 67 (invocation_6 -> empty .)
    FOR             reduce using rule 67 (invocation_6 -> empty .)
    DO              reduce using rule 67 (invocation_6 -> empty .)
    WHILE           reduce using rule 67 (invocation_6 -> empty .)
    IF              reduce using rule 67 (invocation_6 -> empty .)
    ID              reduce using rule 67 (invocation_6 -> empty .)
    PRINT           reduce using rule 67 (invocation_6 -> empty .)
    GENKEY          reduce using rule 67 (invocation_6 -> empty .)
    RBRACE          reduce using rule 67 (invocation_6 -> empty .)
    TIMES           reduce using rule 67 (invocation_6 -> empty .)
    DIVIDE          reduce using rule 67 (invocation_6 -> empty .)
    PLUS            reduce using rule 67 (invocation_6 -> empty .)
    MINUS           reduce using rule 67 (invocation_6 -> empty .)
    LESS            reduce using rule 67 (invocation_6 -> empty .)
    GREATER         reduce using rule 67 (invocation_6 -> empty .)
    EQUALS          reduce using rule 67 (invocation_6 -> empty .)
    NOTEQUAL        reduce using rule 67 (invocation_6 -> empty .)
    GREATERTHAN     reduce using rule 67 (invocation_6 -> empty .)
    LESSTHAN        reduce using rule 67 (invocation_6 -> empty .)
    AND             reduce using rule 67 (invocation_6 -> empty .)
    OR              reduce using rule 67 (invocation_6 -> empty .)
    RBRACK          reduce using rule 67 (invocation_6 -> empty .)
    SEMICOLON       reduce using rule 67 (invocation_6 -> empty .)
    RPAREN          reduce using rule 67 (invocation_6 -> empty .)
    COMMA           reduce using rule 67 (invocation_6 -> empty .)
    FROM            reduce using rule 67 (invocation_6 -> empty .)


state 216

    (68) expressions -> expressions COMMA invocation_4 expression invocation_3 .

    RPAREN          reduce using rule 68 (expressions -> expressions COMMA invocation_4 expression invocation_3 .)
    COMMA           reduce using rule 68 (expressions -> expressions COMMA invocation_4 expression invocation_3 .)


state 217

    (47) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression . RPAREN for_3 DO block for_4

    RPAREN          shift and go to state 220


state 218

    (46) do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .

    READ            reduce using rule 46 (do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    FOR             reduce using rule 46 (do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    DO              reduce using rule 46 (do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    WHILE           reduce using rule 46 (do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    IF              reduce using rule 46 (do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    ID              reduce using rule 46 (do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    PRINT           reduce using rule 46 (do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    GENKEY          reduce using rule 46 (do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    RBRACE          reduce using rule 46 (do_while -> DO breadcrumb block WHILE LPAREN expression RPAREN gotot SEMICOLON .)


state 219

    (55) if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .

    READ            reduce using rule 55 (if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .)
    FOR             reduce using rule 55 (if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .)
    DO              reduce using rule 55 (if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .)
    WHILE           reduce using rule 55 (if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .)
    IF              reduce using rule 55 (if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .)
    ID              reduce using rule 55 (if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .)
    PRINT           reduce using rule 55 (if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .)
    GENKEY          reduce using rule 55 (if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .)
    RBRACE          reduce using rule 55 (if_else -> IF LPAREN expression RPAREN gotof block ELSE goto block .)


state 220

    (47) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN . for_3 DO block for_4
    (50) for_3 -> . empty
    (114) empty -> .

    DO              reduce using rule 114 (empty -> .)

    for_3                          shift and go to state 221
    empty                          shift and go to state 222

state 221

    (47) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 . DO block for_4

    DO              shift and go to state 223


state 222

    (50) for_3 -> empty .

    DO              reduce using rule 50 (for_3 -> empty .)


state 223

    (47) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO . block for_4
    (28) block -> . LBRACE block2 RBRACE

    LBRACE          shift and go to state 34

    block                          shift and go to state 224

state 224

    (47) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block . for_4
    (51) for_4 -> . empty
    (114) empty -> .

    READ            reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    PRINT           reduce using rule 114 (empty -> .)
    GENKEY          reduce using rule 114 (empty -> .)
    RBRACE          reduce using rule 114 (empty -> .)

    for_4                          shift and go to state 225
    empty                          shift and go to state 226

state 225

    (47) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .

    READ            reduce using rule 47 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .)
    FOR             reduce using rule 47 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .)
    DO              reduce using rule 47 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .)
    WHILE           reduce using rule 47 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .)
    IF              reduce using rule 47 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .)
    ID              reduce using rule 47 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .)
    PRINT           reduce using rule 47 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .)
    GENKEY          reduce using rule 47 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .)
    RBRACE          reduce using rule 47 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO block for_4 .)


state 226

    (51) for_4 -> empty .

    READ            reduce using rule 51 (for_4 -> empty .)
    FOR             reduce using rule 51 (for_4 -> empty .)
    DO              reduce using rule 51 (for_4 -> empty .)
    WHILE           reduce using rule 51 (for_4 -> empty .)
    IF              reduce using rule 51 (for_4 -> empty .)
    ID              reduce using rule 51 (for_4 -> empty .)
    PRINT           reduce using rule 51 (for_4 -> empty .)
    GENKEY          reduce using rule 51 (for_4 -> empty .)
    RBRACE          reduce using rule 51 (for_4 -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 7 resolved as shift
WARNING: reduce/reduce conflict in state 119 resolved using rule (print_argument -> CTES)
WARNING: rejected rule (cte -> CTES) in state 119
