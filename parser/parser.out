Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    STRING
    THEN

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END
Rule 2     global_scope -> empty
Rule 3     functions -> functions function
Rule 4     functions -> function
Rule 5     functions -> empty
Rule 6     function -> FUNCTION function_signature function_body
Rule 7     function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
Rule 8     function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
Rule 9     function_body -> LBRACE statements return RBRACE
Rule 10    function_body -> LBRACE statements RBRACE
Rule 11    function_1 -> empty
Rule 12    main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
Rule 13    main_scope -> empty
Rule 14    var_declarations -> var_declaration_list
Rule 15    var_declarations -> empty
Rule 16    var_declaration_list -> var_declaration var_declarations
Rule 17    var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
Rule 18    open_var_declaration -> empty
Rule 19    close_var_declaration -> empty
Rule 20    variables -> variable
Rule 21    variables -> variable COMMA variables
Rule 22    variable -> ID
Rule 23    variable -> ID LBRACK expression RBRACK
Rule 24    variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK
Rule 25    parameters -> parameters COMMA parameter
Rule 26    parameters -> parameter
Rule 27    parameters -> empty
Rule 28    parameter -> simple_type ID
Rule 29    statements -> statements statement
Rule 30    statements -> statement
Rule 31    statements -> empty
Rule 32    statement -> read
Rule 33    statement -> assing_to_call
Rule 34    statement -> assingation
Rule 35    statement -> for
Rule 36    statement -> do_while
Rule 37    statement -> while
Rule 38    statement -> if_else
Rule 39    statement -> invocation
Rule 40    statement -> if
Rule 41    statement -> return
Rule 42    statement -> print
Rule 43    assing_to_call -> variable ASSIGN invocation
Rule 44    do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
Rule 45    for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
Rule 46    for_1 -> empty
Rule 47    for_2 -> empty
Rule 48    for_3 -> empty
Rule 49    for_4 -> empty
Rule 50    while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
Rule 51    breadcrumb -> empty
Rule 52    if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
Rule 53    if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
Rule 54    gotot -> empty
Rule 55    goto -> empty
Rule 56    gotof -> empty
Rule 57    return -> RETURN expression SEMICOLON
Rule 58    read -> READ LPAREN variable_list RPAREN SEMICOLON
Rule 59    variable_list -> variable
Rule 60    variable_list -> variable_list COMMA variable
Rule 61    invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
Rule 62    invocation_1 -> empty
Rule 63    invocation_2 -> empty
Rule 64    invocation_3 -> empty
Rule 65    invocation_4 -> empty
Rule 66    invocation_5 -> empty
Rule 67    invocation_6 -> empty
Rule 68    expressions -> expressions COMMA invocation_4 expression invocation_3
Rule 69    expressions -> expression invocation_3
Rule 70    expressions -> empty
Rule 71    expression -> t_expression
Rule 72    expression -> NOT t_expression
Rule 73    print -> PRINT LPAREN print_arguments RPAREN SEMICOLON
Rule 74    print_arguments -> print_argument
Rule 75    print_arguments -> print_arguments COMMA print_argument
Rule 76    print_argument -> CTES
Rule 77    print_argument -> expression
Rule 78    assingation -> variable ASSIGN expression SEMICOLON
Rule 79    t_expression -> g_expression
Rule 80    t_expression -> t_expression boolean_operator g_expression
Rule 81    g_expression -> m_expression
Rule 82    g_expression -> g_expression comparison_operator m_expression
Rule 83    m_expression -> term
Rule 84    m_expression -> m_expression addition_operator term
Rule 85    term -> factor
Rule 86    term -> term multiplication_operator factor
Rule 87    factor -> variable
Rule 88    factor -> cte
Rule 89    factor -> expression_parenthesis
Rule 90    expression_parenthesis -> LPAREN expression RPAREN
Rule 91    comparison_operator -> LESS
Rule 92    comparison_operator -> GREATER
Rule 93    comparison_operator -> EQUALS
Rule 94    comparison_operator -> NOTEQUAL
Rule 95    comparison_operator -> GREATERTHAN
Rule 96    comparison_operator -> LESSTHAN
Rule 97    addition_operator -> PLUS
Rule 98    addition_operator -> MINUS
Rule 99    boolean_operator -> AND
Rule 100   boolean_operator -> OR
Rule 101   multiplication_operator -> TIMES
Rule 102   multiplication_operator -> DIVIDE
Rule 103   simple_type -> INT
Rule 104   simple_type -> FLOAT
Rule 105   simple_type -> CHAR
Rule 106   simple_type -> BOOLEAN
Rule 107   cte -> CTEI
Rule 108   cte -> CTEF
Rule 109   cte -> CTEC
Rule 110   cte -> CTEB
Rule 111   empty -> <empty>

Terminals, with rules where they appear

AND                  : 99
ASSIGN               : 43 45 78
BOOLEAN              : 106
CHAR                 : 105
COLON                : 
COMMA                : 21 25 60 68 75
COMMENT              : 
CTEB                 : 110
CTEC                 : 109
CTEF                 : 108
CTEI                 : 107
CTES                 : 76
DIVIDE               : 102
DO                   : 44 45
ELSE                 : 53
END                  : 1
EQUALS               : 93
FLOAT                : 104
FOR                  : 45
FROM                 : 45
FUNCTION             : 6
GREATER              : 92
GREATERTHAN          : 95
ID                   : 1 7 8 22 23 24 28 45 61
IF                   : 52 53
INT                  : 103
LBRACE               : 9 10 12 44 45 50 52 53 53
LBRACK               : 23 24 24
LESS                 : 91
LESSTHAN             : 96
LPAREN               : 7 8 12 44 45 50 52 53 58 61 73 90
MAIN                 : 12
MINUS                : 98
NOT                  : 72
NOTEQUAL             : 94
OR                   : 100
PLUS                 : 97
PRINT                : 73
PROGRAM              : 1
RBRACE               : 9 10 12 44 45 50 52 53 53
RBRACK               : 23 24 24
READ                 : 58
RETURN               : 57
RPAREN               : 7 8 12 44 45 50 52 53 58 61 73 90
SEMICOLON            : 1 17 44 57 58 61 73 78
STRING               : 
THEN                 : 
TIMES                : 101
VARIABLE             : 17
VOID                 : 8
WHILE                : 44 50
error                : 

Nonterminals, with rules where they appear

addition_operator    : 84
assing_to_call       : 33
assingation          : 34
boolean_operator     : 80
breadcrumb           : 44 50
close_var_declaration : 7 8 17
comparison_operator  : 82
cte                  : 88
do_while             : 36
empty                : 2 5 11 13 15 18 19 27 31 46 47 48 49 51 54 55 56 62 63 64 65 66 67 70
expression           : 23 24 24 44 45 45 50 52 53 57 68 69 77 78 90
expression_parenthesis : 89
expressions          : 61 68
factor               : 85 86
for                  : 35
for_1                : 45
for_2                : 45
for_3                : 45
for_4                : 45
function             : 3 4
function_1           : 7 8
function_body        : 6
function_signature   : 6
functions            : 1 3
g_expression         : 79 80 82
global_scope         : 1
goto                 : 53
gotof                : 50 52 53
gotot                : 44
if                   : 40
if_else              : 38
invocation           : 39 43
invocation_1         : 61
invocation_2         : 61
invocation_3         : 68 69
invocation_4         : 68
invocation_5         : 61
invocation_6         : 61
m_expression         : 81 82 84
main                 : 1
main_scope           : 12
multiplication_operator : 86
open_var_declaration : 7 8 17
parameter            : 25 26
parameters           : 7 8 25
print                : 42
print_argument       : 74 75
print_arguments      : 73 75
program              : 0
read                 : 32
return               : 9 41
simple_type          : 7 17 28
statement            : 29 30
statements           : 9 10 12 29 44 45 50 52 53 53
t_expression         : 71 72 80
term                 : 83 84 86
var_declaration      : 16
var_declaration_list : 14
var_declarations     : 1 7 8 12 16
variable             : 20 21 43 59 60 78 87
variable_list        : 58 60
variables            : 17 21
while                : 37

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON global_scope var_declarations functions main END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON global_scope var_declarations functions main END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON global_scope var_declarations functions main END

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . global_scope var_declarations functions main END
    (2) global_scope -> . empty
    (111) empty -> .

    VARIABLE        reduce using rule 111 (empty -> .)
    FUNCTION        reduce using rule 111 (empty -> .)
    MAIN            reduce using rule 111 (empty -> .)

    global_scope                   shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) program -> PROGRAM ID SEMICOLON global_scope . var_declarations functions main END
    (14) var_declarations -> . var_declaration_list
    (15) var_declarations -> . empty
    (16) var_declaration_list -> . var_declaration var_declarations
    (111) empty -> .
    (17) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    FUNCTION        reduce using rule 111 (empty -> .)
    MAIN            reduce using rule 111 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 7
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 6

    (2) global_scope -> empty .

    VARIABLE        reduce using rule 2 (global_scope -> empty .)
    FUNCTION        reduce using rule 2 (global_scope -> empty .)
    MAIN            reduce using rule 2 (global_scope -> empty .)


state 7

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations . functions main END
    (3) functions -> . functions function
    (4) functions -> . function
    (5) functions -> . empty
    (6) function -> . FUNCTION function_signature function_body
    (111) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 111 (empty -> .)

  ! FUNCTION        [ reduce using rule 111 (empty -> .) ]

    functions                      shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 8

    (14) var_declarations -> var_declaration_list .

    FUNCTION        reduce using rule 14 (var_declarations -> var_declaration_list .)
    MAIN            reduce using rule 14 (var_declarations -> var_declaration_list .)
    LBRACE          reduce using rule 14 (var_declarations -> var_declaration_list .)


state 9

    (15) var_declarations -> empty .

    FUNCTION        reduce using rule 15 (var_declarations -> empty .)
    MAIN            reduce using rule 15 (var_declarations -> empty .)
    LBRACE          reduce using rule 15 (var_declarations -> empty .)


state 10

    (16) var_declaration_list -> var_declaration . var_declarations
    (14) var_declarations -> . var_declaration_list
    (15) var_declarations -> . empty
    (16) var_declaration_list -> . var_declaration var_declarations
    (111) empty -> .
    (17) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    FUNCTION        reduce using rule 111 (empty -> .)
    MAIN            reduce using rule 111 (empty -> .)
    LBRACE          reduce using rule 111 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declaration                shift and go to state 10
    var_declarations               shift and go to state 16
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9

state 11

    (17) var_declaration -> VARIABLE . open_var_declaration simple_type variables SEMICOLON close_var_declaration
    (18) open_var_declaration -> . empty
    (111) empty -> .

    INT             reduce using rule 111 (empty -> .)
    FLOAT           reduce using rule 111 (empty -> .)
    CHAR            reduce using rule 111 (empty -> .)
    BOOLEAN         reduce using rule 111 (empty -> .)

    open_var_declaration           shift and go to state 17
    empty                          shift and go to state 18

state 12

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions . main END
    (3) functions -> functions . function
    (12) main -> . MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
    (6) function -> . FUNCTION function_signature function_body

    MAIN            shift and go to state 21
    FUNCTION        shift and go to state 15

    main                           shift and go to state 19
    function                       shift and go to state 20

state 13

    (4) functions -> function .

    MAIN            reduce using rule 4 (functions -> function .)
    FUNCTION        reduce using rule 4 (functions -> function .)


state 14

    (5) functions -> empty .

    MAIN            reduce using rule 5 (functions -> empty .)
    FUNCTION        reduce using rule 5 (functions -> empty .)


state 15

    (6) function -> FUNCTION . function_signature function_body
    (7) function_signature -> . simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (8) function_signature -> . VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (103) simple_type -> . INT
    (104) simple_type -> . FLOAT
    (105) simple_type -> . CHAR
    (106) simple_type -> . BOOLEAN

    VOID            shift and go to state 24
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    function_signature             shift and go to state 22
    simple_type                    shift and go to state 23

state 16

    (16) var_declaration_list -> var_declaration var_declarations .

    FUNCTION        reduce using rule 16 (var_declaration_list -> var_declaration var_declarations .)
    MAIN            reduce using rule 16 (var_declaration_list -> var_declaration var_declarations .)
    LBRACE          reduce using rule 16 (var_declaration_list -> var_declaration var_declarations .)


state 17

    (17) var_declaration -> VARIABLE open_var_declaration . simple_type variables SEMICOLON close_var_declaration
    (103) simple_type -> . INT
    (104) simple_type -> . FLOAT
    (105) simple_type -> . CHAR
    (106) simple_type -> . BOOLEAN

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    simple_type                    shift and go to state 29

state 18

    (18) open_var_declaration -> empty .

    INT             reduce using rule 18 (open_var_declaration -> empty .)
    FLOAT           reduce using rule 18 (open_var_declaration -> empty .)
    CHAR            reduce using rule 18 (open_var_declaration -> empty .)
    BOOLEAN         reduce using rule 18 (open_var_declaration -> empty .)
    COMMA           reduce using rule 18 (open_var_declaration -> empty .)
    RPAREN          reduce using rule 18 (open_var_declaration -> empty .)


state 19

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main . END

    END             shift and go to state 30


state 20

    (3) functions -> functions function .

    MAIN            reduce using rule 3 (functions -> functions function .)
    FUNCTION        reduce using rule 3 (functions -> functions function .)


state 21

    (12) main -> MAIN . LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 31


state 22

    (6) function -> FUNCTION function_signature . function_body
    (9) function_body -> . LBRACE statements return RBRACE
    (10) function_body -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 33

    function_body                  shift and go to state 32

state 23

    (7) function_signature -> simple_type . ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    ID              shift and go to state 34


state 24

    (8) function_signature -> VOID . ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    ID              shift and go to state 35


state 25

    (103) simple_type -> INT .

    ID              reduce using rule 103 (simple_type -> INT .)


state 26

    (104) simple_type -> FLOAT .

    ID              reduce using rule 104 (simple_type -> FLOAT .)


state 27

    (105) simple_type -> CHAR .

    ID              reduce using rule 105 (simple_type -> CHAR .)


state 28

    (106) simple_type -> BOOLEAN .

    ID              reduce using rule 106 (simple_type -> BOOLEAN .)


state 29

    (17) var_declaration -> VARIABLE open_var_declaration simple_type . variables SEMICOLON close_var_declaration
    (20) variables -> . variable
    (21) variables -> . variable COMMA variables
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 38

    variables                      shift and go to state 36
    variable                       shift and go to state 37

state 30

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .)


state 31

    (12) main -> MAIN LPAREN . RPAREN main_scope var_declarations LBRACE statements RBRACE

    RPAREN          shift and go to state 39


state 32

    (6) function -> FUNCTION function_signature function_body .

    MAIN            reduce using rule 6 (function -> FUNCTION function_signature function_body .)
    FUNCTION        reduce using rule 6 (function -> FUNCTION function_signature function_body .)


state 33

    (9) function_body -> LBRACE . statements return RBRACE
    (10) function_body -> LBRACE . statements RBRACE
    (29) statements -> . statements statement
    (30) statements -> . statement
    (31) statements -> . empty
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (111) empty -> .
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 111 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! READ            [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! DO              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! PRINT           [ reduce using rule 111 (empty -> .) ]

    statements                     shift and go to state 40
    return                         shift and go to state 41
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 34

    (7) function_signature -> simple_type ID . function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (11) function_1 -> . empty
    (111) empty -> .

    LPAREN          reduce using rule 111 (empty -> .)

    function_1                     shift and go to state 63
    empty                          shift and go to state 64

state 35

    (8) function_signature -> VOID ID . function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (11) function_1 -> . empty
    (111) empty -> .

    LPAREN          reduce using rule 111 (empty -> .)

    function_1                     shift and go to state 65
    empty                          shift and go to state 64

state 36

    (17) var_declaration -> VARIABLE open_var_declaration simple_type variables . SEMICOLON close_var_declaration

    SEMICOLON       shift and go to state 66


state 37

    (20) variables -> variable .
    (21) variables -> variable . COMMA variables

    SEMICOLON       reduce using rule 20 (variables -> variable .)
    COMMA           shift and go to state 67


state 38

    (22) variable -> ID .
    (23) variable -> ID . LBRACK expression RBRACK
    (24) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    COMMA           reduce using rule 22 (variable -> ID .)
    SEMICOLON       reduce using rule 22 (variable -> ID .)
    TIMES           reduce using rule 22 (variable -> ID .)
    DIVIDE          reduce using rule 22 (variable -> ID .)
    PLUS            reduce using rule 22 (variable -> ID .)
    MINUS           reduce using rule 22 (variable -> ID .)
    LESS            reduce using rule 22 (variable -> ID .)
    GREATER         reduce using rule 22 (variable -> ID .)
    EQUALS          reduce using rule 22 (variable -> ID .)
    NOTEQUAL        reduce using rule 22 (variable -> ID .)
    GREATERTHAN     reduce using rule 22 (variable -> ID .)
    LESSTHAN        reduce using rule 22 (variable -> ID .)
    AND             reduce using rule 22 (variable -> ID .)
    OR              reduce using rule 22 (variable -> ID .)
    RBRACK          reduce using rule 22 (variable -> ID .)
    RPAREN          reduce using rule 22 (variable -> ID .)
    FROM            reduce using rule 22 (variable -> ID .)
    LBRACK          shift and go to state 68


state 39

    (12) main -> MAIN LPAREN RPAREN . main_scope var_declarations LBRACE statements RBRACE
    (13) main_scope -> . empty
    (111) empty -> .

    VARIABLE        reduce using rule 111 (empty -> .)
    LBRACE          reduce using rule 111 (empty -> .)

    main_scope                     shift and go to state 69
    empty                          shift and go to state 70

state 40

    (9) function_body -> LBRACE statements . return RBRACE
    (10) function_body -> LBRACE statements . RBRACE
    (29) statements -> statements . statement
    (57) return -> . RETURN expression SEMICOLON
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 72
    RETURN          shift and go to state 61
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    PRINT           shift and go to state 62

    return                         shift and go to state 71
    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 41

    (41) statement -> return .

    RBRACE          reduce using rule 41 (statement -> return .)
    RETURN          reduce using rule 41 (statement -> return .)
    READ            reduce using rule 41 (statement -> return .)
    FOR             reduce using rule 41 (statement -> return .)
    DO              reduce using rule 41 (statement -> return .)
    WHILE           reduce using rule 41 (statement -> return .)
    IF              reduce using rule 41 (statement -> return .)
    ID              reduce using rule 41 (statement -> return .)
    PRINT           reduce using rule 41 (statement -> return .)


state 42

    (30) statements -> statement .

    RBRACE          reduce using rule 30 (statements -> statement .)
    RETURN          reduce using rule 30 (statements -> statement .)
    READ            reduce using rule 30 (statements -> statement .)
    FOR             reduce using rule 30 (statements -> statement .)
    DO              reduce using rule 30 (statements -> statement .)
    WHILE           reduce using rule 30 (statements -> statement .)
    IF              reduce using rule 30 (statements -> statement .)
    ID              reduce using rule 30 (statements -> statement .)
    PRINT           reduce using rule 30 (statements -> statement .)


state 43

    (31) statements -> empty .

    RBRACE          reduce using rule 31 (statements -> empty .)
    RETURN          reduce using rule 31 (statements -> empty .)
    READ            reduce using rule 31 (statements -> empty .)
    FOR             reduce using rule 31 (statements -> empty .)
    DO              reduce using rule 31 (statements -> empty .)
    WHILE           reduce using rule 31 (statements -> empty .)
    IF              reduce using rule 31 (statements -> empty .)
    ID              reduce using rule 31 (statements -> empty .)
    PRINT           reduce using rule 31 (statements -> empty .)


state 44

    (32) statement -> read .

    RBRACE          reduce using rule 32 (statement -> read .)
    RETURN          reduce using rule 32 (statement -> read .)
    READ            reduce using rule 32 (statement -> read .)
    FOR             reduce using rule 32 (statement -> read .)
    DO              reduce using rule 32 (statement -> read .)
    WHILE           reduce using rule 32 (statement -> read .)
    IF              reduce using rule 32 (statement -> read .)
    ID              reduce using rule 32 (statement -> read .)
    PRINT           reduce using rule 32 (statement -> read .)


state 45

    (33) statement -> assing_to_call .

    RBRACE          reduce using rule 33 (statement -> assing_to_call .)
    RETURN          reduce using rule 33 (statement -> assing_to_call .)
    READ            reduce using rule 33 (statement -> assing_to_call .)
    FOR             reduce using rule 33 (statement -> assing_to_call .)
    DO              reduce using rule 33 (statement -> assing_to_call .)
    WHILE           reduce using rule 33 (statement -> assing_to_call .)
    IF              reduce using rule 33 (statement -> assing_to_call .)
    ID              reduce using rule 33 (statement -> assing_to_call .)
    PRINT           reduce using rule 33 (statement -> assing_to_call .)


state 46

    (34) statement -> assingation .

    RBRACE          reduce using rule 34 (statement -> assingation .)
    RETURN          reduce using rule 34 (statement -> assingation .)
    READ            reduce using rule 34 (statement -> assingation .)
    FOR             reduce using rule 34 (statement -> assingation .)
    DO              reduce using rule 34 (statement -> assingation .)
    WHILE           reduce using rule 34 (statement -> assingation .)
    IF              reduce using rule 34 (statement -> assingation .)
    ID              reduce using rule 34 (statement -> assingation .)
    PRINT           reduce using rule 34 (statement -> assingation .)


state 47

    (35) statement -> for .

    RBRACE          reduce using rule 35 (statement -> for .)
    RETURN          reduce using rule 35 (statement -> for .)
    READ            reduce using rule 35 (statement -> for .)
    FOR             reduce using rule 35 (statement -> for .)
    DO              reduce using rule 35 (statement -> for .)
    WHILE           reduce using rule 35 (statement -> for .)
    IF              reduce using rule 35 (statement -> for .)
    ID              reduce using rule 35 (statement -> for .)
    PRINT           reduce using rule 35 (statement -> for .)


state 48

    (36) statement -> do_while .

    RBRACE          reduce using rule 36 (statement -> do_while .)
    RETURN          reduce using rule 36 (statement -> do_while .)
    READ            reduce using rule 36 (statement -> do_while .)
    FOR             reduce using rule 36 (statement -> do_while .)
    DO              reduce using rule 36 (statement -> do_while .)
    WHILE           reduce using rule 36 (statement -> do_while .)
    IF              reduce using rule 36 (statement -> do_while .)
    ID              reduce using rule 36 (statement -> do_while .)
    PRINT           reduce using rule 36 (statement -> do_while .)


state 49

    (37) statement -> while .

    RBRACE          reduce using rule 37 (statement -> while .)
    RETURN          reduce using rule 37 (statement -> while .)
    READ            reduce using rule 37 (statement -> while .)
    FOR             reduce using rule 37 (statement -> while .)
    DO              reduce using rule 37 (statement -> while .)
    WHILE           reduce using rule 37 (statement -> while .)
    IF              reduce using rule 37 (statement -> while .)
    ID              reduce using rule 37 (statement -> while .)
    PRINT           reduce using rule 37 (statement -> while .)


state 50

    (38) statement -> if_else .

    RBRACE          reduce using rule 38 (statement -> if_else .)
    RETURN          reduce using rule 38 (statement -> if_else .)
    READ            reduce using rule 38 (statement -> if_else .)
    FOR             reduce using rule 38 (statement -> if_else .)
    DO              reduce using rule 38 (statement -> if_else .)
    WHILE           reduce using rule 38 (statement -> if_else .)
    IF              reduce using rule 38 (statement -> if_else .)
    ID              reduce using rule 38 (statement -> if_else .)
    PRINT           reduce using rule 38 (statement -> if_else .)


state 51

    (39) statement -> invocation .

    RBRACE          reduce using rule 39 (statement -> invocation .)
    RETURN          reduce using rule 39 (statement -> invocation .)
    READ            reduce using rule 39 (statement -> invocation .)
    FOR             reduce using rule 39 (statement -> invocation .)
    DO              reduce using rule 39 (statement -> invocation .)
    WHILE           reduce using rule 39 (statement -> invocation .)
    IF              reduce using rule 39 (statement -> invocation .)
    ID              reduce using rule 39 (statement -> invocation .)
    PRINT           reduce using rule 39 (statement -> invocation .)


state 52

    (40) statement -> if .

    RBRACE          reduce using rule 40 (statement -> if .)
    RETURN          reduce using rule 40 (statement -> if .)
    READ            reduce using rule 40 (statement -> if .)
    FOR             reduce using rule 40 (statement -> if .)
    DO              reduce using rule 40 (statement -> if .)
    WHILE           reduce using rule 40 (statement -> if .)
    IF              reduce using rule 40 (statement -> if .)
    ID              reduce using rule 40 (statement -> if .)
    PRINT           reduce using rule 40 (statement -> if .)


state 53

    (42) statement -> print .

    RBRACE          reduce using rule 42 (statement -> print .)
    RETURN          reduce using rule 42 (statement -> print .)
    READ            reduce using rule 42 (statement -> print .)
    FOR             reduce using rule 42 (statement -> print .)
    DO              reduce using rule 42 (statement -> print .)
    WHILE           reduce using rule 42 (statement -> print .)
    IF              reduce using rule 42 (statement -> print .)
    ID              reduce using rule 42 (statement -> print .)
    PRINT           reduce using rule 42 (statement -> print .)


state 54

    (58) read -> READ . LPAREN variable_list RPAREN SEMICOLON

    LPAREN          shift and go to state 74


state 55

    (43) assing_to_call -> variable . ASSIGN invocation
    (78) assingation -> variable . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 75


state 56

    (45) for -> FOR . LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4

    LPAREN          shift and go to state 76


state 57

    (61) invocation -> ID . invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (22) variable -> ID .
    (23) variable -> ID . LBRACK expression RBRACK
    (24) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK
    (62) invocation_1 -> . empty
    (111) empty -> .

    ASSIGN          reduce using rule 22 (variable -> ID .)
    TIMES           reduce using rule 22 (variable -> ID .)
    DIVIDE          reduce using rule 22 (variable -> ID .)
    PLUS            reduce using rule 22 (variable -> ID .)
    MINUS           reduce using rule 22 (variable -> ID .)
    LESS            reduce using rule 22 (variable -> ID .)
    GREATER         reduce using rule 22 (variable -> ID .)
    EQUALS          reduce using rule 22 (variable -> ID .)
    NOTEQUAL        reduce using rule 22 (variable -> ID .)
    GREATERTHAN     reduce using rule 22 (variable -> ID .)
    LESSTHAN        reduce using rule 22 (variable -> ID .)
    AND             reduce using rule 22 (variable -> ID .)
    OR              reduce using rule 22 (variable -> ID .)
    SEMICOLON       reduce using rule 22 (variable -> ID .)
    LBRACK          shift and go to state 68
    LPAREN          reduce using rule 111 (empty -> .)

    invocation_1                   shift and go to state 77
    empty                          shift and go to state 78

state 58

    (44) do_while -> DO . breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (51) breadcrumb -> . empty
    (111) empty -> .

    LBRACE          reduce using rule 111 (empty -> .)

    breadcrumb                     shift and go to state 79
    empty                          shift and go to state 80

state 59

    (50) while -> WHILE . breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (51) breadcrumb -> . empty
    (111) empty -> .

    LPAREN          reduce using rule 111 (empty -> .)

    breadcrumb                     shift and go to state 81
    empty                          shift and go to state 80

state 60

    (53) if_else -> IF . LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (52) if -> IF . LPAREN expression RPAREN gotof LBRACE statements RBRACE

    LPAREN          shift and go to state 82


state 61

    (57) return -> RETURN . expression SEMICOLON
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 83
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 62

    (73) print -> PRINT . LPAREN print_arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 98


state 63

    (7) function_signature -> simple_type ID function_1 . LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    LPAREN          shift and go to state 99


state 64

    (11) function_1 -> empty .

    LPAREN          reduce using rule 11 (function_1 -> empty .)


state 65

    (8) function_signature -> VOID ID function_1 . LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    LPAREN          shift and go to state 100


state 66

    (17) var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON . close_var_declaration
    (19) close_var_declaration -> . empty
    (111) empty -> .

    VARIABLE        reduce using rule 111 (empty -> .)
    FUNCTION        reduce using rule 111 (empty -> .)
    MAIN            reduce using rule 111 (empty -> .)
    LBRACE          reduce using rule 111 (empty -> .)

    close_var_declaration          shift and go to state 101
    empty                          shift and go to state 102

state 67

    (21) variables -> variable COMMA . variables
    (20) variables -> . variable
    (21) variables -> . variable COMMA variables
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 38

    variable                       shift and go to state 37
    variables                      shift and go to state 103

state 68

    (23) variable -> ID LBRACK . expression RBRACK
    (24) variable -> ID LBRACK . expression RBRACK LBRACK expression RBRACK
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 104
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 69

    (12) main -> MAIN LPAREN RPAREN main_scope . var_declarations LBRACE statements RBRACE
    (14) var_declarations -> . var_declaration_list
    (15) var_declarations -> . empty
    (16) var_declaration_list -> . var_declaration var_declarations
    (111) empty -> .
    (17) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    LBRACE          reduce using rule 111 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 105
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 70

    (13) main_scope -> empty .

    VARIABLE        reduce using rule 13 (main_scope -> empty .)
    LBRACE          reduce using rule 13 (main_scope -> empty .)


state 71

    (9) function_body -> LBRACE statements return . RBRACE
    (41) statement -> return .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 106
    RETURN          reduce using rule 41 (statement -> return .)
    READ            reduce using rule 41 (statement -> return .)
    FOR             reduce using rule 41 (statement -> return .)
    DO              reduce using rule 41 (statement -> return .)
    WHILE           reduce using rule 41 (statement -> return .)
    IF              reduce using rule 41 (statement -> return .)
    ID              reduce using rule 41 (statement -> return .)
    PRINT           reduce using rule 41 (statement -> return .)

  ! RBRACE          [ reduce using rule 41 (statement -> return .) ]


state 72

    (10) function_body -> LBRACE statements RBRACE .

    MAIN            reduce using rule 10 (function_body -> LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 10 (function_body -> LBRACE statements RBRACE .)


state 73

    (29) statements -> statements statement .

    RBRACE          reduce using rule 29 (statements -> statements statement .)
    RETURN          reduce using rule 29 (statements -> statements statement .)
    READ            reduce using rule 29 (statements -> statements statement .)
    FOR             reduce using rule 29 (statements -> statements statement .)
    DO              reduce using rule 29 (statements -> statements statement .)
    WHILE           reduce using rule 29 (statements -> statements statement .)
    IF              reduce using rule 29 (statements -> statements statement .)
    ID              reduce using rule 29 (statements -> statements statement .)
    PRINT           reduce using rule 29 (statements -> statements statement .)


state 74

    (58) read -> READ LPAREN . variable_list RPAREN SEMICOLON
    (59) variable_list -> . variable
    (60) variable_list -> . variable_list COMMA variable
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 38

    variable_list                  shift and go to state 107
    variable                       shift and go to state 108

state 75

    (43) assing_to_call -> variable ASSIGN . invocation
    (78) assingation -> variable ASSIGN . expression SEMICOLON
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 57
    NOT             shift and go to state 85
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    variable                       shift and go to state 90
    invocation                     shift and go to state 109
    expression                     shift and go to state 110
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 76

    (45) for -> FOR LPAREN . ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4

    ID              shift and go to state 111


state 77

    (61) invocation -> ID invocation_1 . LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6

    LPAREN          shift and go to state 112


state 78

    (62) invocation_1 -> empty .

    LPAREN          reduce using rule 62 (invocation_1 -> empty .)


state 79

    (44) do_while -> DO breadcrumb . LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON

    LBRACE          shift and go to state 113


state 80

    (51) breadcrumb -> empty .

    LBRACE          reduce using rule 51 (breadcrumb -> empty .)
    LPAREN          reduce using rule 51 (breadcrumb -> empty .)


state 81

    (50) while -> WHILE breadcrumb . LPAREN expression RPAREN gotof LBRACE statements RBRACE

    LPAREN          shift and go to state 114


state 82

    (53) if_else -> IF LPAREN . expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (52) if -> IF LPAREN . expression RPAREN gotof LBRACE statements RBRACE
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 115
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 83

    (57) return -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 116


state 84

    (71) expression -> t_expression .
    (80) t_expression -> t_expression . boolean_operator g_expression
    (99) boolean_operator -> . AND
    (100) boolean_operator -> . OR

    SEMICOLON       reduce using rule 71 (expression -> t_expression .)
    RBRACK          reduce using rule 71 (expression -> t_expression .)
    RPAREN          reduce using rule 71 (expression -> t_expression .)
    COMMA           reduce using rule 71 (expression -> t_expression .)
    FROM            reduce using rule 71 (expression -> t_expression .)
    AND             shift and go to state 118
    OR              shift and go to state 119

    boolean_operator               shift and go to state 117

state 85

    (72) expression -> NOT . t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    t_expression                   shift and go to state 120
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 86

    (79) t_expression -> g_expression .
    (82) g_expression -> g_expression . comparison_operator m_expression
    (91) comparison_operator -> . LESS
    (92) comparison_operator -> . GREATER
    (93) comparison_operator -> . EQUALS
    (94) comparison_operator -> . NOTEQUAL
    (95) comparison_operator -> . GREATERTHAN
    (96) comparison_operator -> . LESSTHAN

    AND             reduce using rule 79 (t_expression -> g_expression .)
    OR              reduce using rule 79 (t_expression -> g_expression .)
    SEMICOLON       reduce using rule 79 (t_expression -> g_expression .)
    RBRACK          reduce using rule 79 (t_expression -> g_expression .)
    RPAREN          reduce using rule 79 (t_expression -> g_expression .)
    COMMA           reduce using rule 79 (t_expression -> g_expression .)
    FROM            reduce using rule 79 (t_expression -> g_expression .)
    LESS            shift and go to state 122
    GREATER         shift and go to state 123
    EQUALS          shift and go to state 124
    NOTEQUAL        shift and go to state 125
    GREATERTHAN     shift and go to state 126
    LESSTHAN        shift and go to state 127

    comparison_operator            shift and go to state 121

state 87

    (81) g_expression -> m_expression .
    (84) m_expression -> m_expression . addition_operator term
    (97) addition_operator -> . PLUS
    (98) addition_operator -> . MINUS

    LESS            reduce using rule 81 (g_expression -> m_expression .)
    GREATER         reduce using rule 81 (g_expression -> m_expression .)
    EQUALS          reduce using rule 81 (g_expression -> m_expression .)
    NOTEQUAL        reduce using rule 81 (g_expression -> m_expression .)
    GREATERTHAN     reduce using rule 81 (g_expression -> m_expression .)
    LESSTHAN        reduce using rule 81 (g_expression -> m_expression .)
    AND             reduce using rule 81 (g_expression -> m_expression .)
    OR              reduce using rule 81 (g_expression -> m_expression .)
    SEMICOLON       reduce using rule 81 (g_expression -> m_expression .)
    RBRACK          reduce using rule 81 (g_expression -> m_expression .)
    RPAREN          reduce using rule 81 (g_expression -> m_expression .)
    COMMA           reduce using rule 81 (g_expression -> m_expression .)
    FROM            reduce using rule 81 (g_expression -> m_expression .)
    PLUS            shift and go to state 129
    MINUS           shift and go to state 130

    addition_operator              shift and go to state 128

state 88

    (83) m_expression -> term .
    (86) term -> term . multiplication_operator factor
    (101) multiplication_operator -> . TIMES
    (102) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 83 (m_expression -> term .)
    MINUS           reduce using rule 83 (m_expression -> term .)
    LESS            reduce using rule 83 (m_expression -> term .)
    GREATER         reduce using rule 83 (m_expression -> term .)
    EQUALS          reduce using rule 83 (m_expression -> term .)
    NOTEQUAL        reduce using rule 83 (m_expression -> term .)
    GREATERTHAN     reduce using rule 83 (m_expression -> term .)
    LESSTHAN        reduce using rule 83 (m_expression -> term .)
    AND             reduce using rule 83 (m_expression -> term .)
    OR              reduce using rule 83 (m_expression -> term .)
    SEMICOLON       reduce using rule 83 (m_expression -> term .)
    RBRACK          reduce using rule 83 (m_expression -> term .)
    RPAREN          reduce using rule 83 (m_expression -> term .)
    COMMA           reduce using rule 83 (m_expression -> term .)
    FROM            reduce using rule 83 (m_expression -> term .)
    TIMES           shift and go to state 132
    DIVIDE          shift and go to state 133

    multiplication_operator        shift and go to state 131

state 89

    (85) term -> factor .

    TIMES           reduce using rule 85 (term -> factor .)
    DIVIDE          reduce using rule 85 (term -> factor .)
    PLUS            reduce using rule 85 (term -> factor .)
    MINUS           reduce using rule 85 (term -> factor .)
    LESS            reduce using rule 85 (term -> factor .)
    GREATER         reduce using rule 85 (term -> factor .)
    EQUALS          reduce using rule 85 (term -> factor .)
    NOTEQUAL        reduce using rule 85 (term -> factor .)
    GREATERTHAN     reduce using rule 85 (term -> factor .)
    LESSTHAN        reduce using rule 85 (term -> factor .)
    AND             reduce using rule 85 (term -> factor .)
    OR              reduce using rule 85 (term -> factor .)
    SEMICOLON       reduce using rule 85 (term -> factor .)
    RBRACK          reduce using rule 85 (term -> factor .)
    RPAREN          reduce using rule 85 (term -> factor .)
    COMMA           reduce using rule 85 (term -> factor .)
    FROM            reduce using rule 85 (term -> factor .)


state 90

    (87) factor -> variable .

    TIMES           reduce using rule 87 (factor -> variable .)
    DIVIDE          reduce using rule 87 (factor -> variable .)
    PLUS            reduce using rule 87 (factor -> variable .)
    MINUS           reduce using rule 87 (factor -> variable .)
    LESS            reduce using rule 87 (factor -> variable .)
    GREATER         reduce using rule 87 (factor -> variable .)
    EQUALS          reduce using rule 87 (factor -> variable .)
    NOTEQUAL        reduce using rule 87 (factor -> variable .)
    GREATERTHAN     reduce using rule 87 (factor -> variable .)
    LESSTHAN        reduce using rule 87 (factor -> variable .)
    AND             reduce using rule 87 (factor -> variable .)
    OR              reduce using rule 87 (factor -> variable .)
    SEMICOLON       reduce using rule 87 (factor -> variable .)
    RBRACK          reduce using rule 87 (factor -> variable .)
    RPAREN          reduce using rule 87 (factor -> variable .)
    COMMA           reduce using rule 87 (factor -> variable .)
    FROM            reduce using rule 87 (factor -> variable .)


state 91

    (88) factor -> cte .

    TIMES           reduce using rule 88 (factor -> cte .)
    DIVIDE          reduce using rule 88 (factor -> cte .)
    PLUS            reduce using rule 88 (factor -> cte .)
    MINUS           reduce using rule 88 (factor -> cte .)
    LESS            reduce using rule 88 (factor -> cte .)
    GREATER         reduce using rule 88 (factor -> cte .)
    EQUALS          reduce using rule 88 (factor -> cte .)
    NOTEQUAL        reduce using rule 88 (factor -> cte .)
    GREATERTHAN     reduce using rule 88 (factor -> cte .)
    LESSTHAN        reduce using rule 88 (factor -> cte .)
    AND             reduce using rule 88 (factor -> cte .)
    OR              reduce using rule 88 (factor -> cte .)
    SEMICOLON       reduce using rule 88 (factor -> cte .)
    RBRACK          reduce using rule 88 (factor -> cte .)
    RPAREN          reduce using rule 88 (factor -> cte .)
    COMMA           reduce using rule 88 (factor -> cte .)
    FROM            reduce using rule 88 (factor -> cte .)


state 92

    (89) factor -> expression_parenthesis .

    TIMES           reduce using rule 89 (factor -> expression_parenthesis .)
    DIVIDE          reduce using rule 89 (factor -> expression_parenthesis .)
    PLUS            reduce using rule 89 (factor -> expression_parenthesis .)
    MINUS           reduce using rule 89 (factor -> expression_parenthesis .)
    LESS            reduce using rule 89 (factor -> expression_parenthesis .)
    GREATER         reduce using rule 89 (factor -> expression_parenthesis .)
    EQUALS          reduce using rule 89 (factor -> expression_parenthesis .)
    NOTEQUAL        reduce using rule 89 (factor -> expression_parenthesis .)
    GREATERTHAN     reduce using rule 89 (factor -> expression_parenthesis .)
    LESSTHAN        reduce using rule 89 (factor -> expression_parenthesis .)
    AND             reduce using rule 89 (factor -> expression_parenthesis .)
    OR              reduce using rule 89 (factor -> expression_parenthesis .)
    SEMICOLON       reduce using rule 89 (factor -> expression_parenthesis .)
    RBRACK          reduce using rule 89 (factor -> expression_parenthesis .)
    RPAREN          reduce using rule 89 (factor -> expression_parenthesis .)
    COMMA           reduce using rule 89 (factor -> expression_parenthesis .)
    FROM            reduce using rule 89 (factor -> expression_parenthesis .)


state 93

    (107) cte -> CTEI .

    TIMES           reduce using rule 107 (cte -> CTEI .)
    DIVIDE          reduce using rule 107 (cte -> CTEI .)
    PLUS            reduce using rule 107 (cte -> CTEI .)
    MINUS           reduce using rule 107 (cte -> CTEI .)
    LESS            reduce using rule 107 (cte -> CTEI .)
    GREATER         reduce using rule 107 (cte -> CTEI .)
    EQUALS          reduce using rule 107 (cte -> CTEI .)
    NOTEQUAL        reduce using rule 107 (cte -> CTEI .)
    GREATERTHAN     reduce using rule 107 (cte -> CTEI .)
    LESSTHAN        reduce using rule 107 (cte -> CTEI .)
    AND             reduce using rule 107 (cte -> CTEI .)
    OR              reduce using rule 107 (cte -> CTEI .)
    SEMICOLON       reduce using rule 107 (cte -> CTEI .)
    RBRACK          reduce using rule 107 (cte -> CTEI .)
    RPAREN          reduce using rule 107 (cte -> CTEI .)
    COMMA           reduce using rule 107 (cte -> CTEI .)
    FROM            reduce using rule 107 (cte -> CTEI .)


state 94

    (108) cte -> CTEF .

    TIMES           reduce using rule 108 (cte -> CTEF .)
    DIVIDE          reduce using rule 108 (cte -> CTEF .)
    PLUS            reduce using rule 108 (cte -> CTEF .)
    MINUS           reduce using rule 108 (cte -> CTEF .)
    LESS            reduce using rule 108 (cte -> CTEF .)
    GREATER         reduce using rule 108 (cte -> CTEF .)
    EQUALS          reduce using rule 108 (cte -> CTEF .)
    NOTEQUAL        reduce using rule 108 (cte -> CTEF .)
    GREATERTHAN     reduce using rule 108 (cte -> CTEF .)
    LESSTHAN        reduce using rule 108 (cte -> CTEF .)
    AND             reduce using rule 108 (cte -> CTEF .)
    OR              reduce using rule 108 (cte -> CTEF .)
    SEMICOLON       reduce using rule 108 (cte -> CTEF .)
    RBRACK          reduce using rule 108 (cte -> CTEF .)
    RPAREN          reduce using rule 108 (cte -> CTEF .)
    COMMA           reduce using rule 108 (cte -> CTEF .)
    FROM            reduce using rule 108 (cte -> CTEF .)


state 95

    (109) cte -> CTEC .

    TIMES           reduce using rule 109 (cte -> CTEC .)
    DIVIDE          reduce using rule 109 (cte -> CTEC .)
    PLUS            reduce using rule 109 (cte -> CTEC .)
    MINUS           reduce using rule 109 (cte -> CTEC .)
    LESS            reduce using rule 109 (cte -> CTEC .)
    GREATER         reduce using rule 109 (cte -> CTEC .)
    EQUALS          reduce using rule 109 (cte -> CTEC .)
    NOTEQUAL        reduce using rule 109 (cte -> CTEC .)
    GREATERTHAN     reduce using rule 109 (cte -> CTEC .)
    LESSTHAN        reduce using rule 109 (cte -> CTEC .)
    AND             reduce using rule 109 (cte -> CTEC .)
    OR              reduce using rule 109 (cte -> CTEC .)
    SEMICOLON       reduce using rule 109 (cte -> CTEC .)
    RBRACK          reduce using rule 109 (cte -> CTEC .)
    RPAREN          reduce using rule 109 (cte -> CTEC .)
    COMMA           reduce using rule 109 (cte -> CTEC .)
    FROM            reduce using rule 109 (cte -> CTEC .)


state 96

    (110) cte -> CTEB .

    TIMES           reduce using rule 110 (cte -> CTEB .)
    DIVIDE          reduce using rule 110 (cte -> CTEB .)
    PLUS            reduce using rule 110 (cte -> CTEB .)
    MINUS           reduce using rule 110 (cte -> CTEB .)
    LESS            reduce using rule 110 (cte -> CTEB .)
    GREATER         reduce using rule 110 (cte -> CTEB .)
    EQUALS          reduce using rule 110 (cte -> CTEB .)
    NOTEQUAL        reduce using rule 110 (cte -> CTEB .)
    GREATERTHAN     reduce using rule 110 (cte -> CTEB .)
    LESSTHAN        reduce using rule 110 (cte -> CTEB .)
    AND             reduce using rule 110 (cte -> CTEB .)
    OR              reduce using rule 110 (cte -> CTEB .)
    SEMICOLON       reduce using rule 110 (cte -> CTEB .)
    RBRACK          reduce using rule 110 (cte -> CTEB .)
    RPAREN          reduce using rule 110 (cte -> CTEB .)
    COMMA           reduce using rule 110 (cte -> CTEB .)
    FROM            reduce using rule 110 (cte -> CTEB .)


state 97

    (90) expression_parenthesis -> LPAREN . expression RPAREN
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 134
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 98

    (73) print -> PRINT LPAREN . print_arguments RPAREN SEMICOLON
    (74) print_arguments -> . print_argument
    (75) print_arguments -> . print_arguments COMMA print_argument
    (76) print_argument -> . CTES
    (77) print_argument -> . expression
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    CTES            shift and go to state 137
    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    print_arguments                shift and go to state 135
    print_argument                 shift and go to state 136
    expression                     shift and go to state 138
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 99

    (7) function_signature -> simple_type ID function_1 LPAREN . open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (18) open_var_declaration -> . empty
    (111) empty -> .

    INT             reduce using rule 111 (empty -> .)
    FLOAT           reduce using rule 111 (empty -> .)
    CHAR            reduce using rule 111 (empty -> .)
    BOOLEAN         reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)

    open_var_declaration           shift and go to state 139
    empty                          shift and go to state 18

state 100

    (8) function_signature -> VOID ID function_1 LPAREN . open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (18) open_var_declaration -> . empty
    (111) empty -> .

    INT             reduce using rule 111 (empty -> .)
    FLOAT           reduce using rule 111 (empty -> .)
    CHAR            reduce using rule 111 (empty -> .)
    BOOLEAN         reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)

    open_var_declaration           shift and go to state 140
    empty                          shift and go to state 18

state 101

    (17) var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .

    VARIABLE        reduce using rule 17 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    FUNCTION        reduce using rule 17 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    MAIN            reduce using rule 17 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    LBRACE          reduce using rule 17 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)


state 102

    (19) close_var_declaration -> empty .

    VARIABLE        reduce using rule 19 (close_var_declaration -> empty .)
    FUNCTION        reduce using rule 19 (close_var_declaration -> empty .)
    MAIN            reduce using rule 19 (close_var_declaration -> empty .)
    LBRACE          reduce using rule 19 (close_var_declaration -> empty .)
    RPAREN          reduce using rule 19 (close_var_declaration -> empty .)


state 103

    (21) variables -> variable COMMA variables .

    SEMICOLON       reduce using rule 21 (variables -> variable COMMA variables .)


state 104

    (23) variable -> ID LBRACK expression . RBRACK
    (24) variable -> ID LBRACK expression . RBRACK LBRACK expression RBRACK

    RBRACK          shift and go to state 141


state 105

    (12) main -> MAIN LPAREN RPAREN main_scope var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 142


state 106

    (9) function_body -> LBRACE statements return RBRACE .

    MAIN            reduce using rule 9 (function_body -> LBRACE statements return RBRACE .)
    FUNCTION        reduce using rule 9 (function_body -> LBRACE statements return RBRACE .)


state 107

    (58) read -> READ LPAREN variable_list . RPAREN SEMICOLON
    (60) variable_list -> variable_list . COMMA variable

    RPAREN          shift and go to state 143
    COMMA           shift and go to state 144


state 108

    (59) variable_list -> variable .

    RPAREN          reduce using rule 59 (variable_list -> variable .)
    COMMA           reduce using rule 59 (variable_list -> variable .)


state 109

    (43) assing_to_call -> variable ASSIGN invocation .

    RBRACE          reduce using rule 43 (assing_to_call -> variable ASSIGN invocation .)
    RETURN          reduce using rule 43 (assing_to_call -> variable ASSIGN invocation .)
    READ            reduce using rule 43 (assing_to_call -> variable ASSIGN invocation .)
    FOR             reduce using rule 43 (assing_to_call -> variable ASSIGN invocation .)
    DO              reduce using rule 43 (assing_to_call -> variable ASSIGN invocation .)
    WHILE           reduce using rule 43 (assing_to_call -> variable ASSIGN invocation .)
    IF              reduce using rule 43 (assing_to_call -> variable ASSIGN invocation .)
    ID              reduce using rule 43 (assing_to_call -> variable ASSIGN invocation .)
    PRINT           reduce using rule 43 (assing_to_call -> variable ASSIGN invocation .)


state 110

    (78) assingation -> variable ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 145


state 111

    (45) for -> FOR LPAREN ID . for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (46) for_1 -> . empty
    (111) empty -> .

    ASSIGN          reduce using rule 111 (empty -> .)

    for_1                          shift and go to state 146
    empty                          shift and go to state 147

state 112

    (61) invocation -> ID invocation_1 LPAREN . invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (63) invocation_2 -> . empty
    (111) empty -> .

    NOT             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEB            reduce using rule 111 (empty -> .)
    LPAREN          reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)

    invocation_2                   shift and go to state 148
    empty                          shift and go to state 149

state 113

    (44) do_while -> DO breadcrumb LBRACE . statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (29) statements -> . statements statement
    (30) statements -> . statement
    (31) statements -> . empty
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (111) empty -> .
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 111 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! DO              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! PRINT           [ reduce using rule 111 (empty -> .) ]

    statements                     shift and go to state 150
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 114

    (50) while -> WHILE breadcrumb LPAREN . expression RPAREN gotof LBRACE statements RBRACE
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 151
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 115

    (53) if_else -> IF LPAREN expression . RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (52) if -> IF LPAREN expression . RPAREN gotof LBRACE statements RBRACE

    RPAREN          shift and go to state 152


state 116

    (57) return -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 57 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 57 (return -> RETURN expression SEMICOLON .)
    READ            reduce using rule 57 (return -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 57 (return -> RETURN expression SEMICOLON .)
    DO              reduce using rule 57 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 57 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 57 (return -> RETURN expression SEMICOLON .)
    ID              reduce using rule 57 (return -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 57 (return -> RETURN expression SEMICOLON .)


state 117

    (80) t_expression -> t_expression boolean_operator . g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    g_expression                   shift and go to state 153
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 118

    (99) boolean_operator -> AND .

    ID              reduce using rule 99 (boolean_operator -> AND .)
    CTEI            reduce using rule 99 (boolean_operator -> AND .)
    CTEF            reduce using rule 99 (boolean_operator -> AND .)
    CTEC            reduce using rule 99 (boolean_operator -> AND .)
    CTEB            reduce using rule 99 (boolean_operator -> AND .)
    LPAREN          reduce using rule 99 (boolean_operator -> AND .)


state 119

    (100) boolean_operator -> OR .

    ID              reduce using rule 100 (boolean_operator -> OR .)
    CTEI            reduce using rule 100 (boolean_operator -> OR .)
    CTEF            reduce using rule 100 (boolean_operator -> OR .)
    CTEC            reduce using rule 100 (boolean_operator -> OR .)
    CTEB            reduce using rule 100 (boolean_operator -> OR .)
    LPAREN          reduce using rule 100 (boolean_operator -> OR .)


state 120

    (72) expression -> NOT t_expression .
    (80) t_expression -> t_expression . boolean_operator g_expression
    (99) boolean_operator -> . AND
    (100) boolean_operator -> . OR

    SEMICOLON       reduce using rule 72 (expression -> NOT t_expression .)
    RBRACK          reduce using rule 72 (expression -> NOT t_expression .)
    RPAREN          reduce using rule 72 (expression -> NOT t_expression .)
    COMMA           reduce using rule 72 (expression -> NOT t_expression .)
    FROM            reduce using rule 72 (expression -> NOT t_expression .)
    AND             shift and go to state 118
    OR              shift and go to state 119

    boolean_operator               shift and go to state 117

state 121

    (82) g_expression -> g_expression comparison_operator . m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    m_expression                   shift and go to state 154
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 122

    (91) comparison_operator -> LESS .

    ID              reduce using rule 91 (comparison_operator -> LESS .)
    CTEI            reduce using rule 91 (comparison_operator -> LESS .)
    CTEF            reduce using rule 91 (comparison_operator -> LESS .)
    CTEC            reduce using rule 91 (comparison_operator -> LESS .)
    CTEB            reduce using rule 91 (comparison_operator -> LESS .)
    LPAREN          reduce using rule 91 (comparison_operator -> LESS .)


state 123

    (92) comparison_operator -> GREATER .

    ID              reduce using rule 92 (comparison_operator -> GREATER .)
    CTEI            reduce using rule 92 (comparison_operator -> GREATER .)
    CTEF            reduce using rule 92 (comparison_operator -> GREATER .)
    CTEC            reduce using rule 92 (comparison_operator -> GREATER .)
    CTEB            reduce using rule 92 (comparison_operator -> GREATER .)
    LPAREN          reduce using rule 92 (comparison_operator -> GREATER .)


state 124

    (93) comparison_operator -> EQUALS .

    ID              reduce using rule 93 (comparison_operator -> EQUALS .)
    CTEI            reduce using rule 93 (comparison_operator -> EQUALS .)
    CTEF            reduce using rule 93 (comparison_operator -> EQUALS .)
    CTEC            reduce using rule 93 (comparison_operator -> EQUALS .)
    CTEB            reduce using rule 93 (comparison_operator -> EQUALS .)
    LPAREN          reduce using rule 93 (comparison_operator -> EQUALS .)


state 125

    (94) comparison_operator -> NOTEQUAL .

    ID              reduce using rule 94 (comparison_operator -> NOTEQUAL .)
    CTEI            reduce using rule 94 (comparison_operator -> NOTEQUAL .)
    CTEF            reduce using rule 94 (comparison_operator -> NOTEQUAL .)
    CTEC            reduce using rule 94 (comparison_operator -> NOTEQUAL .)
    CTEB            reduce using rule 94 (comparison_operator -> NOTEQUAL .)
    LPAREN          reduce using rule 94 (comparison_operator -> NOTEQUAL .)


state 126

    (95) comparison_operator -> GREATERTHAN .

    ID              reduce using rule 95 (comparison_operator -> GREATERTHAN .)
    CTEI            reduce using rule 95 (comparison_operator -> GREATERTHAN .)
    CTEF            reduce using rule 95 (comparison_operator -> GREATERTHAN .)
    CTEC            reduce using rule 95 (comparison_operator -> GREATERTHAN .)
    CTEB            reduce using rule 95 (comparison_operator -> GREATERTHAN .)
    LPAREN          reduce using rule 95 (comparison_operator -> GREATERTHAN .)


state 127

    (96) comparison_operator -> LESSTHAN .

    ID              reduce using rule 96 (comparison_operator -> LESSTHAN .)
    CTEI            reduce using rule 96 (comparison_operator -> LESSTHAN .)
    CTEF            reduce using rule 96 (comparison_operator -> LESSTHAN .)
    CTEC            reduce using rule 96 (comparison_operator -> LESSTHAN .)
    CTEB            reduce using rule 96 (comparison_operator -> LESSTHAN .)
    LPAREN          reduce using rule 96 (comparison_operator -> LESSTHAN .)


state 128

    (84) m_expression -> m_expression addition_operator . term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    term                           shift and go to state 155
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 129

    (97) addition_operator -> PLUS .

    ID              reduce using rule 97 (addition_operator -> PLUS .)
    CTEI            reduce using rule 97 (addition_operator -> PLUS .)
    CTEF            reduce using rule 97 (addition_operator -> PLUS .)
    CTEC            reduce using rule 97 (addition_operator -> PLUS .)
    CTEB            reduce using rule 97 (addition_operator -> PLUS .)
    LPAREN          reduce using rule 97 (addition_operator -> PLUS .)


state 130

    (98) addition_operator -> MINUS .

    ID              reduce using rule 98 (addition_operator -> MINUS .)
    CTEI            reduce using rule 98 (addition_operator -> MINUS .)
    CTEF            reduce using rule 98 (addition_operator -> MINUS .)
    CTEC            reduce using rule 98 (addition_operator -> MINUS .)
    CTEB            reduce using rule 98 (addition_operator -> MINUS .)
    LPAREN          reduce using rule 98 (addition_operator -> MINUS .)


state 131

    (86) term -> term multiplication_operator . factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    factor                         shift and go to state 156
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 132

    (101) multiplication_operator -> TIMES .

    ID              reduce using rule 101 (multiplication_operator -> TIMES .)
    CTEI            reduce using rule 101 (multiplication_operator -> TIMES .)
    CTEF            reduce using rule 101 (multiplication_operator -> TIMES .)
    CTEC            reduce using rule 101 (multiplication_operator -> TIMES .)
    CTEB            reduce using rule 101 (multiplication_operator -> TIMES .)
    LPAREN          reduce using rule 101 (multiplication_operator -> TIMES .)


state 133

    (102) multiplication_operator -> DIVIDE .

    ID              reduce using rule 102 (multiplication_operator -> DIVIDE .)
    CTEI            reduce using rule 102 (multiplication_operator -> DIVIDE .)
    CTEF            reduce using rule 102 (multiplication_operator -> DIVIDE .)
    CTEC            reduce using rule 102 (multiplication_operator -> DIVIDE .)
    CTEB            reduce using rule 102 (multiplication_operator -> DIVIDE .)
    LPAREN          reduce using rule 102 (multiplication_operator -> DIVIDE .)


state 134

    (90) expression_parenthesis -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 157


state 135

    (73) print -> PRINT LPAREN print_arguments . RPAREN SEMICOLON
    (75) print_arguments -> print_arguments . COMMA print_argument

    RPAREN          shift and go to state 158
    COMMA           shift and go to state 159


state 136

    (74) print_arguments -> print_argument .

    RPAREN          reduce using rule 74 (print_arguments -> print_argument .)
    COMMA           reduce using rule 74 (print_arguments -> print_argument .)


state 137

    (76) print_argument -> CTES .

    RPAREN          reduce using rule 76 (print_argument -> CTES .)
    COMMA           reduce using rule 76 (print_argument -> CTES .)


state 138

    (77) print_argument -> expression .

    RPAREN          reduce using rule 77 (print_argument -> expression .)
    COMMA           reduce using rule 77 (print_argument -> expression .)


state 139

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration . parameters close_var_declaration RPAREN var_declarations
    (25) parameters -> . parameters COMMA parameter
    (26) parameters -> . parameter
    (27) parameters -> . empty
    (28) parameter -> . simple_type ID
    (111) empty -> .
    (103) simple_type -> . INT
    (104) simple_type -> . FLOAT
    (105) simple_type -> . CHAR
    (106) simple_type -> . BOOLEAN

    COMMA           reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    simple_type                    shift and go to state 160
    parameters                     shift and go to state 161
    parameter                      shift and go to state 162
    empty                          shift and go to state 163

state 140

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration . parameters close_var_declaration RPAREN var_declarations
    (25) parameters -> . parameters COMMA parameter
    (26) parameters -> . parameter
    (27) parameters -> . empty
    (28) parameter -> . simple_type ID
    (111) empty -> .
    (103) simple_type -> . INT
    (104) simple_type -> . FLOAT
    (105) simple_type -> . CHAR
    (106) simple_type -> . BOOLEAN

    COMMA           reduce using rule 111 (empty -> .)
    RPAREN          reduce using rule 111 (empty -> .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    parameters                     shift and go to state 164
    parameter                      shift and go to state 162
    empty                          shift and go to state 163
    simple_type                    shift and go to state 160

state 141

    (23) variable -> ID LBRACK expression RBRACK .
    (24) variable -> ID LBRACK expression RBRACK . LBRACK expression RBRACK

    COMMA           reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    TIMES           reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    PLUS            reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    MINUS           reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    LESS            reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    GREATER         reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    EQUALS          reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    AND             reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    OR              reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    RBRACK          reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    RPAREN          reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    FROM            reduce using rule 23 (variable -> ID LBRACK expression RBRACK .)
    LBRACK          shift and go to state 165


state 142

    (12) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE . statements RBRACE
    (29) statements -> . statements statement
    (30) statements -> . statement
    (31) statements -> . empty
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (111) empty -> .
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 111 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! DO              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! PRINT           [ reduce using rule 111 (empty -> .) ]

    statements                     shift and go to state 166
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 143

    (58) read -> READ LPAREN variable_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 167


state 144

    (60) variable_list -> variable_list COMMA . variable
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 38

    variable                       shift and go to state 168

state 145

    (78) assingation -> variable ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    READ            reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    DO              reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    IF              reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    ID              reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 78 (assingation -> variable ASSIGN expression SEMICOLON .)


state 146

    (45) for -> FOR LPAREN ID for_1 . ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4

    ASSIGN          shift and go to state 169


state 147

    (46) for_1 -> empty .

    ASSIGN          reduce using rule 46 (for_1 -> empty .)


state 148

    (61) invocation -> ID invocation_1 LPAREN invocation_2 . expressions RPAREN invocation_5 SEMICOLON invocation_6
    (68) expressions -> . expressions COMMA invocation_4 expression invocation_3
    (69) expressions -> . expression invocation_3
    (70) expressions -> . empty
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (111) empty -> .
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expressions                    shift and go to state 170
    expression                     shift and go to state 171
    empty                          shift and go to state 172
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 149

    (63) invocation_2 -> empty .

    NOT             reduce using rule 63 (invocation_2 -> empty .)
    ID              reduce using rule 63 (invocation_2 -> empty .)
    CTEI            reduce using rule 63 (invocation_2 -> empty .)
    CTEF            reduce using rule 63 (invocation_2 -> empty .)
    CTEC            reduce using rule 63 (invocation_2 -> empty .)
    CTEB            reduce using rule 63 (invocation_2 -> empty .)
    LPAREN          reduce using rule 63 (invocation_2 -> empty .)
    RPAREN          reduce using rule 63 (invocation_2 -> empty .)
    COMMA           reduce using rule 63 (invocation_2 -> empty .)


state 150

    (44) do_while -> DO breadcrumb LBRACE statements . RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (29) statements -> statements . statement
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 173
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 151

    (50) while -> WHILE breadcrumb LPAREN expression . RPAREN gotof LBRACE statements RBRACE

    RPAREN          shift and go to state 174


state 152

    (53) if_else -> IF LPAREN expression RPAREN . gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (52) if -> IF LPAREN expression RPAREN . gotof LBRACE statements RBRACE
    (56) gotof -> . empty
    (111) empty -> .

    LBRACE          reduce using rule 111 (empty -> .)

    gotof                          shift and go to state 175
    empty                          shift and go to state 176

state 153

    (80) t_expression -> t_expression boolean_operator g_expression .
    (82) g_expression -> g_expression . comparison_operator m_expression
    (91) comparison_operator -> . LESS
    (92) comparison_operator -> . GREATER
    (93) comparison_operator -> . EQUALS
    (94) comparison_operator -> . NOTEQUAL
    (95) comparison_operator -> . GREATERTHAN
    (96) comparison_operator -> . LESSTHAN

    AND             reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    OR              reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    SEMICOLON       reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    RBRACK          reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    RPAREN          reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    COMMA           reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    FROM            reduce using rule 80 (t_expression -> t_expression boolean_operator g_expression .)
    LESS            shift and go to state 122
    GREATER         shift and go to state 123
    EQUALS          shift and go to state 124
    NOTEQUAL        shift and go to state 125
    GREATERTHAN     shift and go to state 126
    LESSTHAN        shift and go to state 127

    comparison_operator            shift and go to state 121

state 154

    (82) g_expression -> g_expression comparison_operator m_expression .
    (84) m_expression -> m_expression . addition_operator term
    (97) addition_operator -> . PLUS
    (98) addition_operator -> . MINUS

    LESS            reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    GREATER         reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    EQUALS          reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    NOTEQUAL        reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    GREATERTHAN     reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    LESSTHAN        reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    AND             reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    OR              reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    SEMICOLON       reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    RBRACK          reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    RPAREN          reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    COMMA           reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    FROM            reduce using rule 82 (g_expression -> g_expression comparison_operator m_expression .)
    PLUS            shift and go to state 129
    MINUS           shift and go to state 130

    addition_operator              shift and go to state 128

state 155

    (84) m_expression -> m_expression addition_operator term .
    (86) term -> term . multiplication_operator factor
    (101) multiplication_operator -> . TIMES
    (102) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    MINUS           reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    LESS            reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    GREATER         reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    EQUALS          reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    NOTEQUAL        reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    GREATERTHAN     reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    LESSTHAN        reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    AND             reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    OR              reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    SEMICOLON       reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    RBRACK          reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    RPAREN          reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    COMMA           reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    FROM            reduce using rule 84 (m_expression -> m_expression addition_operator term .)
    TIMES           shift and go to state 132
    DIVIDE          shift and go to state 133

    multiplication_operator        shift and go to state 131

state 156

    (86) term -> term multiplication_operator factor .

    TIMES           reduce using rule 86 (term -> term multiplication_operator factor .)
    DIVIDE          reduce using rule 86 (term -> term multiplication_operator factor .)
    PLUS            reduce using rule 86 (term -> term multiplication_operator factor .)
    MINUS           reduce using rule 86 (term -> term multiplication_operator factor .)
    LESS            reduce using rule 86 (term -> term multiplication_operator factor .)
    GREATER         reduce using rule 86 (term -> term multiplication_operator factor .)
    EQUALS          reduce using rule 86 (term -> term multiplication_operator factor .)
    NOTEQUAL        reduce using rule 86 (term -> term multiplication_operator factor .)
    GREATERTHAN     reduce using rule 86 (term -> term multiplication_operator factor .)
    LESSTHAN        reduce using rule 86 (term -> term multiplication_operator factor .)
    AND             reduce using rule 86 (term -> term multiplication_operator factor .)
    OR              reduce using rule 86 (term -> term multiplication_operator factor .)
    SEMICOLON       reduce using rule 86 (term -> term multiplication_operator factor .)
    RBRACK          reduce using rule 86 (term -> term multiplication_operator factor .)
    RPAREN          reduce using rule 86 (term -> term multiplication_operator factor .)
    COMMA           reduce using rule 86 (term -> term multiplication_operator factor .)
    FROM            reduce using rule 86 (term -> term multiplication_operator factor .)


state 157

    (90) expression_parenthesis -> LPAREN expression RPAREN .

    TIMES           reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESS            reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    AND             reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    OR              reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)
    FROM            reduce using rule 90 (expression_parenthesis -> LPAREN expression RPAREN .)


state 158

    (73) print -> PRINT LPAREN print_arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 177


state 159

    (75) print_arguments -> print_arguments COMMA . print_argument
    (76) print_argument -> . CTES
    (77) print_argument -> . expression
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    CTES            shift and go to state 137
    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    print_argument                 shift and go to state 178
    expression                     shift and go to state 138
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 160

    (28) parameter -> simple_type . ID

    ID              shift and go to state 179


state 161

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters . close_var_declaration RPAREN var_declarations
    (25) parameters -> parameters . COMMA parameter
    (19) close_var_declaration -> . empty
    (111) empty -> .

    COMMA           shift and go to state 181
    RPAREN          reduce using rule 111 (empty -> .)

    close_var_declaration          shift and go to state 180
    empty                          shift and go to state 102

state 162

    (26) parameters -> parameter .

    COMMA           reduce using rule 26 (parameters -> parameter .)
    RPAREN          reduce using rule 26 (parameters -> parameter .)


state 163

    (27) parameters -> empty .

    COMMA           reduce using rule 27 (parameters -> empty .)
    RPAREN          reduce using rule 27 (parameters -> empty .)


state 164

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters . close_var_declaration RPAREN var_declarations
    (25) parameters -> parameters . COMMA parameter
    (19) close_var_declaration -> . empty
    (111) empty -> .

    COMMA           shift and go to state 181
    RPAREN          reduce using rule 111 (empty -> .)

    close_var_declaration          shift and go to state 182
    empty                          shift and go to state 102

state 165

    (24) variable -> ID LBRACK expression RBRACK LBRACK . expression RBRACK
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 183
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 166

    (12) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements . RBRACE
    (29) statements -> statements . statement
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 184
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 167

    (58) read -> READ LPAREN variable_list RPAREN SEMICOLON .

    RBRACE          reduce using rule 58 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 58 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    READ            reduce using rule 58 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    FOR             reduce using rule 58 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    DO              reduce using rule 58 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 58 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    IF              reduce using rule 58 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    ID              reduce using rule 58 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 58 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)


state 168

    (60) variable_list -> variable_list COMMA variable .

    RPAREN          reduce using rule 60 (variable_list -> variable_list COMMA variable .)
    COMMA           reduce using rule 60 (variable_list -> variable_list COMMA variable .)


state 169

    (45) for -> FOR LPAREN ID for_1 ASSIGN . expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 185
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 170

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions . RPAREN invocation_5 SEMICOLON invocation_6
    (68) expressions -> expressions . COMMA invocation_4 expression invocation_3

    RPAREN          shift and go to state 186
    COMMA           shift and go to state 187


state 171

    (69) expressions -> expression . invocation_3
    (64) invocation_3 -> . empty
    (111) empty -> .

    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)

    invocation_3                   shift and go to state 188
    empty                          shift and go to state 189

state 172

    (70) expressions -> empty .

    RPAREN          reduce using rule 70 (expressions -> empty .)
    COMMA           reduce using rule 70 (expressions -> empty .)


state 173

    (44) do_while -> DO breadcrumb LBRACE statements RBRACE . WHILE LPAREN expression RPAREN gotot SEMICOLON

    WHILE           shift and go to state 190


state 174

    (50) while -> WHILE breadcrumb LPAREN expression RPAREN . gotof LBRACE statements RBRACE
    (56) gotof -> . empty
    (111) empty -> .

    LBRACE          reduce using rule 111 (empty -> .)

    gotof                          shift and go to state 191
    empty                          shift and go to state 176

state 175

    (53) if_else -> IF LPAREN expression RPAREN gotof . LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (52) if -> IF LPAREN expression RPAREN gotof . LBRACE statements RBRACE

    LBRACE          shift and go to state 192


state 176

    (56) gotof -> empty .

    LBRACE          reduce using rule 56 (gotof -> empty .)


state 177

    (73) print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .

    RBRACE          reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    READ            reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    FOR             reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    DO              reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    IF              reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    ID              reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    PRINT           reduce using rule 73 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)


state 178

    (75) print_arguments -> print_arguments COMMA print_argument .

    RPAREN          reduce using rule 75 (print_arguments -> print_arguments COMMA print_argument .)
    COMMA           reduce using rule 75 (print_arguments -> print_arguments COMMA print_argument .)


state 179

    (28) parameter -> simple_type ID .

    COMMA           reduce using rule 28 (parameter -> simple_type ID .)
    RPAREN          reduce using rule 28 (parameter -> simple_type ID .)


state 180

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration . RPAREN var_declarations

    RPAREN          shift and go to state 193


state 181

    (25) parameters -> parameters COMMA . parameter
    (28) parameter -> . simple_type ID
    (103) simple_type -> . INT
    (104) simple_type -> . FLOAT
    (105) simple_type -> . CHAR
    (106) simple_type -> . BOOLEAN

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    parameter                      shift and go to state 194
    simple_type                    shift and go to state 160

state 182

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration . RPAREN var_declarations

    RPAREN          shift and go to state 195


state 183

    (24) variable -> ID LBRACK expression RBRACK LBRACK expression . RBRACK

    RBRACK          shift and go to state 196


state 184

    (12) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .

    END             reduce using rule 12 (main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .)


state 185

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression . for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) for_2 -> . empty
    (111) empty -> .

    FROM            reduce using rule 111 (empty -> .)

    for_2                          shift and go to state 197
    empty                          shift and go to state 198

state 186

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN . invocation_5 SEMICOLON invocation_6
    (66) invocation_5 -> . empty
    (111) empty -> .

    SEMICOLON       reduce using rule 111 (empty -> .)

    invocation_5                   shift and go to state 199
    empty                          shift and go to state 200

state 187

    (68) expressions -> expressions COMMA . invocation_4 expression invocation_3
    (65) invocation_4 -> . empty
    (111) empty -> .

    NOT             reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    CTEI            reduce using rule 111 (empty -> .)
    CTEF            reduce using rule 111 (empty -> .)
    CTEC            reduce using rule 111 (empty -> .)
    CTEB            reduce using rule 111 (empty -> .)
    LPAREN          reduce using rule 111 (empty -> .)

    invocation_4                   shift and go to state 201
    empty                          shift and go to state 202

state 188

    (69) expressions -> expression invocation_3 .

    RPAREN          reduce using rule 69 (expressions -> expression invocation_3 .)
    COMMA           reduce using rule 69 (expressions -> expression invocation_3 .)


state 189

    (64) invocation_3 -> empty .

    RPAREN          reduce using rule 64 (invocation_3 -> empty .)
    COMMA           reduce using rule 64 (invocation_3 -> empty .)


state 190

    (44) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE . LPAREN expression RPAREN gotot SEMICOLON

    LPAREN          shift and go to state 203


state 191

    (50) while -> WHILE breadcrumb LPAREN expression RPAREN gotof . LBRACE statements RBRACE

    LBRACE          shift and go to state 204


state 192

    (53) if_else -> IF LPAREN expression RPAREN gotof LBRACE . statements RBRACE ELSE goto LBRACE statements RBRACE
    (52) if -> IF LPAREN expression RPAREN gotof LBRACE . statements RBRACE
    (29) statements -> . statements statement
    (30) statements -> . statement
    (31) statements -> . empty
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (111) empty -> .
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 111 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! DO              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! PRINT           [ reduce using rule 111 (empty -> .) ]

    statements                     shift and go to state 205
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 193

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN . var_declarations
    (14) var_declarations -> . var_declaration_list
    (15) var_declarations -> . empty
    (16) var_declaration_list -> . var_declaration var_declarations
    (111) empty -> .
    (17) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    LBRACE          reduce using rule 111 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 206
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 194

    (25) parameters -> parameters COMMA parameter .

    COMMA           reduce using rule 25 (parameters -> parameters COMMA parameter .)
    RPAREN          reduce using rule 25 (parameters -> parameters COMMA parameter .)


state 195

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN . var_declarations
    (14) var_declarations -> . var_declaration_list
    (15) var_declarations -> . empty
    (16) var_declaration_list -> . var_declaration var_declarations
    (111) empty -> .
    (17) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    LBRACE          reduce using rule 111 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 207
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 196

    (24) variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .

    COMMA           reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    TIMES           reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    PLUS            reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    MINUS           reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESS            reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATER         reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    EQUALS          reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    AND             reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    OR              reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RBRACK          reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RPAREN          reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    FROM            reduce using rule 24 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)


state 197

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 . FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4

    FROM            shift and go to state 208


state 198

    (47) for_2 -> empty .

    FROM            reduce using rule 47 (for_2 -> empty .)


state 199

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 . SEMICOLON invocation_6

    SEMICOLON       shift and go to state 209


state 200

    (66) invocation_5 -> empty .

    SEMICOLON       reduce using rule 66 (invocation_5 -> empty .)


state 201

    (68) expressions -> expressions COMMA invocation_4 . expression invocation_3
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 210
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 202

    (65) invocation_4 -> empty .

    NOT             reduce using rule 65 (invocation_4 -> empty .)
    ID              reduce using rule 65 (invocation_4 -> empty .)
    CTEI            reduce using rule 65 (invocation_4 -> empty .)
    CTEF            reduce using rule 65 (invocation_4 -> empty .)
    CTEC            reduce using rule 65 (invocation_4 -> empty .)
    CTEB            reduce using rule 65 (invocation_4 -> empty .)
    LPAREN          reduce using rule 65 (invocation_4 -> empty .)


state 203

    (44) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN . expression RPAREN gotot SEMICOLON
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 211
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 204

    (50) while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE . statements RBRACE
    (29) statements -> . statements statement
    (30) statements -> . statement
    (31) statements -> . empty
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (111) empty -> .
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 111 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! DO              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! PRINT           [ reduce using rule 111 (empty -> .) ]

    statements                     shift and go to state 212
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 205

    (53) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements . RBRACE ELSE goto LBRACE statements RBRACE
    (52) if -> IF LPAREN expression RPAREN gotof LBRACE statements . RBRACE
    (29) statements -> statements . statement
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 213
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 206

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .

    LBRACE          reduce using rule 7 (function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .)


state 207

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .

    LBRACE          reduce using rule 8 (function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .)


state 208

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM . expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (71) expression -> . t_expression
    (72) expression -> . NOT t_expression
    (79) t_expression -> . g_expression
    (80) t_expression -> . t_expression boolean_operator g_expression
    (81) g_expression -> . m_expression
    (82) g_expression -> . g_expression comparison_operator m_expression
    (83) m_expression -> . term
    (84) m_expression -> . m_expression addition_operator term
    (85) term -> . factor
    (86) term -> . term multiplication_operator factor
    (87) factor -> . variable
    (88) factor -> . cte
    (89) factor -> . expression_parenthesis
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (107) cte -> . CTEI
    (108) cte -> . CTEF
    (109) cte -> . CTEC
    (110) cte -> . CTEB
    (90) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 85
    ID              shift and go to state 38
    CTEI            shift and go to state 93
    CTEF            shift and go to state 94
    CTEC            shift and go to state 95
    CTEB            shift and go to state 96
    LPAREN          shift and go to state 97

    expression                     shift and go to state 214
    t_expression                   shift and go to state 84
    g_expression                   shift and go to state 86
    m_expression                   shift and go to state 87
    term                           shift and go to state 88
    factor                         shift and go to state 89
    variable                       shift and go to state 90
    cte                            shift and go to state 91
    expression_parenthesis         shift and go to state 92

state 209

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON . invocation_6
    (67) invocation_6 -> . empty
    (111) empty -> .

    RBRACE          reduce using rule 111 (empty -> .)
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    DO              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    PRINT           reduce using rule 111 (empty -> .)

    invocation_6                   shift and go to state 215
    empty                          shift and go to state 216

state 210

    (68) expressions -> expressions COMMA invocation_4 expression . invocation_3
    (64) invocation_3 -> . empty
    (111) empty -> .

    RPAREN          reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)

    invocation_3                   shift and go to state 217
    empty                          shift and go to state 189

state 211

    (44) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression . RPAREN gotot SEMICOLON

    RPAREN          shift and go to state 218


state 212

    (50) while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements . RBRACE
    (29) statements -> statements . statement
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 219
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 213

    (53) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE . ELSE goto LBRACE statements RBRACE
    (52) if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .

    ELSE            shift and go to state 220
    RBRACE          reduce using rule 52 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    RETURN          reduce using rule 52 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    READ            reduce using rule 52 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    FOR             reduce using rule 52 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    DO              reduce using rule 52 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    WHILE           reduce using rule 52 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    IF              reduce using rule 52 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    ID              reduce using rule 52 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    PRINT           reduce using rule 52 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)


state 214

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression . RPAREN for_3 DO LBRACE statements RBRACE for_4

    RPAREN          shift and go to state 221


state 215

    (61) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .

    RBRACE          reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    RETURN          reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    READ            reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    FOR             reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    DO              reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    WHILE           reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    IF              reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    ID              reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    PRINT           reduce using rule 61 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)


state 216

    (67) invocation_6 -> empty .

    RBRACE          reduce using rule 67 (invocation_6 -> empty .)
    RETURN          reduce using rule 67 (invocation_6 -> empty .)
    READ            reduce using rule 67 (invocation_6 -> empty .)
    FOR             reduce using rule 67 (invocation_6 -> empty .)
    DO              reduce using rule 67 (invocation_6 -> empty .)
    WHILE           reduce using rule 67 (invocation_6 -> empty .)
    IF              reduce using rule 67 (invocation_6 -> empty .)
    ID              reduce using rule 67 (invocation_6 -> empty .)
    PRINT           reduce using rule 67 (invocation_6 -> empty .)


state 217

    (68) expressions -> expressions COMMA invocation_4 expression invocation_3 .

    RPAREN          reduce using rule 68 (expressions -> expressions COMMA invocation_4 expression invocation_3 .)
    COMMA           reduce using rule 68 (expressions -> expressions COMMA invocation_4 expression invocation_3 .)


state 218

    (44) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN . gotot SEMICOLON
    (54) gotot -> . empty
    (111) empty -> .

    SEMICOLON       reduce using rule 111 (empty -> .)

    gotot                          shift and go to state 222
    empty                          shift and go to state 223

state 219

    (50) while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .

    RBRACE          reduce using rule 50 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    RETURN          reduce using rule 50 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    READ            reduce using rule 50 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    FOR             reduce using rule 50 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    DO              reduce using rule 50 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    WHILE           reduce using rule 50 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    IF              reduce using rule 50 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    ID              reduce using rule 50 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    PRINT           reduce using rule 50 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)


state 220

    (53) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE . goto LBRACE statements RBRACE
    (55) goto -> . empty
    (111) empty -> .

    LBRACE          reduce using rule 111 (empty -> .)

    goto                           shift and go to state 224
    empty                          shift and go to state 225

state 221

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN . for_3 DO LBRACE statements RBRACE for_4
    (48) for_3 -> . empty
    (111) empty -> .

    DO              reduce using rule 111 (empty -> .)

    for_3                          shift and go to state 226
    empty                          shift and go to state 227

state 222

    (44) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot . SEMICOLON

    SEMICOLON       shift and go to state 228


state 223

    (54) gotot -> empty .

    SEMICOLON       reduce using rule 54 (gotot -> empty .)


state 224

    (53) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto . LBRACE statements RBRACE

    LBRACE          shift and go to state 229


state 225

    (55) goto -> empty .

    LBRACE          reduce using rule 55 (goto -> empty .)


state 226

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 . DO LBRACE statements RBRACE for_4

    DO              shift and go to state 230


state 227

    (48) for_3 -> empty .

    DO              reduce using rule 48 (for_3 -> empty .)


state 228

    (44) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .

    RBRACE          reduce using rule 44 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    RETURN          reduce using rule 44 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    READ            reduce using rule 44 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    FOR             reduce using rule 44 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    DO              reduce using rule 44 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    WHILE           reduce using rule 44 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    IF              reduce using rule 44 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    ID              reduce using rule 44 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    PRINT           reduce using rule 44 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)


state 229

    (53) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE . statements RBRACE
    (29) statements -> . statements statement
    (30) statements -> . statement
    (31) statements -> . empty
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (111) empty -> .
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 111 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! DO              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! PRINT           [ reduce using rule 111 (empty -> .) ]

    statements                     shift and go to state 231
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 230

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO . LBRACE statements RBRACE for_4

    LBRACE          shift and go to state 232


state 231

    (53) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements . RBRACE
    (29) statements -> statements . statement
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 233
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 232

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE . statements RBRACE for_4
    (29) statements -> . statements statement
    (30) statements -> . statement
    (31) statements -> . empty
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (111) empty -> .
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 111 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 111 (empty -> .) ]
  ! FOR             [ reduce using rule 111 (empty -> .) ]
  ! DO              [ reduce using rule 111 (empty -> .) ]
  ! WHILE           [ reduce using rule 111 (empty -> .) ]
  ! IF              [ reduce using rule 111 (empty -> .) ]
  ! ID              [ reduce using rule 111 (empty -> .) ]
  ! RETURN          [ reduce using rule 111 (empty -> .) ]
  ! PRINT           [ reduce using rule 111 (empty -> .) ]

    statements                     shift and go to state 234
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 233

    (53) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .

    RBRACE          reduce using rule 53 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    RETURN          reduce using rule 53 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    READ            reduce using rule 53 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    FOR             reduce using rule 53 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    DO              reduce using rule 53 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    WHILE           reduce using rule 53 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    IF              reduce using rule 53 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    ID              reduce using rule 53 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    PRINT           reduce using rule 53 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)


state 234

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements . RBRACE for_4
    (29) statements -> statements . statement
    (32) statement -> . read
    (33) statement -> . assing_to_call
    (34) statement -> . assingation
    (35) statement -> . for
    (36) statement -> . do_while
    (37) statement -> . while
    (38) statement -> . if_else
    (39) statement -> . invocation
    (40) statement -> . if
    (41) statement -> . return
    (42) statement -> . print
    (58) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (43) assing_to_call -> . variable ASSIGN invocation
    (78) assingation -> . variable ASSIGN expression SEMICOLON
    (45) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (44) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (50) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (53) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (61) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (52) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (57) return -> . RETURN expression SEMICOLON
    (73) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (22) variable -> . ID
    (23) variable -> . ID LBRACK expression RBRACK
    (24) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 235
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 235

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE . for_4
    (49) for_4 -> . empty
    (111) empty -> .

    RBRACE          reduce using rule 111 (empty -> .)
    RETURN          reduce using rule 111 (empty -> .)
    READ            reduce using rule 111 (empty -> .)
    FOR             reduce using rule 111 (empty -> .)
    DO              reduce using rule 111 (empty -> .)
    WHILE           reduce using rule 111 (empty -> .)
    IF              reduce using rule 111 (empty -> .)
    ID              reduce using rule 111 (empty -> .)
    PRINT           reduce using rule 111 (empty -> .)

    for_4                          shift and go to state 236
    empty                          shift and go to state 237

state 236

    (45) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .

    RBRACE          reduce using rule 45 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    RETURN          reduce using rule 45 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    READ            reduce using rule 45 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    FOR             reduce using rule 45 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    DO              reduce using rule 45 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    WHILE           reduce using rule 45 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    IF              reduce using rule 45 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    ID              reduce using rule 45 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    PRINT           reduce using rule 45 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)


state 237

    (49) for_4 -> empty .

    RBRACE          reduce using rule 49 (for_4 -> empty .)
    RETURN          reduce using rule 49 (for_4 -> empty .)
    READ            reduce using rule 49 (for_4 -> empty .)
    FOR             reduce using rule 49 (for_4 -> empty .)
    DO              reduce using rule 49 (for_4 -> empty .)
    WHILE           reduce using rule 49 (for_4 -> empty .)
    IF              reduce using rule 49 (for_4 -> empty .)
    ID              reduce using rule 49 (for_4 -> empty .)
    PRINT           reduce using rule 49 (for_4 -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 7 resolved as shift
WARNING: shift/reduce conflict for READ in state 33 resolved as shift
WARNING: shift/reduce conflict for FOR in state 33 resolved as shift
WARNING: shift/reduce conflict for DO in state 33 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 33 resolved as shift
WARNING: shift/reduce conflict for IF in state 33 resolved as shift
WARNING: shift/reduce conflict for ID in state 33 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 33 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 33 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 71 resolved as shift
WARNING: shift/reduce conflict for READ in state 113 resolved as shift
WARNING: shift/reduce conflict for FOR in state 113 resolved as shift
WARNING: shift/reduce conflict for DO in state 113 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 113 resolved as shift
WARNING: shift/reduce conflict for IF in state 113 resolved as shift
WARNING: shift/reduce conflict for ID in state 113 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 113 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 113 resolved as shift
WARNING: shift/reduce conflict for READ in state 142 resolved as shift
WARNING: shift/reduce conflict for FOR in state 142 resolved as shift
WARNING: shift/reduce conflict for DO in state 142 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 142 resolved as shift
WARNING: shift/reduce conflict for IF in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 142 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 142 resolved as shift
WARNING: shift/reduce conflict for READ in state 192 resolved as shift
WARNING: shift/reduce conflict for FOR in state 192 resolved as shift
WARNING: shift/reduce conflict for DO in state 192 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 192 resolved as shift
WARNING: shift/reduce conflict for IF in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 192 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 192 resolved as shift
WARNING: shift/reduce conflict for READ in state 204 resolved as shift
WARNING: shift/reduce conflict for FOR in state 204 resolved as shift
WARNING: shift/reduce conflict for DO in state 204 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 204 resolved as shift
WARNING: shift/reduce conflict for IF in state 204 resolved as shift
WARNING: shift/reduce conflict for ID in state 204 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 204 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 204 resolved as shift
WARNING: shift/reduce conflict for READ in state 229 resolved as shift
WARNING: shift/reduce conflict for FOR in state 229 resolved as shift
WARNING: shift/reduce conflict for DO in state 229 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 229 resolved as shift
WARNING: shift/reduce conflict for IF in state 229 resolved as shift
WARNING: shift/reduce conflict for ID in state 229 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 229 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 229 resolved as shift
WARNING: shift/reduce conflict for READ in state 232 resolved as shift
WARNING: shift/reduce conflict for FOR in state 232 resolved as shift
WARNING: shift/reduce conflict for DO in state 232 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 232 resolved as shift
WARNING: shift/reduce conflict for IF in state 232 resolved as shift
WARNING: shift/reduce conflict for ID in state 232 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 232 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 232 resolved as shift
