Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    FALSE
    STRING
    THEN
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END
Rule 2     global_scope -> empty
Rule 3     functions -> functions function
Rule 4     functions -> function
Rule 5     functions -> empty
Rule 6     function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
Rule 7     function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
Rule 8     function_scope -> empty
Rule 9     main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
Rule 10    main_scope -> empty
Rule 11    var_declarations -> var_declaration var_declarations
Rule 12    var_declarations -> var_declaration
Rule 13    var_declarations -> empty
Rule 14    var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
Rule 15    open_var_declaration -> empty
Rule 16    close_var_declaration -> empty
Rule 17    variables -> variable
Rule 18    variables -> variable COMMA variables
Rule 19    variable -> ID
Rule 20    variable -> ID LBRACK expression RBRACK
Rule 21    variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK
Rule 22    parameters -> parameters COMMA parameter
Rule 23    parameters -> parameter
Rule 24    parameters -> empty
Rule 25    parameter -> simple_type ID
Rule 26    statements -> statements statement
Rule 27    statements -> statement
Rule 28    statements -> empty
Rule 29    statement -> read
Rule 30    statement -> do_while
Rule 31    statement -> while
Rule 32    statement -> if_else
Rule 33    statement -> invocation
Rule 34    statement -> if
Rule 35    statement -> assingation
Rule 36    statement -> return
Rule 37    statement -> print
Rule 38    do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
Rule 39    while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
Rule 40    breadcrumb -> empty
Rule 41    if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
Rule 42    if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
Rule 43    gotot -> empty
Rule 44    goto -> empty
Rule 45    gotof -> empty
Rule 46    return -> RETURN expression SEMICOLON
Rule 47    read -> READ LPAREN variable_list RPAREN SEMICOLON
Rule 48    variable_list -> variable
Rule 49    variable_list -> variable_list COMMA variable
Rule 50    invocation -> ID LPAREN expressions RPAREN SEMICOLON
Rule 51    expressions -> expressions COMMA expression
Rule 52    expressions -> expression
Rule 53    expressions -> empty
Rule 54    print -> PRINT LPAREN print_arguments RPAREN SEMICOLON
Rule 55    print_arguments -> print_argument
Rule 56    print_arguments -> print_arguments COMMA print_argument
Rule 57    print_argument -> CTES
Rule 58    print_argument -> expression
Rule 59    assingation -> variable ASSIGN expression SEMICOLON
Rule 60    expression -> t_expression
Rule 61    expression -> NOT t_expression
Rule 62    t_expression -> g_expression
Rule 63    t_expression -> t_expression boolean_operator g_expression
Rule 64    g_expression -> m_expression
Rule 65    g_expression -> g_expression comparison_operator m_expression
Rule 66    m_expression -> term
Rule 67    m_expression -> m_expression addition_operator term
Rule 68    term -> factor
Rule 69    term -> term multiplication_operator factor
Rule 70    factor -> variable
Rule 71    factor -> cte
Rule 72    factor -> expression_parenthesis
Rule 73    factor -> invocation
Rule 74    expression_parenthesis -> LPAREN expression RPAREN
Rule 75    comparison_operator -> LESS
Rule 76    comparison_operator -> GREATER
Rule 77    comparison_operator -> EQUALS
Rule 78    comparison_operator -> NOTEQUAL
Rule 79    comparison_operator -> GREATERTHAN
Rule 80    comparison_operator -> LESSTHAN
Rule 81    addition_operator -> PLUS
Rule 82    addition_operator -> MINUS
Rule 83    boolean_operator -> AND
Rule 84    boolean_operator -> OR
Rule 85    multiplication_operator -> TIMES
Rule 86    multiplication_operator -> DIVIDE
Rule 87    simple_type -> INT
Rule 88    simple_type -> FLOAT
Rule 89    simple_type -> CHAR
Rule 90    simple_type -> BOOLEAN
Rule 91    cte -> CTEI
Rule 92    cte -> CTEF
Rule 93    cte -> CTEC
Rule 94    cte -> CTEB
Rule 95    empty -> <empty>

Terminals, with rules where they appear

AND                  : 83
ASSIGN               : 59
BOOLEAN              : 90
CHAR                 : 89
COLON                : 
COMMA                : 18 22 49 51 56
COMMENT              : 
CTEB                 : 94
CTEC                 : 93
CTEF                 : 92
CTEI                 : 91
CTES                 : 57
DIVIDE               : 86
DO                   : 38
ELSE                 : 42
END                  : 1
EQUALS               : 77
FALSE                : 
FLOAT                : 88
FUNCTION             : 6 7
GREATER              : 76
GREATERTHAN          : 79
ID                   : 1 6 7 19 20 21 25 50
IF                   : 41 42
INT                  : 87
LBRACE               : 6 7 9 38 39 41 42 42
LBRACK               : 20 21 21
LESS                 : 75
LESSTHAN             : 80
LPAREN               : 6 7 9 38 39 41 42 47 50 54 74
MAIN                 : 9
MINUS                : 82
NOT                  : 61
NOTEQUAL             : 78
OR                   : 84
PLUS                 : 81
PRINT                : 54
PROGRAM              : 1
RBRACE               : 6 7 9 38 39 41 42 42
RBRACK               : 20 21 21
READ                 : 47
RETURN               : 46
RPAREN               : 6 7 9 38 39 41 42 47 50 54 74
SEMICOLON            : 1 14 38 46 47 50 54 59
STRING               : 
THEN                 : 
TIMES                : 85
TRUE                 : 
VARIABLE             : 14
VOID                 : 7
WHILE                : 38 39
error                : 

Nonterminals, with rules where they appear

addition_operator    : 67
assingation          : 35
boolean_operator     : 63
breadcrumb           : 38 39
close_var_declaration : 6 7 14
comparison_operator  : 65
cte                  : 71
do_while             : 30
empty                : 2 5 8 10 13 15 16 24 28 40 43 44 45 53
expression           : 20 21 21 38 39 41 42 46 51 52 58 59 74
expression_parenthesis : 72
expressions          : 50 51
factor               : 68 69
function             : 3 4
function_scope       : 6 7
functions            : 1 3
g_expression         : 62 63 65
global_scope         : 1
goto                 : 42
gotof                : 39 41 42
gotot                : 38
if                   : 34
if_else              : 32
invocation           : 33 73
m_expression         : 64 65 67
main                 : 1
main_scope           : 9
multiplication_operator : 69
open_var_declaration : 6 7 14
parameter            : 22 23
parameters           : 6 7 22
print                : 37
print_argument       : 55 56
print_arguments      : 54 56
program              : 0
read                 : 29
return               : 36
simple_type          : 6 14 25
statement            : 26 27
statements           : 6 7 9 26 38 39 41 42 42
t_expression         : 60 61 63
term                 : 66 67 69
var_declaration      : 11 12
var_declarations     : 1 6 7 9 11
variable             : 17 18 48 49 59 70
variable_list        : 47 49
variables            : 14 18
while                : 31

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON global_scope var_declarations functions main END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON global_scope var_declarations functions main END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON global_scope var_declarations functions main END

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . global_scope var_declarations functions main END
    (2) global_scope -> . empty
    (95) empty -> .

    VARIABLE        reduce using rule 95 (empty -> .)
    FUNCTION        reduce using rule 95 (empty -> .)
    MAIN            reduce using rule 95 (empty -> .)

    global_scope                   shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) program -> PROGRAM ID SEMICOLON global_scope . var_declarations functions main END
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
    (95) empty -> .

    VARIABLE        shift and go to state 10
    FUNCTION        reduce using rule 95 (empty -> .)
    MAIN            reduce using rule 95 (empty -> .)

    var_declarations               shift and go to state 7
    var_declaration                shift and go to state 8
    empty                          shift and go to state 9

state 6

    (2) global_scope -> empty .

    VARIABLE        reduce using rule 2 (global_scope -> empty .)
    FUNCTION        reduce using rule 2 (global_scope -> empty .)
    MAIN            reduce using rule 2 (global_scope -> empty .)


state 7

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations . functions main END
    (3) functions -> . functions function
    (4) functions -> . function
    (5) functions -> . empty
    (6) function -> . FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (7) function -> . FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (95) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 95 (empty -> .)

  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]

    functions                      shift and go to state 11
    function                       shift and go to state 12
    empty                          shift and go to state 13

state 8

    (11) var_declarations -> var_declaration . var_declarations
    (12) var_declarations -> var_declaration .
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
    (95) empty -> .

  ! reduce/reduce conflict for FUNCTION resolved using rule 12 (var_declarations -> var_declaration .)
  ! reduce/reduce conflict for MAIN resolved using rule 12 (var_declarations -> var_declaration .)
  ! reduce/reduce conflict for LBRACE resolved using rule 12 (var_declarations -> var_declaration .)
    FUNCTION        reduce using rule 12 (var_declarations -> var_declaration .)
    MAIN            reduce using rule 12 (var_declarations -> var_declaration .)
    LBRACE          reduce using rule 12 (var_declarations -> var_declaration .)
    VARIABLE        shift and go to state 10

  ! FUNCTION        [ reduce using rule 95 (empty -> .) ]
  ! MAIN            [ reduce using rule 95 (empty -> .) ]
  ! LBRACE          [ reduce using rule 95 (empty -> .) ]

    var_declaration                shift and go to state 8
    var_declarations               shift and go to state 15
    empty                          shift and go to state 9

state 9

    (13) var_declarations -> empty .

    FUNCTION        reduce using rule 13 (var_declarations -> empty .)
    MAIN            reduce using rule 13 (var_declarations -> empty .)
    LBRACE          reduce using rule 13 (var_declarations -> empty .)


state 10

    (14) var_declaration -> VARIABLE . open_var_declaration simple_type variables SEMICOLON close_var_declaration
    (15) open_var_declaration -> . empty
    (95) empty -> .

    INT             reduce using rule 95 (empty -> .)
    FLOAT           reduce using rule 95 (empty -> .)
    CHAR            reduce using rule 95 (empty -> .)
    BOOLEAN         reduce using rule 95 (empty -> .)

    open_var_declaration           shift and go to state 16
    empty                          shift and go to state 17

state 11

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions . main END
    (3) functions -> functions . function
    (9) main -> . MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
    (6) function -> . FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (7) function -> . FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE

    MAIN            shift and go to state 20
    FUNCTION        shift and go to state 14

    main                           shift and go to state 18
    function                       shift and go to state 19

state 12

    (4) functions -> function .

    MAIN            reduce using rule 4 (functions -> function .)
    FUNCTION        reduce using rule 4 (functions -> function .)


state 13

    (5) functions -> empty .

    MAIN            reduce using rule 5 (functions -> empty .)
    FUNCTION        reduce using rule 5 (functions -> empty .)


state 14

    (6) function -> FUNCTION . simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (7) function -> FUNCTION . VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (87) simple_type -> . INT
    (88) simple_type -> . FLOAT
    (89) simple_type -> . CHAR
    (90) simple_type -> . BOOLEAN

    VOID            shift and go to state 22
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26

    simple_type                    shift and go to state 21

state 15

    (11) var_declarations -> var_declaration var_declarations .

    FUNCTION        reduce using rule 11 (var_declarations -> var_declaration var_declarations .)
    MAIN            reduce using rule 11 (var_declarations -> var_declaration var_declarations .)
    LBRACE          reduce using rule 11 (var_declarations -> var_declaration var_declarations .)


state 16

    (14) var_declaration -> VARIABLE open_var_declaration . simple_type variables SEMICOLON close_var_declaration
    (87) simple_type -> . INT
    (88) simple_type -> . FLOAT
    (89) simple_type -> . CHAR
    (90) simple_type -> . BOOLEAN

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26

    simple_type                    shift and go to state 27

state 17

    (15) open_var_declaration -> empty .

    INT             reduce using rule 15 (open_var_declaration -> empty .)
    FLOAT           reduce using rule 15 (open_var_declaration -> empty .)
    CHAR            reduce using rule 15 (open_var_declaration -> empty .)
    BOOLEAN         reduce using rule 15 (open_var_declaration -> empty .)
    COMMA           reduce using rule 15 (open_var_declaration -> empty .)
    RPAREN          reduce using rule 15 (open_var_declaration -> empty .)


state 18

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main . END

    END             shift and go to state 28


state 19

    (3) functions -> functions function .

    MAIN            reduce using rule 3 (functions -> functions function .)
    FUNCTION        reduce using rule 3 (functions -> functions function .)


state 20

    (9) main -> MAIN . LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 29


state 21

    (6) function -> FUNCTION simple_type . ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE

    ID              shift and go to state 30


state 22

    (7) function -> FUNCTION VOID . ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE

    ID              shift and go to state 31


state 23

    (87) simple_type -> INT .

    ID              reduce using rule 87 (simple_type -> INT .)


state 24

    (88) simple_type -> FLOAT .

    ID              reduce using rule 88 (simple_type -> FLOAT .)


state 25

    (89) simple_type -> CHAR .

    ID              reduce using rule 89 (simple_type -> CHAR .)


state 26

    (90) simple_type -> BOOLEAN .

    ID              reduce using rule 90 (simple_type -> BOOLEAN .)


state 27

    (14) var_declaration -> VARIABLE open_var_declaration simple_type . variables SEMICOLON close_var_declaration
    (17) variables -> . variable
    (18) variables -> . variable COMMA variables
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 34

    variables                      shift and go to state 32
    variable                       shift and go to state 33

state 28

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .)


state 29

    (9) main -> MAIN LPAREN . RPAREN main_scope var_declarations LBRACE statements RBRACE

    RPAREN          shift and go to state 35


state 30

    (6) function -> FUNCTION simple_type ID . LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 36


state 31

    (7) function -> FUNCTION VOID ID . LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 37


state 32

    (14) var_declaration -> VARIABLE open_var_declaration simple_type variables . SEMICOLON close_var_declaration

    SEMICOLON       shift and go to state 38


state 33

    (17) variables -> variable .
    (18) variables -> variable . COMMA variables

    SEMICOLON       reduce using rule 17 (variables -> variable .)
    COMMA           shift and go to state 39


state 34

    (19) variable -> ID .
    (20) variable -> ID . LBRACK expression RBRACK
    (21) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    COMMA           reduce using rule 19 (variable -> ID .)
    SEMICOLON       reduce using rule 19 (variable -> ID .)
    RPAREN          reduce using rule 19 (variable -> ID .)
    LBRACK          shift and go to state 40


state 35

    (9) main -> MAIN LPAREN RPAREN . main_scope var_declarations LBRACE statements RBRACE
    (10) main_scope -> . empty
    (95) empty -> .

    VARIABLE        reduce using rule 95 (empty -> .)
    LBRACE          reduce using rule 95 (empty -> .)

    main_scope                     shift and go to state 41
    empty                          shift and go to state 42

state 36

    (6) function -> FUNCTION simple_type ID LPAREN . function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (8) function_scope -> . empty
    (95) empty -> .

    INT             reduce using rule 95 (empty -> .)
    FLOAT           reduce using rule 95 (empty -> .)
    CHAR            reduce using rule 95 (empty -> .)
    BOOLEAN         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    RPAREN          reduce using rule 95 (empty -> .)

    function_scope                 shift and go to state 43
    empty                          shift and go to state 44

state 37

    (7) function -> FUNCTION VOID ID LPAREN . function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (8) function_scope -> . empty
    (95) empty -> .

    INT             reduce using rule 95 (empty -> .)
    FLOAT           reduce using rule 95 (empty -> .)
    CHAR            reduce using rule 95 (empty -> .)
    BOOLEAN         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    RPAREN          reduce using rule 95 (empty -> .)

    function_scope                 shift and go to state 45
    empty                          shift and go to state 44

state 38

    (14) var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON . close_var_declaration
    (16) close_var_declaration -> . empty
    (95) empty -> .

    VARIABLE        reduce using rule 95 (empty -> .)
    FUNCTION        reduce using rule 95 (empty -> .)
    MAIN            reduce using rule 95 (empty -> .)
    LBRACE          reduce using rule 95 (empty -> .)

    close_var_declaration          shift and go to state 46
    empty                          shift and go to state 47

state 39

    (18) variables -> variable COMMA . variables
    (17) variables -> . variable
    (18) variables -> . variable COMMA variables
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 34

    variable                       shift and go to state 33
    variables                      shift and go to state 48

state 40

    (20) variable -> ID LBRACK . expression RBRACK
    (21) variable -> ID LBRACK . expression RBRACK LBRACK expression RBRACK
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 50
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 41

    (9) main -> MAIN LPAREN RPAREN main_scope . var_declarations LBRACE statements RBRACE
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
    (95) empty -> .

    VARIABLE        shift and go to state 10
    LBRACE          reduce using rule 95 (empty -> .)

    var_declarations               shift and go to state 66
    var_declaration                shift and go to state 8
    empty                          shift and go to state 9

state 42

    (10) main_scope -> empty .

    VARIABLE        reduce using rule 10 (main_scope -> empty .)
    LBRACE          reduce using rule 10 (main_scope -> empty .)


state 43

    (6) function -> FUNCTION simple_type ID LPAREN function_scope . open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (15) open_var_declaration -> . empty
    (95) empty -> .

    INT             reduce using rule 95 (empty -> .)
    FLOAT           reduce using rule 95 (empty -> .)
    CHAR            reduce using rule 95 (empty -> .)
    BOOLEAN         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    RPAREN          reduce using rule 95 (empty -> .)

    open_var_declaration           shift and go to state 67
    empty                          shift and go to state 17

state 44

    (8) function_scope -> empty .

    INT             reduce using rule 8 (function_scope -> empty .)
    FLOAT           reduce using rule 8 (function_scope -> empty .)
    CHAR            reduce using rule 8 (function_scope -> empty .)
    BOOLEAN         reduce using rule 8 (function_scope -> empty .)
    COMMA           reduce using rule 8 (function_scope -> empty .)
    RPAREN          reduce using rule 8 (function_scope -> empty .)


state 45

    (7) function -> FUNCTION VOID ID LPAREN function_scope . open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (15) open_var_declaration -> . empty
    (95) empty -> .

    INT             reduce using rule 95 (empty -> .)
    FLOAT           reduce using rule 95 (empty -> .)
    CHAR            reduce using rule 95 (empty -> .)
    BOOLEAN         reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    RPAREN          reduce using rule 95 (empty -> .)

    open_var_declaration           shift and go to state 68
    empty                          shift and go to state 17

state 46

    (14) var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .

    VARIABLE        reduce using rule 14 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    FUNCTION        reduce using rule 14 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    MAIN            reduce using rule 14 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    LBRACE          reduce using rule 14 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)


state 47

    (16) close_var_declaration -> empty .

    VARIABLE        reduce using rule 16 (close_var_declaration -> empty .)
    FUNCTION        reduce using rule 16 (close_var_declaration -> empty .)
    MAIN            reduce using rule 16 (close_var_declaration -> empty .)
    LBRACE          reduce using rule 16 (close_var_declaration -> empty .)
    RPAREN          reduce using rule 16 (close_var_declaration -> empty .)


state 48

    (18) variables -> variable COMMA variables .

    SEMICOLON       reduce using rule 18 (variables -> variable COMMA variables .)


state 49

    (19) variable -> ID .
    (20) variable -> ID . LBRACK expression RBRACK
    (21) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK
    (50) invocation -> ID . LPAREN expressions RPAREN SEMICOLON

    TIMES           reduce using rule 19 (variable -> ID .)
    DIVIDE          reduce using rule 19 (variable -> ID .)
    PLUS            reduce using rule 19 (variable -> ID .)
    MINUS           reduce using rule 19 (variable -> ID .)
    LESS            reduce using rule 19 (variable -> ID .)
    GREATER         reduce using rule 19 (variable -> ID .)
    EQUALS          reduce using rule 19 (variable -> ID .)
    NOTEQUAL        reduce using rule 19 (variable -> ID .)
    GREATERTHAN     reduce using rule 19 (variable -> ID .)
    LESSTHAN        reduce using rule 19 (variable -> ID .)
    AND             reduce using rule 19 (variable -> ID .)
    OR              reduce using rule 19 (variable -> ID .)
    RBRACK          reduce using rule 19 (variable -> ID .)
    RPAREN          reduce using rule 19 (variable -> ID .)
    COMMA           reduce using rule 19 (variable -> ID .)
    SEMICOLON       reduce using rule 19 (variable -> ID .)
    LBRACK          shift and go to state 40
    LPAREN          shift and go to state 69


state 50

    (20) variable -> ID LBRACK expression . RBRACK
    (21) variable -> ID LBRACK expression . RBRACK LBRACK expression RBRACK

    RBRACK          shift and go to state 70


state 51

    (60) expression -> t_expression .
    (63) t_expression -> t_expression . boolean_operator g_expression
    (83) boolean_operator -> . AND
    (84) boolean_operator -> . OR

    RBRACK          reduce using rule 60 (expression -> t_expression .)
    RPAREN          reduce using rule 60 (expression -> t_expression .)
    COMMA           reduce using rule 60 (expression -> t_expression .)
    SEMICOLON       reduce using rule 60 (expression -> t_expression .)
    AND             shift and go to state 72
    OR              shift and go to state 73

    boolean_operator               shift and go to state 71

state 52

    (61) expression -> NOT . t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    t_expression                   shift and go to state 74
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 53

    (62) t_expression -> g_expression .
    (65) g_expression -> g_expression . comparison_operator m_expression
    (75) comparison_operator -> . LESS
    (76) comparison_operator -> . GREATER
    (77) comparison_operator -> . EQUALS
    (78) comparison_operator -> . NOTEQUAL
    (79) comparison_operator -> . GREATERTHAN
    (80) comparison_operator -> . LESSTHAN

    AND             reduce using rule 62 (t_expression -> g_expression .)
    OR              reduce using rule 62 (t_expression -> g_expression .)
    RBRACK          reduce using rule 62 (t_expression -> g_expression .)
    RPAREN          reduce using rule 62 (t_expression -> g_expression .)
    COMMA           reduce using rule 62 (t_expression -> g_expression .)
    SEMICOLON       reduce using rule 62 (t_expression -> g_expression .)
    LESS            shift and go to state 76
    GREATER         shift and go to state 77
    EQUALS          shift and go to state 78
    NOTEQUAL        shift and go to state 79
    GREATERTHAN     shift and go to state 80
    LESSTHAN        shift and go to state 81

    comparison_operator            shift and go to state 75

state 54

    (64) g_expression -> m_expression .
    (67) m_expression -> m_expression . addition_operator term
    (81) addition_operator -> . PLUS
    (82) addition_operator -> . MINUS

    LESS            reduce using rule 64 (g_expression -> m_expression .)
    GREATER         reduce using rule 64 (g_expression -> m_expression .)
    EQUALS          reduce using rule 64 (g_expression -> m_expression .)
    NOTEQUAL        reduce using rule 64 (g_expression -> m_expression .)
    GREATERTHAN     reduce using rule 64 (g_expression -> m_expression .)
    LESSTHAN        reduce using rule 64 (g_expression -> m_expression .)
    AND             reduce using rule 64 (g_expression -> m_expression .)
    OR              reduce using rule 64 (g_expression -> m_expression .)
    RBRACK          reduce using rule 64 (g_expression -> m_expression .)
    RPAREN          reduce using rule 64 (g_expression -> m_expression .)
    COMMA           reduce using rule 64 (g_expression -> m_expression .)
    SEMICOLON       reduce using rule 64 (g_expression -> m_expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84

    addition_operator              shift and go to state 82

state 55

    (66) m_expression -> term .
    (69) term -> term . multiplication_operator factor
    (85) multiplication_operator -> . TIMES
    (86) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 66 (m_expression -> term .)
    MINUS           reduce using rule 66 (m_expression -> term .)
    LESS            reduce using rule 66 (m_expression -> term .)
    GREATER         reduce using rule 66 (m_expression -> term .)
    EQUALS          reduce using rule 66 (m_expression -> term .)
    NOTEQUAL        reduce using rule 66 (m_expression -> term .)
    GREATERTHAN     reduce using rule 66 (m_expression -> term .)
    LESSTHAN        reduce using rule 66 (m_expression -> term .)
    AND             reduce using rule 66 (m_expression -> term .)
    OR              reduce using rule 66 (m_expression -> term .)
    RBRACK          reduce using rule 66 (m_expression -> term .)
    RPAREN          reduce using rule 66 (m_expression -> term .)
    COMMA           reduce using rule 66 (m_expression -> term .)
    SEMICOLON       reduce using rule 66 (m_expression -> term .)
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87

    multiplication_operator        shift and go to state 85

state 56

    (68) term -> factor .

    TIMES           reduce using rule 68 (term -> factor .)
    DIVIDE          reduce using rule 68 (term -> factor .)
    PLUS            reduce using rule 68 (term -> factor .)
    MINUS           reduce using rule 68 (term -> factor .)
    LESS            reduce using rule 68 (term -> factor .)
    GREATER         reduce using rule 68 (term -> factor .)
    EQUALS          reduce using rule 68 (term -> factor .)
    NOTEQUAL        reduce using rule 68 (term -> factor .)
    GREATERTHAN     reduce using rule 68 (term -> factor .)
    LESSTHAN        reduce using rule 68 (term -> factor .)
    AND             reduce using rule 68 (term -> factor .)
    OR              reduce using rule 68 (term -> factor .)
    RBRACK          reduce using rule 68 (term -> factor .)
    RPAREN          reduce using rule 68 (term -> factor .)
    COMMA           reduce using rule 68 (term -> factor .)
    SEMICOLON       reduce using rule 68 (term -> factor .)


state 57

    (70) factor -> variable .

    TIMES           reduce using rule 70 (factor -> variable .)
    DIVIDE          reduce using rule 70 (factor -> variable .)
    PLUS            reduce using rule 70 (factor -> variable .)
    MINUS           reduce using rule 70 (factor -> variable .)
    LESS            reduce using rule 70 (factor -> variable .)
    GREATER         reduce using rule 70 (factor -> variable .)
    EQUALS          reduce using rule 70 (factor -> variable .)
    NOTEQUAL        reduce using rule 70 (factor -> variable .)
    GREATERTHAN     reduce using rule 70 (factor -> variable .)
    LESSTHAN        reduce using rule 70 (factor -> variable .)
    AND             reduce using rule 70 (factor -> variable .)
    OR              reduce using rule 70 (factor -> variable .)
    RBRACK          reduce using rule 70 (factor -> variable .)
    RPAREN          reduce using rule 70 (factor -> variable .)
    COMMA           reduce using rule 70 (factor -> variable .)
    SEMICOLON       reduce using rule 70 (factor -> variable .)


state 58

    (71) factor -> cte .

    TIMES           reduce using rule 71 (factor -> cte .)
    DIVIDE          reduce using rule 71 (factor -> cte .)
    PLUS            reduce using rule 71 (factor -> cte .)
    MINUS           reduce using rule 71 (factor -> cte .)
    LESS            reduce using rule 71 (factor -> cte .)
    GREATER         reduce using rule 71 (factor -> cte .)
    EQUALS          reduce using rule 71 (factor -> cte .)
    NOTEQUAL        reduce using rule 71 (factor -> cte .)
    GREATERTHAN     reduce using rule 71 (factor -> cte .)
    LESSTHAN        reduce using rule 71 (factor -> cte .)
    AND             reduce using rule 71 (factor -> cte .)
    OR              reduce using rule 71 (factor -> cte .)
    RBRACK          reduce using rule 71 (factor -> cte .)
    RPAREN          reduce using rule 71 (factor -> cte .)
    COMMA           reduce using rule 71 (factor -> cte .)
    SEMICOLON       reduce using rule 71 (factor -> cte .)


state 59

    (72) factor -> expression_parenthesis .

    TIMES           reduce using rule 72 (factor -> expression_parenthesis .)
    DIVIDE          reduce using rule 72 (factor -> expression_parenthesis .)
    PLUS            reduce using rule 72 (factor -> expression_parenthesis .)
    MINUS           reduce using rule 72 (factor -> expression_parenthesis .)
    LESS            reduce using rule 72 (factor -> expression_parenthesis .)
    GREATER         reduce using rule 72 (factor -> expression_parenthesis .)
    EQUALS          reduce using rule 72 (factor -> expression_parenthesis .)
    NOTEQUAL        reduce using rule 72 (factor -> expression_parenthesis .)
    GREATERTHAN     reduce using rule 72 (factor -> expression_parenthesis .)
    LESSTHAN        reduce using rule 72 (factor -> expression_parenthesis .)
    AND             reduce using rule 72 (factor -> expression_parenthesis .)
    OR              reduce using rule 72 (factor -> expression_parenthesis .)
    RBRACK          reduce using rule 72 (factor -> expression_parenthesis .)
    RPAREN          reduce using rule 72 (factor -> expression_parenthesis .)
    COMMA           reduce using rule 72 (factor -> expression_parenthesis .)
    SEMICOLON       reduce using rule 72 (factor -> expression_parenthesis .)


state 60

    (73) factor -> invocation .

    TIMES           reduce using rule 73 (factor -> invocation .)
    DIVIDE          reduce using rule 73 (factor -> invocation .)
    PLUS            reduce using rule 73 (factor -> invocation .)
    MINUS           reduce using rule 73 (factor -> invocation .)
    LESS            reduce using rule 73 (factor -> invocation .)
    GREATER         reduce using rule 73 (factor -> invocation .)
    EQUALS          reduce using rule 73 (factor -> invocation .)
    NOTEQUAL        reduce using rule 73 (factor -> invocation .)
    GREATERTHAN     reduce using rule 73 (factor -> invocation .)
    LESSTHAN        reduce using rule 73 (factor -> invocation .)
    AND             reduce using rule 73 (factor -> invocation .)
    OR              reduce using rule 73 (factor -> invocation .)
    RBRACK          reduce using rule 73 (factor -> invocation .)
    RPAREN          reduce using rule 73 (factor -> invocation .)
    COMMA           reduce using rule 73 (factor -> invocation .)
    SEMICOLON       reduce using rule 73 (factor -> invocation .)


state 61

    (91) cte -> CTEI .

    TIMES           reduce using rule 91 (cte -> CTEI .)
    DIVIDE          reduce using rule 91 (cte -> CTEI .)
    PLUS            reduce using rule 91 (cte -> CTEI .)
    MINUS           reduce using rule 91 (cte -> CTEI .)
    LESS            reduce using rule 91 (cte -> CTEI .)
    GREATER         reduce using rule 91 (cte -> CTEI .)
    EQUALS          reduce using rule 91 (cte -> CTEI .)
    NOTEQUAL        reduce using rule 91 (cte -> CTEI .)
    GREATERTHAN     reduce using rule 91 (cte -> CTEI .)
    LESSTHAN        reduce using rule 91 (cte -> CTEI .)
    AND             reduce using rule 91 (cte -> CTEI .)
    OR              reduce using rule 91 (cte -> CTEI .)
    RBRACK          reduce using rule 91 (cte -> CTEI .)
    RPAREN          reduce using rule 91 (cte -> CTEI .)
    COMMA           reduce using rule 91 (cte -> CTEI .)
    SEMICOLON       reduce using rule 91 (cte -> CTEI .)


state 62

    (92) cte -> CTEF .

    TIMES           reduce using rule 92 (cte -> CTEF .)
    DIVIDE          reduce using rule 92 (cte -> CTEF .)
    PLUS            reduce using rule 92 (cte -> CTEF .)
    MINUS           reduce using rule 92 (cte -> CTEF .)
    LESS            reduce using rule 92 (cte -> CTEF .)
    GREATER         reduce using rule 92 (cte -> CTEF .)
    EQUALS          reduce using rule 92 (cte -> CTEF .)
    NOTEQUAL        reduce using rule 92 (cte -> CTEF .)
    GREATERTHAN     reduce using rule 92 (cte -> CTEF .)
    LESSTHAN        reduce using rule 92 (cte -> CTEF .)
    AND             reduce using rule 92 (cte -> CTEF .)
    OR              reduce using rule 92 (cte -> CTEF .)
    RBRACK          reduce using rule 92 (cte -> CTEF .)
    RPAREN          reduce using rule 92 (cte -> CTEF .)
    COMMA           reduce using rule 92 (cte -> CTEF .)
    SEMICOLON       reduce using rule 92 (cte -> CTEF .)


state 63

    (93) cte -> CTEC .

    TIMES           reduce using rule 93 (cte -> CTEC .)
    DIVIDE          reduce using rule 93 (cte -> CTEC .)
    PLUS            reduce using rule 93 (cte -> CTEC .)
    MINUS           reduce using rule 93 (cte -> CTEC .)
    LESS            reduce using rule 93 (cte -> CTEC .)
    GREATER         reduce using rule 93 (cte -> CTEC .)
    EQUALS          reduce using rule 93 (cte -> CTEC .)
    NOTEQUAL        reduce using rule 93 (cte -> CTEC .)
    GREATERTHAN     reduce using rule 93 (cte -> CTEC .)
    LESSTHAN        reduce using rule 93 (cte -> CTEC .)
    AND             reduce using rule 93 (cte -> CTEC .)
    OR              reduce using rule 93 (cte -> CTEC .)
    RBRACK          reduce using rule 93 (cte -> CTEC .)
    RPAREN          reduce using rule 93 (cte -> CTEC .)
    COMMA           reduce using rule 93 (cte -> CTEC .)
    SEMICOLON       reduce using rule 93 (cte -> CTEC .)


state 64

    (94) cte -> CTEB .

    TIMES           reduce using rule 94 (cte -> CTEB .)
    DIVIDE          reduce using rule 94 (cte -> CTEB .)
    PLUS            reduce using rule 94 (cte -> CTEB .)
    MINUS           reduce using rule 94 (cte -> CTEB .)
    LESS            reduce using rule 94 (cte -> CTEB .)
    GREATER         reduce using rule 94 (cte -> CTEB .)
    EQUALS          reduce using rule 94 (cte -> CTEB .)
    NOTEQUAL        reduce using rule 94 (cte -> CTEB .)
    GREATERTHAN     reduce using rule 94 (cte -> CTEB .)
    LESSTHAN        reduce using rule 94 (cte -> CTEB .)
    AND             reduce using rule 94 (cte -> CTEB .)
    OR              reduce using rule 94 (cte -> CTEB .)
    RBRACK          reduce using rule 94 (cte -> CTEB .)
    RPAREN          reduce using rule 94 (cte -> CTEB .)
    COMMA           reduce using rule 94 (cte -> CTEB .)
    SEMICOLON       reduce using rule 94 (cte -> CTEB .)


state 65

    (74) expression_parenthesis -> LPAREN . expression RPAREN
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 88
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 66

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 89


state 67

    (6) function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration . parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (22) parameters -> . parameters COMMA parameter
    (23) parameters -> . parameter
    (24) parameters -> . empty
    (25) parameter -> . simple_type ID
    (95) empty -> .
    (87) simple_type -> . INT
    (88) simple_type -> . FLOAT
    (89) simple_type -> . CHAR
    (90) simple_type -> . BOOLEAN

    COMMA           reduce using rule 95 (empty -> .)
    RPAREN          reduce using rule 95 (empty -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26

    simple_type                    shift and go to state 90
    parameters                     shift and go to state 91
    parameter                      shift and go to state 92
    empty                          shift and go to state 93

state 68

    (7) function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration . parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (22) parameters -> . parameters COMMA parameter
    (23) parameters -> . parameter
    (24) parameters -> . empty
    (25) parameter -> . simple_type ID
    (95) empty -> .
    (87) simple_type -> . INT
    (88) simple_type -> . FLOAT
    (89) simple_type -> . CHAR
    (90) simple_type -> . BOOLEAN

    COMMA           reduce using rule 95 (empty -> .)
    RPAREN          reduce using rule 95 (empty -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26

    parameters                     shift and go to state 94
    parameter                      shift and go to state 92
    empty                          shift and go to state 93
    simple_type                    shift and go to state 90

state 69

    (50) invocation -> ID LPAREN . expressions RPAREN SEMICOLON
    (51) expressions -> . expressions COMMA expression
    (52) expressions -> . expression
    (53) expressions -> . empty
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (95) empty -> .
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    RPAREN          reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    expressions                    shift and go to state 95
    expression                     shift and go to state 96
    empty                          shift and go to state 97
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 70

    (20) variable -> ID LBRACK expression RBRACK .
    (21) variable -> ID LBRACK expression RBRACK . LBRACK expression RBRACK

    COMMA           reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    TIMES           reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    PLUS            reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    MINUS           reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    LESS            reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    GREATER         reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    EQUALS          reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    AND             reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    OR              reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    RBRACK          reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    RPAREN          reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 20 (variable -> ID LBRACK expression RBRACK .)
    LBRACK          shift and go to state 98


state 71

    (63) t_expression -> t_expression boolean_operator . g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    g_expression                   shift and go to state 99
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 72

    (83) boolean_operator -> AND .

    ID              reduce using rule 83 (boolean_operator -> AND .)
    CTEI            reduce using rule 83 (boolean_operator -> AND .)
    CTEF            reduce using rule 83 (boolean_operator -> AND .)
    CTEC            reduce using rule 83 (boolean_operator -> AND .)
    CTEB            reduce using rule 83 (boolean_operator -> AND .)
    LPAREN          reduce using rule 83 (boolean_operator -> AND .)


state 73

    (84) boolean_operator -> OR .

    ID              reduce using rule 84 (boolean_operator -> OR .)
    CTEI            reduce using rule 84 (boolean_operator -> OR .)
    CTEF            reduce using rule 84 (boolean_operator -> OR .)
    CTEC            reduce using rule 84 (boolean_operator -> OR .)
    CTEB            reduce using rule 84 (boolean_operator -> OR .)
    LPAREN          reduce using rule 84 (boolean_operator -> OR .)


state 74

    (61) expression -> NOT t_expression .
    (63) t_expression -> t_expression . boolean_operator g_expression
    (83) boolean_operator -> . AND
    (84) boolean_operator -> . OR

    RBRACK          reduce using rule 61 (expression -> NOT t_expression .)
    RPAREN          reduce using rule 61 (expression -> NOT t_expression .)
    COMMA           reduce using rule 61 (expression -> NOT t_expression .)
    SEMICOLON       reduce using rule 61 (expression -> NOT t_expression .)
    AND             shift and go to state 72
    OR              shift and go to state 73

    boolean_operator               shift and go to state 71

state 75

    (65) g_expression -> g_expression comparison_operator . m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    m_expression                   shift and go to state 100
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 76

    (75) comparison_operator -> LESS .

    ID              reduce using rule 75 (comparison_operator -> LESS .)
    CTEI            reduce using rule 75 (comparison_operator -> LESS .)
    CTEF            reduce using rule 75 (comparison_operator -> LESS .)
    CTEC            reduce using rule 75 (comparison_operator -> LESS .)
    CTEB            reduce using rule 75 (comparison_operator -> LESS .)
    LPAREN          reduce using rule 75 (comparison_operator -> LESS .)


state 77

    (76) comparison_operator -> GREATER .

    ID              reduce using rule 76 (comparison_operator -> GREATER .)
    CTEI            reduce using rule 76 (comparison_operator -> GREATER .)
    CTEF            reduce using rule 76 (comparison_operator -> GREATER .)
    CTEC            reduce using rule 76 (comparison_operator -> GREATER .)
    CTEB            reduce using rule 76 (comparison_operator -> GREATER .)
    LPAREN          reduce using rule 76 (comparison_operator -> GREATER .)


state 78

    (77) comparison_operator -> EQUALS .

    ID              reduce using rule 77 (comparison_operator -> EQUALS .)
    CTEI            reduce using rule 77 (comparison_operator -> EQUALS .)
    CTEF            reduce using rule 77 (comparison_operator -> EQUALS .)
    CTEC            reduce using rule 77 (comparison_operator -> EQUALS .)
    CTEB            reduce using rule 77 (comparison_operator -> EQUALS .)
    LPAREN          reduce using rule 77 (comparison_operator -> EQUALS .)


state 79

    (78) comparison_operator -> NOTEQUAL .

    ID              reduce using rule 78 (comparison_operator -> NOTEQUAL .)
    CTEI            reduce using rule 78 (comparison_operator -> NOTEQUAL .)
    CTEF            reduce using rule 78 (comparison_operator -> NOTEQUAL .)
    CTEC            reduce using rule 78 (comparison_operator -> NOTEQUAL .)
    CTEB            reduce using rule 78 (comparison_operator -> NOTEQUAL .)
    LPAREN          reduce using rule 78 (comparison_operator -> NOTEQUAL .)


state 80

    (79) comparison_operator -> GREATERTHAN .

    ID              reduce using rule 79 (comparison_operator -> GREATERTHAN .)
    CTEI            reduce using rule 79 (comparison_operator -> GREATERTHAN .)
    CTEF            reduce using rule 79 (comparison_operator -> GREATERTHAN .)
    CTEC            reduce using rule 79 (comparison_operator -> GREATERTHAN .)
    CTEB            reduce using rule 79 (comparison_operator -> GREATERTHAN .)
    LPAREN          reduce using rule 79 (comparison_operator -> GREATERTHAN .)


state 81

    (80) comparison_operator -> LESSTHAN .

    ID              reduce using rule 80 (comparison_operator -> LESSTHAN .)
    CTEI            reduce using rule 80 (comparison_operator -> LESSTHAN .)
    CTEF            reduce using rule 80 (comparison_operator -> LESSTHAN .)
    CTEC            reduce using rule 80 (comparison_operator -> LESSTHAN .)
    CTEB            reduce using rule 80 (comparison_operator -> LESSTHAN .)
    LPAREN          reduce using rule 80 (comparison_operator -> LESSTHAN .)


state 82

    (67) m_expression -> m_expression addition_operator . term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    term                           shift and go to state 101
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 83

    (81) addition_operator -> PLUS .

    ID              reduce using rule 81 (addition_operator -> PLUS .)
    CTEI            reduce using rule 81 (addition_operator -> PLUS .)
    CTEF            reduce using rule 81 (addition_operator -> PLUS .)
    CTEC            reduce using rule 81 (addition_operator -> PLUS .)
    CTEB            reduce using rule 81 (addition_operator -> PLUS .)
    LPAREN          reduce using rule 81 (addition_operator -> PLUS .)


state 84

    (82) addition_operator -> MINUS .

    ID              reduce using rule 82 (addition_operator -> MINUS .)
    CTEI            reduce using rule 82 (addition_operator -> MINUS .)
    CTEF            reduce using rule 82 (addition_operator -> MINUS .)
    CTEC            reduce using rule 82 (addition_operator -> MINUS .)
    CTEB            reduce using rule 82 (addition_operator -> MINUS .)
    LPAREN          reduce using rule 82 (addition_operator -> MINUS .)


state 85

    (69) term -> term multiplication_operator . factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    factor                         shift and go to state 102
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 86

    (85) multiplication_operator -> TIMES .

    ID              reduce using rule 85 (multiplication_operator -> TIMES .)
    CTEI            reduce using rule 85 (multiplication_operator -> TIMES .)
    CTEF            reduce using rule 85 (multiplication_operator -> TIMES .)
    CTEC            reduce using rule 85 (multiplication_operator -> TIMES .)
    CTEB            reduce using rule 85 (multiplication_operator -> TIMES .)
    LPAREN          reduce using rule 85 (multiplication_operator -> TIMES .)


state 87

    (86) multiplication_operator -> DIVIDE .

    ID              reduce using rule 86 (multiplication_operator -> DIVIDE .)
    CTEI            reduce using rule 86 (multiplication_operator -> DIVIDE .)
    CTEF            reduce using rule 86 (multiplication_operator -> DIVIDE .)
    CTEC            reduce using rule 86 (multiplication_operator -> DIVIDE .)
    CTEB            reduce using rule 86 (multiplication_operator -> DIVIDE .)
    LPAREN          reduce using rule 86 (multiplication_operator -> DIVIDE .)


state 88

    (74) expression_parenthesis -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 103


state 89

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE . statements RBRACE
    (26) statements -> . statements statement
    (27) statements -> . statement
    (28) statements -> . empty
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (95) empty -> .
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

  ! READ            [ reduce using rule 95 (empty -> .) ]
  ! DO              [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! RETURN          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]

    statements                     shift and go to state 104
    statement                      shift and go to state 105
    empty                          shift and go to state 106
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 90

    (25) parameter -> simple_type . ID

    ID              shift and go to state 124


state 91

    (6) function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters . close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (22) parameters -> parameters . COMMA parameter
    (16) close_var_declaration -> . empty
    (95) empty -> .

    COMMA           shift and go to state 126
    RPAREN          reduce using rule 95 (empty -> .)

    close_var_declaration          shift and go to state 125
    empty                          shift and go to state 47

state 92

    (23) parameters -> parameter .

    COMMA           reduce using rule 23 (parameters -> parameter .)
    RPAREN          reduce using rule 23 (parameters -> parameter .)


state 93

    (24) parameters -> empty .

    COMMA           reduce using rule 24 (parameters -> empty .)
    RPAREN          reduce using rule 24 (parameters -> empty .)


state 94

    (7) function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters . close_var_declaration RPAREN var_declarations LBRACE statements RBRACE
    (22) parameters -> parameters . COMMA parameter
    (16) close_var_declaration -> . empty
    (95) empty -> .

    COMMA           shift and go to state 126
    RPAREN          reduce using rule 95 (empty -> .)

    close_var_declaration          shift and go to state 127
    empty                          shift and go to state 47

state 95

    (50) invocation -> ID LPAREN expressions . RPAREN SEMICOLON
    (51) expressions -> expressions . COMMA expression

    RPAREN          shift and go to state 128
    COMMA           shift and go to state 129


state 96

    (52) expressions -> expression .

    RPAREN          reduce using rule 52 (expressions -> expression .)
    COMMA           reduce using rule 52 (expressions -> expression .)


state 97

    (53) expressions -> empty .

    RPAREN          reduce using rule 53 (expressions -> empty .)
    COMMA           reduce using rule 53 (expressions -> empty .)


state 98

    (21) variable -> ID LBRACK expression RBRACK LBRACK . expression RBRACK
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 130
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 99

    (63) t_expression -> t_expression boolean_operator g_expression .
    (65) g_expression -> g_expression . comparison_operator m_expression
    (75) comparison_operator -> . LESS
    (76) comparison_operator -> . GREATER
    (77) comparison_operator -> . EQUALS
    (78) comparison_operator -> . NOTEQUAL
    (79) comparison_operator -> . GREATERTHAN
    (80) comparison_operator -> . LESSTHAN

    AND             reduce using rule 63 (t_expression -> t_expression boolean_operator g_expression .)
    OR              reduce using rule 63 (t_expression -> t_expression boolean_operator g_expression .)
    RBRACK          reduce using rule 63 (t_expression -> t_expression boolean_operator g_expression .)
    RPAREN          reduce using rule 63 (t_expression -> t_expression boolean_operator g_expression .)
    COMMA           reduce using rule 63 (t_expression -> t_expression boolean_operator g_expression .)
    SEMICOLON       reduce using rule 63 (t_expression -> t_expression boolean_operator g_expression .)
    LESS            shift and go to state 76
    GREATER         shift and go to state 77
    EQUALS          shift and go to state 78
    NOTEQUAL        shift and go to state 79
    GREATERTHAN     shift and go to state 80
    LESSTHAN        shift and go to state 81

    comparison_operator            shift and go to state 75

state 100

    (65) g_expression -> g_expression comparison_operator m_expression .
    (67) m_expression -> m_expression . addition_operator term
    (81) addition_operator -> . PLUS
    (82) addition_operator -> . MINUS

    LESS            reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    GREATER         reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    EQUALS          reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    NOTEQUAL        reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    GREATERTHAN     reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    LESSTHAN        reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    AND             reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    OR              reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    RBRACK          reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    RPAREN          reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    COMMA           reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    SEMICOLON       reduce using rule 65 (g_expression -> g_expression comparison_operator m_expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84

    addition_operator              shift and go to state 82

state 101

    (67) m_expression -> m_expression addition_operator term .
    (69) term -> term . multiplication_operator factor
    (85) multiplication_operator -> . TIMES
    (86) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    MINUS           reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    LESS            reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    GREATER         reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    EQUALS          reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    NOTEQUAL        reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    GREATERTHAN     reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    LESSTHAN        reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    AND             reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    OR              reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    RBRACK          reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    RPAREN          reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    COMMA           reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    SEMICOLON       reduce using rule 67 (m_expression -> m_expression addition_operator term .)
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87

    multiplication_operator        shift and go to state 85

state 102

    (69) term -> term multiplication_operator factor .

    TIMES           reduce using rule 69 (term -> term multiplication_operator factor .)
    DIVIDE          reduce using rule 69 (term -> term multiplication_operator factor .)
    PLUS            reduce using rule 69 (term -> term multiplication_operator factor .)
    MINUS           reduce using rule 69 (term -> term multiplication_operator factor .)
    LESS            reduce using rule 69 (term -> term multiplication_operator factor .)
    GREATER         reduce using rule 69 (term -> term multiplication_operator factor .)
    EQUALS          reduce using rule 69 (term -> term multiplication_operator factor .)
    NOTEQUAL        reduce using rule 69 (term -> term multiplication_operator factor .)
    GREATERTHAN     reduce using rule 69 (term -> term multiplication_operator factor .)
    LESSTHAN        reduce using rule 69 (term -> term multiplication_operator factor .)
    AND             reduce using rule 69 (term -> term multiplication_operator factor .)
    OR              reduce using rule 69 (term -> term multiplication_operator factor .)
    RBRACK          reduce using rule 69 (term -> term multiplication_operator factor .)
    RPAREN          reduce using rule 69 (term -> term multiplication_operator factor .)
    COMMA           reduce using rule 69 (term -> term multiplication_operator factor .)
    SEMICOLON       reduce using rule 69 (term -> term multiplication_operator factor .)


state 103

    (74) expression_parenthesis -> LPAREN expression RPAREN .

    TIMES           reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESS            reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    AND             reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    OR              reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 74 (expression_parenthesis -> LPAREN expression RPAREN .)


state 104

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements . RBRACE
    (26) statements -> statements . statement
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 131
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

    statement                      shift and go to state 132
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 105

    (27) statements -> statement .

    RBRACE          reduce using rule 27 (statements -> statement .)
    READ            reduce using rule 27 (statements -> statement .)
    DO              reduce using rule 27 (statements -> statement .)
    WHILE           reduce using rule 27 (statements -> statement .)
    IF              reduce using rule 27 (statements -> statement .)
    ID              reduce using rule 27 (statements -> statement .)
    RETURN          reduce using rule 27 (statements -> statement .)
    PRINT           reduce using rule 27 (statements -> statement .)


state 106

    (28) statements -> empty .

    RBRACE          reduce using rule 28 (statements -> empty .)
    READ            reduce using rule 28 (statements -> empty .)
    DO              reduce using rule 28 (statements -> empty .)
    WHILE           reduce using rule 28 (statements -> empty .)
    IF              reduce using rule 28 (statements -> empty .)
    ID              reduce using rule 28 (statements -> empty .)
    RETURN          reduce using rule 28 (statements -> empty .)
    PRINT           reduce using rule 28 (statements -> empty .)


state 107

    (29) statement -> read .

    RBRACE          reduce using rule 29 (statement -> read .)
    READ            reduce using rule 29 (statement -> read .)
    DO              reduce using rule 29 (statement -> read .)
    WHILE           reduce using rule 29 (statement -> read .)
    IF              reduce using rule 29 (statement -> read .)
    ID              reduce using rule 29 (statement -> read .)
    RETURN          reduce using rule 29 (statement -> read .)
    PRINT           reduce using rule 29 (statement -> read .)


state 108

    (30) statement -> do_while .

    RBRACE          reduce using rule 30 (statement -> do_while .)
    READ            reduce using rule 30 (statement -> do_while .)
    DO              reduce using rule 30 (statement -> do_while .)
    WHILE           reduce using rule 30 (statement -> do_while .)
    IF              reduce using rule 30 (statement -> do_while .)
    ID              reduce using rule 30 (statement -> do_while .)
    RETURN          reduce using rule 30 (statement -> do_while .)
    PRINT           reduce using rule 30 (statement -> do_while .)


state 109

    (31) statement -> while .

    RBRACE          reduce using rule 31 (statement -> while .)
    READ            reduce using rule 31 (statement -> while .)
    DO              reduce using rule 31 (statement -> while .)
    WHILE           reduce using rule 31 (statement -> while .)
    IF              reduce using rule 31 (statement -> while .)
    ID              reduce using rule 31 (statement -> while .)
    RETURN          reduce using rule 31 (statement -> while .)
    PRINT           reduce using rule 31 (statement -> while .)


state 110

    (32) statement -> if_else .

    RBRACE          reduce using rule 32 (statement -> if_else .)
    READ            reduce using rule 32 (statement -> if_else .)
    DO              reduce using rule 32 (statement -> if_else .)
    WHILE           reduce using rule 32 (statement -> if_else .)
    IF              reduce using rule 32 (statement -> if_else .)
    ID              reduce using rule 32 (statement -> if_else .)
    RETURN          reduce using rule 32 (statement -> if_else .)
    PRINT           reduce using rule 32 (statement -> if_else .)


state 111

    (33) statement -> invocation .

    RBRACE          reduce using rule 33 (statement -> invocation .)
    READ            reduce using rule 33 (statement -> invocation .)
    DO              reduce using rule 33 (statement -> invocation .)
    WHILE           reduce using rule 33 (statement -> invocation .)
    IF              reduce using rule 33 (statement -> invocation .)
    ID              reduce using rule 33 (statement -> invocation .)
    RETURN          reduce using rule 33 (statement -> invocation .)
    PRINT           reduce using rule 33 (statement -> invocation .)


state 112

    (34) statement -> if .

    RBRACE          reduce using rule 34 (statement -> if .)
    READ            reduce using rule 34 (statement -> if .)
    DO              reduce using rule 34 (statement -> if .)
    WHILE           reduce using rule 34 (statement -> if .)
    IF              reduce using rule 34 (statement -> if .)
    ID              reduce using rule 34 (statement -> if .)
    RETURN          reduce using rule 34 (statement -> if .)
    PRINT           reduce using rule 34 (statement -> if .)


state 113

    (35) statement -> assingation .

    RBRACE          reduce using rule 35 (statement -> assingation .)
    READ            reduce using rule 35 (statement -> assingation .)
    DO              reduce using rule 35 (statement -> assingation .)
    WHILE           reduce using rule 35 (statement -> assingation .)
    IF              reduce using rule 35 (statement -> assingation .)
    ID              reduce using rule 35 (statement -> assingation .)
    RETURN          reduce using rule 35 (statement -> assingation .)
    PRINT           reduce using rule 35 (statement -> assingation .)


state 114

    (36) statement -> return .

    RBRACE          reduce using rule 36 (statement -> return .)
    READ            reduce using rule 36 (statement -> return .)
    DO              reduce using rule 36 (statement -> return .)
    WHILE           reduce using rule 36 (statement -> return .)
    IF              reduce using rule 36 (statement -> return .)
    ID              reduce using rule 36 (statement -> return .)
    RETURN          reduce using rule 36 (statement -> return .)
    PRINT           reduce using rule 36 (statement -> return .)


state 115

    (37) statement -> print .

    RBRACE          reduce using rule 37 (statement -> print .)
    READ            reduce using rule 37 (statement -> print .)
    DO              reduce using rule 37 (statement -> print .)
    WHILE           reduce using rule 37 (statement -> print .)
    IF              reduce using rule 37 (statement -> print .)
    ID              reduce using rule 37 (statement -> print .)
    RETURN          reduce using rule 37 (statement -> print .)
    PRINT           reduce using rule 37 (statement -> print .)


state 116

    (47) read -> READ . LPAREN variable_list RPAREN SEMICOLON

    LPAREN          shift and go to state 133


state 117

    (38) do_while -> DO . breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (40) breadcrumb -> . empty
    (95) empty -> .

    LBRACE          reduce using rule 95 (empty -> .)

    breadcrumb                     shift and go to state 134
    empty                          shift and go to state 135

state 118

    (39) while -> WHILE . breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (40) breadcrumb -> . empty
    (95) empty -> .

    LPAREN          reduce using rule 95 (empty -> .)

    breadcrumb                     shift and go to state 136
    empty                          shift and go to state 135

state 119

    (42) if_else -> IF . LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (41) if -> IF . LPAREN expression RPAREN gotof LBRACE statements RBRACE

    LPAREN          shift and go to state 137


state 120

    (50) invocation -> ID . LPAREN expressions RPAREN SEMICOLON
    (19) variable -> ID .
    (20) variable -> ID . LBRACK expression RBRACK
    (21) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    LPAREN          shift and go to state 69
    ASSIGN          reduce using rule 19 (variable -> ID .)
    LBRACK          shift and go to state 40


state 121

    (59) assingation -> variable . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 138


state 122

    (46) return -> RETURN . expression SEMICOLON
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 139
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 123

    (54) print -> PRINT . LPAREN print_arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 140


state 124

    (25) parameter -> simple_type ID .

    COMMA           reduce using rule 25 (parameter -> simple_type ID .)
    RPAREN          reduce using rule 25 (parameter -> simple_type ID .)


state 125

    (6) function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration . RPAREN var_declarations LBRACE statements RBRACE

    RPAREN          shift and go to state 141


state 126

    (22) parameters -> parameters COMMA . parameter
    (25) parameter -> . simple_type ID
    (87) simple_type -> . INT
    (88) simple_type -> . FLOAT
    (89) simple_type -> . CHAR
    (90) simple_type -> . BOOLEAN

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26

    parameter                      shift and go to state 142
    simple_type                    shift and go to state 90

state 127

    (7) function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration . RPAREN var_declarations LBRACE statements RBRACE

    RPAREN          shift and go to state 143


state 128

    (50) invocation -> ID LPAREN expressions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 144


state 129

    (51) expressions -> expressions COMMA . expression
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 145
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 130

    (21) variable -> ID LBRACK expression RBRACK LBRACK expression . RBRACK

    RBRACK          shift and go to state 146


state 131

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .

    END             reduce using rule 9 (main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .)


state 132

    (26) statements -> statements statement .

    RBRACE          reduce using rule 26 (statements -> statements statement .)
    READ            reduce using rule 26 (statements -> statements statement .)
    DO              reduce using rule 26 (statements -> statements statement .)
    WHILE           reduce using rule 26 (statements -> statements statement .)
    IF              reduce using rule 26 (statements -> statements statement .)
    ID              reduce using rule 26 (statements -> statements statement .)
    RETURN          reduce using rule 26 (statements -> statements statement .)
    PRINT           reduce using rule 26 (statements -> statements statement .)


state 133

    (47) read -> READ LPAREN . variable_list RPAREN SEMICOLON
    (48) variable_list -> . variable
    (49) variable_list -> . variable_list COMMA variable
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 34

    variable_list                  shift and go to state 147
    variable                       shift and go to state 148

state 134

    (38) do_while -> DO breadcrumb . LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON

    LBRACE          shift and go to state 149


state 135

    (40) breadcrumb -> empty .

    LBRACE          reduce using rule 40 (breadcrumb -> empty .)
    LPAREN          reduce using rule 40 (breadcrumb -> empty .)


state 136

    (39) while -> WHILE breadcrumb . LPAREN expression RPAREN gotof LBRACE statements RBRACE

    LPAREN          shift and go to state 150


state 137

    (42) if_else -> IF LPAREN . expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (41) if -> IF LPAREN . expression RPAREN gotof LBRACE statements RBRACE
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 151
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 138

    (59) assingation -> variable ASSIGN . expression SEMICOLON
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    variable                       shift and go to state 57
    expression                     shift and go to state 152
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 139

    (46) return -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 153


state 140

    (54) print -> PRINT LPAREN . print_arguments RPAREN SEMICOLON
    (55) print_arguments -> . print_argument
    (56) print_arguments -> . print_arguments COMMA print_argument
    (57) print_argument -> . CTES
    (58) print_argument -> . expression
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    CTES            shift and go to state 156
    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    print_arguments                shift and go to state 154
    print_argument                 shift and go to state 155
    expression                     shift and go to state 157
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 141

    (6) function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN . var_declarations LBRACE statements RBRACE
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
    (95) empty -> .

    VARIABLE        shift and go to state 10
    LBRACE          reduce using rule 95 (empty -> .)

    var_declarations               shift and go to state 158
    var_declaration                shift and go to state 8
    empty                          shift and go to state 9

state 142

    (22) parameters -> parameters COMMA parameter .

    COMMA           reduce using rule 22 (parameters -> parameters COMMA parameter .)
    RPAREN          reduce using rule 22 (parameters -> parameters COMMA parameter .)


state 143

    (7) function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN . var_declarations LBRACE statements RBRACE
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
    (95) empty -> .

    VARIABLE        shift and go to state 10
    LBRACE          reduce using rule 95 (empty -> .)

    var_declarations               shift and go to state 159
    var_declaration                shift and go to state 8
    empty                          shift and go to state 9

state 144

    (50) invocation -> ID LPAREN expressions RPAREN SEMICOLON .

    TIMES           reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    PLUS            reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    MINUS           reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    LESS            reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    GREATER         reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    EQUALS          reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    GREATERTHAN     reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    AND             reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    OR              reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RBRACK          reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RPAREN          reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    COMMA           reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RBRACE          reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    READ            reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    DO              reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    IF              reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    ID              reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)


state 145

    (51) expressions -> expressions COMMA expression .

    RPAREN          reduce using rule 51 (expressions -> expressions COMMA expression .)
    COMMA           reduce using rule 51 (expressions -> expressions COMMA expression .)


state 146

    (21) variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .

    COMMA           reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    TIMES           reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    PLUS            reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    MINUS           reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESS            reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATER         reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    EQUALS          reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    AND             reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    OR              reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RBRACK          reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RPAREN          reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 21 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)


state 147

    (47) read -> READ LPAREN variable_list . RPAREN SEMICOLON
    (49) variable_list -> variable_list . COMMA variable

    RPAREN          shift and go to state 160
    COMMA           shift and go to state 161


state 148

    (48) variable_list -> variable .

    RPAREN          reduce using rule 48 (variable_list -> variable .)
    COMMA           reduce using rule 48 (variable_list -> variable .)


state 149

    (38) do_while -> DO breadcrumb LBRACE . statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (26) statements -> . statements statement
    (27) statements -> . statement
    (28) statements -> . empty
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (95) empty -> .
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

  ! READ            [ reduce using rule 95 (empty -> .) ]
  ! DO              [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! RETURN          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]

    statements                     shift and go to state 162
    statement                      shift and go to state 105
    empty                          shift and go to state 106
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 150

    (39) while -> WHILE breadcrumb LPAREN . expression RPAREN gotof LBRACE statements RBRACE
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 163
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 151

    (42) if_else -> IF LPAREN expression . RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (41) if -> IF LPAREN expression . RPAREN gotof LBRACE statements RBRACE

    RPAREN          shift and go to state 164


state 152

    (59) assingation -> variable ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 165


state 153

    (46) return -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 46 (return -> RETURN expression SEMICOLON .)
    READ            reduce using rule 46 (return -> RETURN expression SEMICOLON .)
    DO              reduce using rule 46 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 46 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 46 (return -> RETURN expression SEMICOLON .)
    ID              reduce using rule 46 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 46 (return -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 46 (return -> RETURN expression SEMICOLON .)


state 154

    (54) print -> PRINT LPAREN print_arguments . RPAREN SEMICOLON
    (56) print_arguments -> print_arguments . COMMA print_argument

    RPAREN          shift and go to state 166
    COMMA           shift and go to state 167


state 155

    (55) print_arguments -> print_argument .

    RPAREN          reduce using rule 55 (print_arguments -> print_argument .)
    COMMA           reduce using rule 55 (print_arguments -> print_argument .)


state 156

    (57) print_argument -> CTES .

    RPAREN          reduce using rule 57 (print_argument -> CTES .)
    COMMA           reduce using rule 57 (print_argument -> CTES .)


state 157

    (58) print_argument -> expression .

    RPAREN          reduce using rule 58 (print_argument -> expression .)
    COMMA           reduce using rule 58 (print_argument -> expression .)


state 158

    (6) function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 168


state 159

    (7) function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 169


state 160

    (47) read -> READ LPAREN variable_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 170


state 161

    (49) variable_list -> variable_list COMMA . variable
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 34

    variable                       shift and go to state 171

state 162

    (38) do_while -> DO breadcrumb LBRACE statements . RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (26) statements -> statements . statement
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 172
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

    statement                      shift and go to state 132
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 163

    (39) while -> WHILE breadcrumb LPAREN expression . RPAREN gotof LBRACE statements RBRACE

    RPAREN          shift and go to state 173


state 164

    (42) if_else -> IF LPAREN expression RPAREN . gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (41) if -> IF LPAREN expression RPAREN . gotof LBRACE statements RBRACE
    (45) gotof -> . empty
    (95) empty -> .

    LBRACE          reduce using rule 95 (empty -> .)

    gotof                          shift and go to state 174
    empty                          shift and go to state 175

state 165

    (59) assingation -> variable ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 59 (assingation -> variable ASSIGN expression SEMICOLON .)
    READ            reduce using rule 59 (assingation -> variable ASSIGN expression SEMICOLON .)
    DO              reduce using rule 59 (assingation -> variable ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 59 (assingation -> variable ASSIGN expression SEMICOLON .)
    IF              reduce using rule 59 (assingation -> variable ASSIGN expression SEMICOLON .)
    ID              reduce using rule 59 (assingation -> variable ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 59 (assingation -> variable ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 59 (assingation -> variable ASSIGN expression SEMICOLON .)


state 166

    (54) print -> PRINT LPAREN print_arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 176


state 167

    (56) print_arguments -> print_arguments COMMA . print_argument
    (57) print_argument -> . CTES
    (58) print_argument -> . expression
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    CTES            shift and go to state 156
    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    print_argument                 shift and go to state 177
    expression                     shift and go to state 157
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 168

    (6) function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE . statements RBRACE
    (26) statements -> . statements statement
    (27) statements -> . statement
    (28) statements -> . empty
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (95) empty -> .
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

  ! READ            [ reduce using rule 95 (empty -> .) ]
  ! DO              [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! RETURN          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]

    statements                     shift and go to state 178
    statement                      shift and go to state 105
    empty                          shift and go to state 106
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 169

    (7) function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE . statements RBRACE
    (26) statements -> . statements statement
    (27) statements -> . statement
    (28) statements -> . empty
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (95) empty -> .
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

  ! READ            [ reduce using rule 95 (empty -> .) ]
  ! DO              [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! RETURN          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]

    statements                     shift and go to state 179
    statement                      shift and go to state 105
    empty                          shift and go to state 106
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 170

    (47) read -> READ LPAREN variable_list RPAREN SEMICOLON .

    RBRACE          reduce using rule 47 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    READ            reduce using rule 47 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    DO              reduce using rule 47 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    IF              reduce using rule 47 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    ID              reduce using rule 47 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)


state 171

    (49) variable_list -> variable_list COMMA variable .

    RPAREN          reduce using rule 49 (variable_list -> variable_list COMMA variable .)
    COMMA           reduce using rule 49 (variable_list -> variable_list COMMA variable .)


state 172

    (38) do_while -> DO breadcrumb LBRACE statements RBRACE . WHILE LPAREN expression RPAREN gotot SEMICOLON

    WHILE           shift and go to state 180


state 173

    (39) while -> WHILE breadcrumb LPAREN expression RPAREN . gotof LBRACE statements RBRACE
    (45) gotof -> . empty
    (95) empty -> .

    LBRACE          reduce using rule 95 (empty -> .)

    gotof                          shift and go to state 181
    empty                          shift and go to state 175

state 174

    (42) if_else -> IF LPAREN expression RPAREN gotof . LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (41) if -> IF LPAREN expression RPAREN gotof . LBRACE statements RBRACE

    LBRACE          shift and go to state 182


state 175

    (45) gotof -> empty .

    LBRACE          reduce using rule 45 (gotof -> empty .)


state 176

    (54) print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .

    RBRACE          reduce using rule 54 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    READ            reduce using rule 54 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    DO              reduce using rule 54 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    WHILE           reduce using rule 54 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    IF              reduce using rule 54 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    ID              reduce using rule 54 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    RETURN          reduce using rule 54 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    PRINT           reduce using rule 54 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)


state 177

    (56) print_arguments -> print_arguments COMMA print_argument .

    RPAREN          reduce using rule 56 (print_arguments -> print_arguments COMMA print_argument .)
    COMMA           reduce using rule 56 (print_arguments -> print_arguments COMMA print_argument .)


state 178

    (6) function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements . RBRACE
    (26) statements -> statements . statement
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 183
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

    statement                      shift and go to state 132
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 179

    (7) function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements . RBRACE
    (26) statements -> statements . statement
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 184
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

    statement                      shift and go to state 132
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 180

    (38) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE . LPAREN expression RPAREN gotot SEMICOLON

    LPAREN          shift and go to state 185


state 181

    (39) while -> WHILE breadcrumb LPAREN expression RPAREN gotof . LBRACE statements RBRACE

    LBRACE          shift and go to state 186


state 182

    (42) if_else -> IF LPAREN expression RPAREN gotof LBRACE . statements RBRACE ELSE goto LBRACE statements RBRACE
    (41) if -> IF LPAREN expression RPAREN gotof LBRACE . statements RBRACE
    (26) statements -> . statements statement
    (27) statements -> . statement
    (28) statements -> . empty
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (95) empty -> .
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

  ! READ            [ reduce using rule 95 (empty -> .) ]
  ! DO              [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! RETURN          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]

    statements                     shift and go to state 187
    statement                      shift and go to state 105
    empty                          shift and go to state 106
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 183

    (6) function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE .

    MAIN            reduce using rule 6 (function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 6 (function -> FUNCTION simple_type ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE .)


state 184

    (7) function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE .

    MAIN            reduce using rule 7 (function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 7 (function -> FUNCTION VOID ID LPAREN function_scope open_var_declaration parameters close_var_declaration RPAREN var_declarations LBRACE statements RBRACE .)


state 185

    (38) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN . expression RPAREN gotot SEMICOLON
    (60) expression -> . t_expression
    (61) expression -> . NOT t_expression
    (62) t_expression -> . g_expression
    (63) t_expression -> . t_expression boolean_operator g_expression
    (64) g_expression -> . m_expression
    (65) g_expression -> . g_expression comparison_operator m_expression
    (66) m_expression -> . term
    (67) m_expression -> . m_expression addition_operator term
    (68) term -> . factor
    (69) term -> . term multiplication_operator factor
    (70) factor -> . variable
    (71) factor -> . cte
    (72) factor -> . expression_parenthesis
    (73) factor -> . invocation
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (91) cte -> . CTEI
    (92) cte -> . CTEF
    (93) cte -> . CTEC
    (94) cte -> . CTEB
    (74) expression_parenthesis -> . LPAREN expression RPAREN
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    NOT             shift and go to state 52
    ID              shift and go to state 49
    CTEI            shift and go to state 61
    CTEF            shift and go to state 62
    CTEC            shift and go to state 63
    CTEB            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 188
    t_expression                   shift and go to state 51
    g_expression                   shift and go to state 53
    m_expression                   shift and go to state 54
    term                           shift and go to state 55
    factor                         shift and go to state 56
    variable                       shift and go to state 57
    cte                            shift and go to state 58
    expression_parenthesis         shift and go to state 59
    invocation                     shift and go to state 60

state 186

    (39) while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE . statements RBRACE
    (26) statements -> . statements statement
    (27) statements -> . statement
    (28) statements -> . empty
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (95) empty -> .
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

  ! READ            [ reduce using rule 95 (empty -> .) ]
  ! DO              [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! RETURN          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]

    statements                     shift and go to state 189
    statement                      shift and go to state 105
    empty                          shift and go to state 106
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 187

    (42) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements . RBRACE ELSE goto LBRACE statements RBRACE
    (41) if -> IF LPAREN expression RPAREN gotof LBRACE statements . RBRACE
    (26) statements -> statements . statement
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 190
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

    statement                      shift and go to state 132
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 188

    (38) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression . RPAREN gotot SEMICOLON

    RPAREN          shift and go to state 191


state 189

    (39) while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements . RBRACE
    (26) statements -> statements . statement
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 192
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

    statement                      shift and go to state 132
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 190

    (42) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE . ELSE goto LBRACE statements RBRACE
    (41) if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .

    ELSE            shift and go to state 193
    RBRACE          reduce using rule 41 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    READ            reduce using rule 41 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    DO              reduce using rule 41 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    WHILE           reduce using rule 41 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    IF              reduce using rule 41 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    ID              reduce using rule 41 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    RETURN          reduce using rule 41 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    PRINT           reduce using rule 41 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)


state 191

    (38) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN . gotot SEMICOLON
    (43) gotot -> . empty
    (95) empty -> .

    SEMICOLON       reduce using rule 95 (empty -> .)

    gotot                          shift and go to state 194
    empty                          shift and go to state 195

state 192

    (39) while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .

    RBRACE          reduce using rule 39 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    READ            reduce using rule 39 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    DO              reduce using rule 39 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    WHILE           reduce using rule 39 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    IF              reduce using rule 39 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    ID              reduce using rule 39 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    RETURN          reduce using rule 39 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    PRINT           reduce using rule 39 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)


state 193

    (42) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE . goto LBRACE statements RBRACE
    (44) goto -> . empty
    (95) empty -> .

    LBRACE          reduce using rule 95 (empty -> .)

    goto                           shift and go to state 196
    empty                          shift and go to state 197

state 194

    (38) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot . SEMICOLON

    SEMICOLON       shift and go to state 198


state 195

    (43) gotot -> empty .

    SEMICOLON       reduce using rule 43 (gotot -> empty .)


state 196

    (42) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto . LBRACE statements RBRACE

    LBRACE          shift and go to state 199


state 197

    (44) goto -> empty .

    LBRACE          reduce using rule 44 (goto -> empty .)


state 198

    (38) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .

    RBRACE          reduce using rule 38 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    READ            reduce using rule 38 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    DO              reduce using rule 38 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    WHILE           reduce using rule 38 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    IF              reduce using rule 38 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    ID              reduce using rule 38 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    RETURN          reduce using rule 38 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    PRINT           reduce using rule 38 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)


state 199

    (42) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE . statements RBRACE
    (26) statements -> . statements statement
    (27) statements -> . statement
    (28) statements -> . empty
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (95) empty -> .
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

  ! READ            [ reduce using rule 95 (empty -> .) ]
  ! DO              [ reduce using rule 95 (empty -> .) ]
  ! WHILE           [ reduce using rule 95 (empty -> .) ]
  ! IF              [ reduce using rule 95 (empty -> .) ]
  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! RETURN          [ reduce using rule 95 (empty -> .) ]
  ! PRINT           [ reduce using rule 95 (empty -> .) ]

    statements                     shift and go to state 200
    statement                      shift and go to state 105
    empty                          shift and go to state 106
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 200

    (42) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements . RBRACE
    (26) statements -> statements . statement
    (29) statement -> . read
    (30) statement -> . do_while
    (31) statement -> . while
    (32) statement -> . if_else
    (33) statement -> . invocation
    (34) statement -> . if
    (35) statement -> . assingation
    (36) statement -> . return
    (37) statement -> . print
    (47) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (38) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (39) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (42) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (50) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (41) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (59) assingation -> . variable ASSIGN expression SEMICOLON
    (46) return -> . RETURN expression SEMICOLON
    (54) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (19) variable -> . ID
    (20) variable -> . ID LBRACK expression RBRACK
    (21) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 201
    READ            shift and go to state 116
    DO              shift and go to state 117
    WHILE           shift and go to state 118
    IF              shift and go to state 119
    ID              shift and go to state 120
    RETURN          shift and go to state 122
    PRINT           shift and go to state 123

    statement                      shift and go to state 132
    read                           shift and go to state 107
    do_while                       shift and go to state 108
    while                          shift and go to state 109
    if_else                        shift and go to state 110
    invocation                     shift and go to state 111
    if                             shift and go to state 112
    assingation                    shift and go to state 113
    return                         shift and go to state 114
    print                          shift and go to state 115
    variable                       shift and go to state 121

state 201

    (42) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .

    RBRACE          reduce using rule 42 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    READ            reduce using rule 42 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    DO              reduce using rule 42 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    WHILE           reduce using rule 42 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    IF              reduce using rule 42 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    ID              reduce using rule 42 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    RETURN          reduce using rule 42 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    PRINT           reduce using rule 42 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 7 resolved as shift
WARNING: shift/reduce conflict for READ in state 89 resolved as shift
WARNING: shift/reduce conflict for DO in state 89 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 89 resolved as shift
WARNING: shift/reduce conflict for IF in state 89 resolved as shift
WARNING: shift/reduce conflict for ID in state 89 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 89 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 89 resolved as shift
WARNING: shift/reduce conflict for READ in state 149 resolved as shift
WARNING: shift/reduce conflict for DO in state 149 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 149 resolved as shift
WARNING: shift/reduce conflict for IF in state 149 resolved as shift
WARNING: shift/reduce conflict for ID in state 149 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 149 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 149 resolved as shift
WARNING: shift/reduce conflict for READ in state 168 resolved as shift
WARNING: shift/reduce conflict for DO in state 168 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 168 resolved as shift
WARNING: shift/reduce conflict for IF in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 168 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 168 resolved as shift
WARNING: shift/reduce conflict for READ in state 169 resolved as shift
WARNING: shift/reduce conflict for DO in state 169 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 169 resolved as shift
WARNING: shift/reduce conflict for IF in state 169 resolved as shift
WARNING: shift/reduce conflict for ID in state 169 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 169 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 169 resolved as shift
WARNING: shift/reduce conflict for READ in state 182 resolved as shift
WARNING: shift/reduce conflict for DO in state 182 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 182 resolved as shift
WARNING: shift/reduce conflict for IF in state 182 resolved as shift
WARNING: shift/reduce conflict for ID in state 182 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 182 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 182 resolved as shift
WARNING: shift/reduce conflict for READ in state 186 resolved as shift
WARNING: shift/reduce conflict for DO in state 186 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 186 resolved as shift
WARNING: shift/reduce conflict for IF in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 186 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 186 resolved as shift
WARNING: shift/reduce conflict for READ in state 199 resolved as shift
WARNING: shift/reduce conflict for DO in state 199 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 199 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 199 resolved as shift
WARNING: reduce/reduce conflict in state 8 resolved using rule (var_declarations -> var_declaration)
WARNING: rejected rule (empty -> <empty>) in state 8
