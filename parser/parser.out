Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    FALSE
    THEN
    TRUE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END
Rule 2     global_scope -> <empty>
Rule 3     functions -> functions function
Rule 4     functions -> function
Rule 5     functions -> empty
Rule 6     function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
Rule 7     function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
Rule 8     function_scope -> <empty>
Rule 9     main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
Rule 10    main_scope -> <empty>
Rule 11    var_declarations -> var_declaration var_declarations
Rule 12    var_declarations -> var_declaration
Rule 13    var_declarations -> empty
Rule 14    var_declaration -> VARIABLE simple_type variables SEMICOLON
Rule 15    variables -> variable COMMA variables
Rule 16    variables -> variable
Rule 17    variable -> ID
Rule 18    variable -> ID LBRACK expression RBRACK
Rule 19    variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK
Rule 20    parameters -> parameters COMMA parameter
Rule 21    parameters -> parameter
Rule 22    parameters -> empty
Rule 23    parameter -> simple_type ID
Rule 24    statements -> statements statement
Rule 25    statements -> statement
Rule 26    statements -> empty
Rule 27    statement -> assingation
Rule 28    statement -> invocation
Rule 29    statement -> if
Rule 30    statement -> read
Rule 31    statement -> return
Rule 32    statement -> print
Rule 33    print -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 34    print -> PRINT LPAREN CTES RPAREN SEMICOLON
Rule 35    if -> IF LPAREN expression RPAREN LBRACE statements RBRACE
Rule 36    if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 37    return -> RETURN expression SEMICOLON
Rule 38    read -> READ LPAREN variable RPAREN SEMICOLON
Rule 39    assingation -> variable ASSIGN expression SEMICOLON
Rule 40    invocation -> ID LPAREN expressions RPAREN SEMICOLON
Rule 41    expressions -> expressions COMMA expression
Rule 42    expressions -> expression
Rule 43    expressions -> empty
Rule 44    expression -> t_expression
Rule 45    expression -> t_expression ASSIGN t_expression
Rule 46    t_expression -> g_expression
Rule 47    t_expression -> t_expression boolean_operator g_expression
Rule 48    g_expression -> m_expression
Rule 49    g_expression -> g_expression comparison_operator m_expression
Rule 50    m_expression -> term
Rule 51    m_expression -> m_expression addition_operator term
Rule 52    term -> factor
Rule 53    term -> factor multiplication_operator term
Rule 54    factor -> variable
Rule 55    factor -> cte
Rule 56    factor -> LPAREN expression RPAREN
Rule 57    factor -> invocation
Rule 58    comparison_operator -> LESS
Rule 59    comparison_operator -> GREATER
Rule 60    comparison_operator -> EQUALS
Rule 61    comparison_operator -> NOTEQUAL
Rule 62    addition_operator -> PLUS
Rule 63    addition_operator -> MINUS
Rule 64    boolean_operator -> AND
Rule 65    boolean_operator -> OR
Rule 66    multiplication_operator -> TIMES
Rule 67    multiplication_operator -> DIVIDE
Rule 68    simple_type -> INT
Rule 69    simple_type -> FLOAT
Rule 70    simple_type -> CHAR
Rule 71    simple_type -> STRING
Rule 72    simple_type -> BOOLEAN
Rule 73    cte -> CTEI
Rule 74    cte -> CTEF
Rule 75    cte -> CTEC
Rule 76    cte -> CTES
Rule 77    cte -> CTEB
Rule 78    empty -> <empty>

Terminals, with rules where they appear

AND                  : 64
ASSIGN               : 39 45
BOOLEAN              : 72
CHAR                 : 70
COLON                : 
COMMA                : 15 20 41
COMMENT              : 
CTEB                 : 77
CTEC                 : 75
CTEF                 : 74
CTEI                 : 73
CTES                 : 34 76
DIVIDE               : 67
ELSE                 : 36
END                  : 1
EQUALS               : 60
FALSE                : 
FLOAT                : 69
FUNCTION             : 6 7
GREATER              : 59
ID                   : 1 6 7 17 18 19 23 40
IF                   : 35 36
INT                  : 68
LBRACE               : 6 7 9 35 36 36
LBRACK               : 18 19 19
LESS                 : 58
LPAREN               : 6 7 9 33 34 35 36 38 40 56
MAIN                 : 9
MINUS                : 63
NOTEQUAL             : 61
OR                   : 65
PLUS                 : 62
PRINT                : 33 34
PROGRAM              : 1
RBRACE               : 6 7 9 35 36 36
RBRACK               : 18 19 19
READ                 : 38
RETURN               : 37
RPAREN               : 6 7 9 33 34 35 36 38 40 56
SEMICOLON            : 1 14 33 34 37 38 39 40
STRING               : 71
THEN                 : 
TIMES                : 66
TRUE                 : 
VARIABLE             : 14
VOID                 : 7
WHILE                : 
error                : 

Nonterminals, with rules where they appear

addition_operator    : 51
assingation          : 27
boolean_operator     : 47
comparison_operator  : 49
cte                  : 55
empty                : 5 13 22 26 43
expression           : 18 19 19 33 35 36 37 39 41 42 56
expressions          : 40 41
factor               : 52 53
function             : 3 4
function_scope       : 6 7
functions            : 1 3
g_expression         : 46 47 49
global_scope         : 1
if                   : 29
invocation           : 28 57
m_expression         : 48 49 51
main                 : 1
main_scope           : 9
multiplication_operator : 53
parameter            : 20 21
parameters           : 6 7 20
print                : 32
program              : 0
read                 : 30
return               : 31
simple_type          : 6 14 23
statement            : 24 25
statements           : 6 7 9 24 35 36 36
t_expression         : 44 45 45 47
term                 : 50 51 53
var_declaration      : 11 12
var_declarations     : 1 6 7 9 11
variable             : 15 16 38 39 54
variables            : 14 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON global_scope var_declarations functions main END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON global_scope var_declarations functions main END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON global_scope var_declarations functions main END

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . global_scope var_declarations functions main END
    (2) global_scope -> .

    VARIABLE        reduce using rule 2 (global_scope -> .)
    FUNCTION        reduce using rule 2 (global_scope -> .)
    MAIN            reduce using rule 2 (global_scope -> .)

    global_scope                   shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON global_scope . var_declarations functions main END
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (78) empty -> .

    VARIABLE        shift and go to state 9
    FUNCTION        reduce using rule 78 (empty -> .)
    MAIN            reduce using rule 78 (empty -> .)

    var_declarations               shift and go to state 6
    var_declaration                shift and go to state 7
    empty                          shift and go to state 8

state 6

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations . functions main END
    (3) functions -> . functions function
    (4) functions -> . function
    (5) functions -> . empty
    (6) function -> . FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (7) function -> . FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (78) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 78 (empty -> .)

  ! FUNCTION        [ reduce using rule 78 (empty -> .) ]

    functions                      shift and go to state 10
    function                       shift and go to state 11
    empty                          shift and go to state 12

state 7

    (11) var_declarations -> var_declaration . var_declarations
    (12) var_declarations -> var_declaration .
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (78) empty -> .

  ! reduce/reduce conflict for FUNCTION resolved using rule 12 (var_declarations -> var_declaration .)
  ! reduce/reduce conflict for MAIN resolved using rule 12 (var_declarations -> var_declaration .)
  ! reduce/reduce conflict for LBRACE resolved using rule 12 (var_declarations -> var_declaration .)
    FUNCTION        reduce using rule 12 (var_declarations -> var_declaration .)
    MAIN            reduce using rule 12 (var_declarations -> var_declaration .)
    LBRACE          reduce using rule 12 (var_declarations -> var_declaration .)
    VARIABLE        shift and go to state 9

  ! FUNCTION        [ reduce using rule 78 (empty -> .) ]
  ! MAIN            [ reduce using rule 78 (empty -> .) ]
  ! LBRACE          [ reduce using rule 78 (empty -> .) ]

    var_declaration                shift and go to state 7
    var_declarations               shift and go to state 14
    empty                          shift and go to state 8

state 8

    (13) var_declarations -> empty .

    FUNCTION        reduce using rule 13 (var_declarations -> empty .)
    MAIN            reduce using rule 13 (var_declarations -> empty .)
    LBRACE          reduce using rule 13 (var_declarations -> empty .)


state 9

    (14) var_declaration -> VARIABLE . simple_type variables SEMICOLON
    (68) simple_type -> . INT
    (69) simple_type -> . FLOAT
    (70) simple_type -> . CHAR
    (71) simple_type -> . STRING
    (72) simple_type -> . BOOLEAN

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOLEAN         shift and go to state 20

    simple_type                    shift and go to state 15

state 10

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions . main END
    (3) functions -> functions . function
    (9) main -> . MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
    (6) function -> . FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (7) function -> . FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    MAIN            shift and go to state 23
    FUNCTION        shift and go to state 13

    main                           shift and go to state 21
    function                       shift and go to state 22

state 11

    (4) functions -> function .

    MAIN            reduce using rule 4 (functions -> function .)
    FUNCTION        reduce using rule 4 (functions -> function .)


state 12

    (5) functions -> empty .

    MAIN            reduce using rule 5 (functions -> empty .)
    FUNCTION        reduce using rule 5 (functions -> empty .)


state 13

    (6) function -> FUNCTION . simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (7) function -> FUNCTION . VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (68) simple_type -> . INT
    (69) simple_type -> . FLOAT
    (70) simple_type -> . CHAR
    (71) simple_type -> . STRING
    (72) simple_type -> . BOOLEAN

    VOID            shift and go to state 25
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOLEAN         shift and go to state 20

    simple_type                    shift and go to state 24

state 14

    (11) var_declarations -> var_declaration var_declarations .

    FUNCTION        reduce using rule 11 (var_declarations -> var_declaration var_declarations .)
    MAIN            reduce using rule 11 (var_declarations -> var_declaration var_declarations .)
    LBRACE          reduce using rule 11 (var_declarations -> var_declaration var_declarations .)


state 15

    (14) var_declaration -> VARIABLE simple_type . variables SEMICOLON
    (15) variables -> . variable COMMA variables
    (16) variables -> . variable
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 28

    variables                      shift and go to state 26
    variable                       shift and go to state 27

state 16

    (68) simple_type -> INT .

    ID              reduce using rule 68 (simple_type -> INT .)


state 17

    (69) simple_type -> FLOAT .

    ID              reduce using rule 69 (simple_type -> FLOAT .)


state 18

    (70) simple_type -> CHAR .

    ID              reduce using rule 70 (simple_type -> CHAR .)


state 19

    (71) simple_type -> STRING .

    ID              reduce using rule 71 (simple_type -> STRING .)


state 20

    (72) simple_type -> BOOLEAN .

    ID              reduce using rule 72 (simple_type -> BOOLEAN .)


state 21

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main . END

    END             shift and go to state 29


state 22

    (3) functions -> functions function .

    MAIN            reduce using rule 3 (functions -> functions function .)
    FUNCTION        reduce using rule 3 (functions -> functions function .)


state 23

    (9) main -> MAIN . LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 30


state 24

    (6) function -> FUNCTION simple_type . ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    ID              shift and go to state 31


state 25

    (7) function -> FUNCTION VOID . ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    ID              shift and go to state 32


state 26

    (14) var_declaration -> VARIABLE simple_type variables . SEMICOLON

    SEMICOLON       shift and go to state 33


state 27

    (15) variables -> variable . COMMA variables
    (16) variables -> variable .

    COMMA           shift and go to state 34
    SEMICOLON       reduce using rule 16 (variables -> variable .)


state 28

    (17) variable -> ID .
    (18) variable -> ID . LBRACK expression RBRACK
    (19) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    COMMA           reduce using rule 17 (variable -> ID .)
    SEMICOLON       reduce using rule 17 (variable -> ID .)
    RPAREN          reduce using rule 17 (variable -> ID .)
    LBRACK          shift and go to state 35


state 29

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .)


state 30

    (9) main -> MAIN LPAREN . RPAREN main_scope var_declarations LBRACE statements RBRACE

    RPAREN          shift and go to state 36


state 31

    (6) function -> FUNCTION simple_type ID . LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 37


state 32

    (7) function -> FUNCTION VOID ID . LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 38


state 33

    (14) var_declaration -> VARIABLE simple_type variables SEMICOLON .

    VARIABLE        reduce using rule 14 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)
    FUNCTION        reduce using rule 14 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)
    MAIN            reduce using rule 14 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)
    LBRACE          reduce using rule 14 (var_declaration -> VARIABLE simple_type variables SEMICOLON .)


state 34

    (15) variables -> variable COMMA . variables
    (15) variables -> . variable COMMA variables
    (16) variables -> . variable
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 28

    variable                       shift and go to state 27
    variables                      shift and go to state 39

state 35

    (18) variable -> ID LBRACK . expression RBRACK
    (19) variable -> ID LBRACK . expression RBRACK LBRACK expression RBRACK
    (44) expression -> . t_expression
    (45) expression -> . t_expression ASSIGN t_expression
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    expression                     shift and go to state 41
    t_expression                   shift and go to state 42
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 36

    (9) main -> MAIN LPAREN RPAREN . main_scope var_declarations LBRACE statements RBRACE
    (10) main_scope -> .

    VARIABLE        reduce using rule 10 (main_scope -> .)
    LBRACE          reduce using rule 10 (main_scope -> .)

    main_scope                     shift and go to state 56

state 37

    (6) function -> FUNCTION simple_type ID LPAREN . function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (8) function_scope -> .

    INT             reduce using rule 8 (function_scope -> .)
    FLOAT           reduce using rule 8 (function_scope -> .)
    CHAR            reduce using rule 8 (function_scope -> .)
    STRING          reduce using rule 8 (function_scope -> .)
    BOOLEAN         reduce using rule 8 (function_scope -> .)
    RPAREN          reduce using rule 8 (function_scope -> .)
    COMMA           reduce using rule 8 (function_scope -> .)

    function_scope                 shift and go to state 57

state 38

    (7) function -> FUNCTION VOID ID LPAREN . function_scope parameters RPAREN var_declarations LBRACE statements RBRACE
    (8) function_scope -> .

    INT             reduce using rule 8 (function_scope -> .)
    FLOAT           reduce using rule 8 (function_scope -> .)
    CHAR            reduce using rule 8 (function_scope -> .)
    STRING          reduce using rule 8 (function_scope -> .)
    BOOLEAN         reduce using rule 8 (function_scope -> .)
    RPAREN          reduce using rule 8 (function_scope -> .)
    COMMA           reduce using rule 8 (function_scope -> .)

    function_scope                 shift and go to state 58

state 39

    (15) variables -> variable COMMA variables .

    SEMICOLON       reduce using rule 15 (variables -> variable COMMA variables .)


state 40

    (17) variable -> ID .
    (18) variable -> ID . LBRACK expression RBRACK
    (19) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK
    (40) invocation -> ID . LPAREN expressions RPAREN SEMICOLON

    TIMES           reduce using rule 17 (variable -> ID .)
    DIVIDE          reduce using rule 17 (variable -> ID .)
    PLUS            reduce using rule 17 (variable -> ID .)
    MINUS           reduce using rule 17 (variable -> ID .)
    LESS            reduce using rule 17 (variable -> ID .)
    GREATER         reduce using rule 17 (variable -> ID .)
    EQUALS          reduce using rule 17 (variable -> ID .)
    NOTEQUAL        reduce using rule 17 (variable -> ID .)
    ASSIGN          reduce using rule 17 (variable -> ID .)
    AND             reduce using rule 17 (variable -> ID .)
    OR              reduce using rule 17 (variable -> ID .)
    RBRACK          reduce using rule 17 (variable -> ID .)
    RPAREN          reduce using rule 17 (variable -> ID .)
    COMMA           reduce using rule 17 (variable -> ID .)
    SEMICOLON       reduce using rule 17 (variable -> ID .)
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 59


state 41

    (18) variable -> ID LBRACK expression . RBRACK
    (19) variable -> ID LBRACK expression . RBRACK LBRACK expression RBRACK

    RBRACK          shift and go to state 60


state 42

    (44) expression -> t_expression .
    (45) expression -> t_expression . ASSIGN t_expression
    (47) t_expression -> t_expression . boolean_operator g_expression
    (64) boolean_operator -> . AND
    (65) boolean_operator -> . OR

    RBRACK          reduce using rule 44 (expression -> t_expression .)
    RPAREN          reduce using rule 44 (expression -> t_expression .)
    COMMA           reduce using rule 44 (expression -> t_expression .)
    SEMICOLON       reduce using rule 44 (expression -> t_expression .)
    ASSIGN          shift and go to state 61
    AND             shift and go to state 63
    OR              shift and go to state 64

    boolean_operator               shift and go to state 62

state 43

    (46) t_expression -> g_expression .
    (49) g_expression -> g_expression . comparison_operator m_expression
    (58) comparison_operator -> . LESS
    (59) comparison_operator -> . GREATER
    (60) comparison_operator -> . EQUALS
    (61) comparison_operator -> . NOTEQUAL

    ASSIGN          reduce using rule 46 (t_expression -> g_expression .)
    AND             reduce using rule 46 (t_expression -> g_expression .)
    OR              reduce using rule 46 (t_expression -> g_expression .)
    RBRACK          reduce using rule 46 (t_expression -> g_expression .)
    RPAREN          reduce using rule 46 (t_expression -> g_expression .)
    COMMA           reduce using rule 46 (t_expression -> g_expression .)
    SEMICOLON       reduce using rule 46 (t_expression -> g_expression .)
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUAL        shift and go to state 69

    comparison_operator            shift and go to state 65

state 44

    (48) g_expression -> m_expression .
    (51) m_expression -> m_expression . addition_operator term
    (62) addition_operator -> . PLUS
    (63) addition_operator -> . MINUS

    LESS            reduce using rule 48 (g_expression -> m_expression .)
    GREATER         reduce using rule 48 (g_expression -> m_expression .)
    EQUALS          reduce using rule 48 (g_expression -> m_expression .)
    NOTEQUAL        reduce using rule 48 (g_expression -> m_expression .)
    ASSIGN          reduce using rule 48 (g_expression -> m_expression .)
    AND             reduce using rule 48 (g_expression -> m_expression .)
    OR              reduce using rule 48 (g_expression -> m_expression .)
    RBRACK          reduce using rule 48 (g_expression -> m_expression .)
    RPAREN          reduce using rule 48 (g_expression -> m_expression .)
    COMMA           reduce using rule 48 (g_expression -> m_expression .)
    SEMICOLON       reduce using rule 48 (g_expression -> m_expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72

    addition_operator              shift and go to state 70

state 45

    (50) m_expression -> term .

    PLUS            reduce using rule 50 (m_expression -> term .)
    MINUS           reduce using rule 50 (m_expression -> term .)
    LESS            reduce using rule 50 (m_expression -> term .)
    GREATER         reduce using rule 50 (m_expression -> term .)
    EQUALS          reduce using rule 50 (m_expression -> term .)
    NOTEQUAL        reduce using rule 50 (m_expression -> term .)
    ASSIGN          reduce using rule 50 (m_expression -> term .)
    AND             reduce using rule 50 (m_expression -> term .)
    OR              reduce using rule 50 (m_expression -> term .)
    RBRACK          reduce using rule 50 (m_expression -> term .)
    RPAREN          reduce using rule 50 (m_expression -> term .)
    COMMA           reduce using rule 50 (m_expression -> term .)
    SEMICOLON       reduce using rule 50 (m_expression -> term .)


state 46

    (52) term -> factor .
    (53) term -> factor . multiplication_operator term
    (66) multiplication_operator -> . TIMES
    (67) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 52 (term -> factor .)
    MINUS           reduce using rule 52 (term -> factor .)
    LESS            reduce using rule 52 (term -> factor .)
    GREATER         reduce using rule 52 (term -> factor .)
    EQUALS          reduce using rule 52 (term -> factor .)
    NOTEQUAL        reduce using rule 52 (term -> factor .)
    ASSIGN          reduce using rule 52 (term -> factor .)
    AND             reduce using rule 52 (term -> factor .)
    OR              reduce using rule 52 (term -> factor .)
    RBRACK          reduce using rule 52 (term -> factor .)
    RPAREN          reduce using rule 52 (term -> factor .)
    COMMA           reduce using rule 52 (term -> factor .)
    SEMICOLON       reduce using rule 52 (term -> factor .)
    TIMES           shift and go to state 74
    DIVIDE          shift and go to state 75

    multiplication_operator        shift and go to state 73

state 47

    (54) factor -> variable .

    TIMES           reduce using rule 54 (factor -> variable .)
    DIVIDE          reduce using rule 54 (factor -> variable .)
    PLUS            reduce using rule 54 (factor -> variable .)
    MINUS           reduce using rule 54 (factor -> variable .)
    LESS            reduce using rule 54 (factor -> variable .)
    GREATER         reduce using rule 54 (factor -> variable .)
    EQUALS          reduce using rule 54 (factor -> variable .)
    NOTEQUAL        reduce using rule 54 (factor -> variable .)
    ASSIGN          reduce using rule 54 (factor -> variable .)
    AND             reduce using rule 54 (factor -> variable .)
    OR              reduce using rule 54 (factor -> variable .)
    RBRACK          reduce using rule 54 (factor -> variable .)
    RPAREN          reduce using rule 54 (factor -> variable .)
    COMMA           reduce using rule 54 (factor -> variable .)
    SEMICOLON       reduce using rule 54 (factor -> variable .)


state 48

    (55) factor -> cte .

    TIMES           reduce using rule 55 (factor -> cte .)
    DIVIDE          reduce using rule 55 (factor -> cte .)
    PLUS            reduce using rule 55 (factor -> cte .)
    MINUS           reduce using rule 55 (factor -> cte .)
    LESS            reduce using rule 55 (factor -> cte .)
    GREATER         reduce using rule 55 (factor -> cte .)
    EQUALS          reduce using rule 55 (factor -> cte .)
    NOTEQUAL        reduce using rule 55 (factor -> cte .)
    ASSIGN          reduce using rule 55 (factor -> cte .)
    AND             reduce using rule 55 (factor -> cte .)
    OR              reduce using rule 55 (factor -> cte .)
    RBRACK          reduce using rule 55 (factor -> cte .)
    RPAREN          reduce using rule 55 (factor -> cte .)
    COMMA           reduce using rule 55 (factor -> cte .)
    SEMICOLON       reduce using rule 55 (factor -> cte .)


state 49

    (56) factor -> LPAREN . expression RPAREN
    (44) expression -> . t_expression
    (45) expression -> . t_expression ASSIGN t_expression
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    expression                     shift and go to state 76
    t_expression                   shift and go to state 42
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 50

    (57) factor -> invocation .

    TIMES           reduce using rule 57 (factor -> invocation .)
    DIVIDE          reduce using rule 57 (factor -> invocation .)
    PLUS            reduce using rule 57 (factor -> invocation .)
    MINUS           reduce using rule 57 (factor -> invocation .)
    LESS            reduce using rule 57 (factor -> invocation .)
    GREATER         reduce using rule 57 (factor -> invocation .)
    EQUALS          reduce using rule 57 (factor -> invocation .)
    NOTEQUAL        reduce using rule 57 (factor -> invocation .)
    ASSIGN          reduce using rule 57 (factor -> invocation .)
    AND             reduce using rule 57 (factor -> invocation .)
    OR              reduce using rule 57 (factor -> invocation .)
    RBRACK          reduce using rule 57 (factor -> invocation .)
    RPAREN          reduce using rule 57 (factor -> invocation .)
    COMMA           reduce using rule 57 (factor -> invocation .)
    SEMICOLON       reduce using rule 57 (factor -> invocation .)


state 51

    (73) cte -> CTEI .

    TIMES           reduce using rule 73 (cte -> CTEI .)
    DIVIDE          reduce using rule 73 (cte -> CTEI .)
    PLUS            reduce using rule 73 (cte -> CTEI .)
    MINUS           reduce using rule 73 (cte -> CTEI .)
    LESS            reduce using rule 73 (cte -> CTEI .)
    GREATER         reduce using rule 73 (cte -> CTEI .)
    EQUALS          reduce using rule 73 (cte -> CTEI .)
    NOTEQUAL        reduce using rule 73 (cte -> CTEI .)
    ASSIGN          reduce using rule 73 (cte -> CTEI .)
    AND             reduce using rule 73 (cte -> CTEI .)
    OR              reduce using rule 73 (cte -> CTEI .)
    RBRACK          reduce using rule 73 (cte -> CTEI .)
    RPAREN          reduce using rule 73 (cte -> CTEI .)
    COMMA           reduce using rule 73 (cte -> CTEI .)
    SEMICOLON       reduce using rule 73 (cte -> CTEI .)


state 52

    (74) cte -> CTEF .

    TIMES           reduce using rule 74 (cte -> CTEF .)
    DIVIDE          reduce using rule 74 (cte -> CTEF .)
    PLUS            reduce using rule 74 (cte -> CTEF .)
    MINUS           reduce using rule 74 (cte -> CTEF .)
    LESS            reduce using rule 74 (cte -> CTEF .)
    GREATER         reduce using rule 74 (cte -> CTEF .)
    EQUALS          reduce using rule 74 (cte -> CTEF .)
    NOTEQUAL        reduce using rule 74 (cte -> CTEF .)
    ASSIGN          reduce using rule 74 (cte -> CTEF .)
    AND             reduce using rule 74 (cte -> CTEF .)
    OR              reduce using rule 74 (cte -> CTEF .)
    RBRACK          reduce using rule 74 (cte -> CTEF .)
    RPAREN          reduce using rule 74 (cte -> CTEF .)
    COMMA           reduce using rule 74 (cte -> CTEF .)
    SEMICOLON       reduce using rule 74 (cte -> CTEF .)


state 53

    (75) cte -> CTEC .

    TIMES           reduce using rule 75 (cte -> CTEC .)
    DIVIDE          reduce using rule 75 (cte -> CTEC .)
    PLUS            reduce using rule 75 (cte -> CTEC .)
    MINUS           reduce using rule 75 (cte -> CTEC .)
    LESS            reduce using rule 75 (cte -> CTEC .)
    GREATER         reduce using rule 75 (cte -> CTEC .)
    EQUALS          reduce using rule 75 (cte -> CTEC .)
    NOTEQUAL        reduce using rule 75 (cte -> CTEC .)
    ASSIGN          reduce using rule 75 (cte -> CTEC .)
    AND             reduce using rule 75 (cte -> CTEC .)
    OR              reduce using rule 75 (cte -> CTEC .)
    RBRACK          reduce using rule 75 (cte -> CTEC .)
    RPAREN          reduce using rule 75 (cte -> CTEC .)
    COMMA           reduce using rule 75 (cte -> CTEC .)
    SEMICOLON       reduce using rule 75 (cte -> CTEC .)


state 54

    (76) cte -> CTES .

    TIMES           reduce using rule 76 (cte -> CTES .)
    DIVIDE          reduce using rule 76 (cte -> CTES .)
    PLUS            reduce using rule 76 (cte -> CTES .)
    MINUS           reduce using rule 76 (cte -> CTES .)
    LESS            reduce using rule 76 (cte -> CTES .)
    GREATER         reduce using rule 76 (cte -> CTES .)
    EQUALS          reduce using rule 76 (cte -> CTES .)
    NOTEQUAL        reduce using rule 76 (cte -> CTES .)
    ASSIGN          reduce using rule 76 (cte -> CTES .)
    AND             reduce using rule 76 (cte -> CTES .)
    OR              reduce using rule 76 (cte -> CTES .)
    RBRACK          reduce using rule 76 (cte -> CTES .)
    RPAREN          reduce using rule 76 (cte -> CTES .)
    COMMA           reduce using rule 76 (cte -> CTES .)
    SEMICOLON       reduce using rule 76 (cte -> CTES .)


state 55

    (77) cte -> CTEB .

    TIMES           reduce using rule 77 (cte -> CTEB .)
    DIVIDE          reduce using rule 77 (cte -> CTEB .)
    PLUS            reduce using rule 77 (cte -> CTEB .)
    MINUS           reduce using rule 77 (cte -> CTEB .)
    LESS            reduce using rule 77 (cte -> CTEB .)
    GREATER         reduce using rule 77 (cte -> CTEB .)
    EQUALS          reduce using rule 77 (cte -> CTEB .)
    NOTEQUAL        reduce using rule 77 (cte -> CTEB .)
    ASSIGN          reduce using rule 77 (cte -> CTEB .)
    AND             reduce using rule 77 (cte -> CTEB .)
    OR              reduce using rule 77 (cte -> CTEB .)
    RBRACK          reduce using rule 77 (cte -> CTEB .)
    RPAREN          reduce using rule 77 (cte -> CTEB .)
    COMMA           reduce using rule 77 (cte -> CTEB .)
    SEMICOLON       reduce using rule 77 (cte -> CTEB .)


state 56

    (9) main -> MAIN LPAREN RPAREN main_scope . var_declarations LBRACE statements RBRACE
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (78) empty -> .

    VARIABLE        shift and go to state 9
    LBRACE          reduce using rule 78 (empty -> .)

    var_declarations               shift and go to state 77
    var_declaration                shift and go to state 7
    empty                          shift and go to state 8

state 57

    (6) function -> FUNCTION simple_type ID LPAREN function_scope . parameters RPAREN var_declarations LBRACE statements RBRACE
    (20) parameters -> . parameters COMMA parameter
    (21) parameters -> . parameter
    (22) parameters -> . empty
    (23) parameter -> . simple_type ID
    (78) empty -> .
    (68) simple_type -> . INT
    (69) simple_type -> . FLOAT
    (70) simple_type -> . CHAR
    (71) simple_type -> . STRING
    (72) simple_type -> . BOOLEAN

    RPAREN          reduce using rule 78 (empty -> .)
    COMMA           reduce using rule 78 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOLEAN         shift and go to state 20

    simple_type                    shift and go to state 78
    parameters                     shift and go to state 79
    parameter                      shift and go to state 80
    empty                          shift and go to state 81

state 58

    (7) function -> FUNCTION VOID ID LPAREN function_scope . parameters RPAREN var_declarations LBRACE statements RBRACE
    (20) parameters -> . parameters COMMA parameter
    (21) parameters -> . parameter
    (22) parameters -> . empty
    (23) parameter -> . simple_type ID
    (78) empty -> .
    (68) simple_type -> . INT
    (69) simple_type -> . FLOAT
    (70) simple_type -> . CHAR
    (71) simple_type -> . STRING
    (72) simple_type -> . BOOLEAN

    RPAREN          reduce using rule 78 (empty -> .)
    COMMA           reduce using rule 78 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOLEAN         shift and go to state 20

    parameters                     shift and go to state 82
    parameter                      shift and go to state 80
    empty                          shift and go to state 81
    simple_type                    shift and go to state 78

state 59

    (40) invocation -> ID LPAREN . expressions RPAREN SEMICOLON
    (41) expressions -> . expressions COMMA expression
    (42) expressions -> . expression
    (43) expressions -> . empty
    (44) expression -> . t_expression
    (45) expression -> . t_expression ASSIGN t_expression
    (78) empty -> .
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    RPAREN          reduce using rule 78 (empty -> .)
    COMMA           reduce using rule 78 (empty -> .)
    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    expressions                    shift and go to state 83
    expression                     shift and go to state 84
    empty                          shift and go to state 85
    t_expression                   shift and go to state 42
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 60

    (18) variable -> ID LBRACK expression RBRACK .
    (19) variable -> ID LBRACK expression RBRACK . LBRACK expression RBRACK

    COMMA           reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    TIMES           reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    PLUS            reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    MINUS           reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    LESS            reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    GREATER         reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    EQUALS          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    AND             reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    OR              reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    RBRACK          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    RPAREN          reduce using rule 18 (variable -> ID LBRACK expression RBRACK .)
    LBRACK          shift and go to state 86


state 61

    (45) expression -> t_expression ASSIGN . t_expression
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    t_expression                   shift and go to state 87
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 62

    (47) t_expression -> t_expression boolean_operator . g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    g_expression                   shift and go to state 88
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 63

    (64) boolean_operator -> AND .

    LPAREN          reduce using rule 64 (boolean_operator -> AND .)
    ID              reduce using rule 64 (boolean_operator -> AND .)
    CTEI            reduce using rule 64 (boolean_operator -> AND .)
    CTEF            reduce using rule 64 (boolean_operator -> AND .)
    CTEC            reduce using rule 64 (boolean_operator -> AND .)
    CTES            reduce using rule 64 (boolean_operator -> AND .)
    CTEB            reduce using rule 64 (boolean_operator -> AND .)


state 64

    (65) boolean_operator -> OR .

    LPAREN          reduce using rule 65 (boolean_operator -> OR .)
    ID              reduce using rule 65 (boolean_operator -> OR .)
    CTEI            reduce using rule 65 (boolean_operator -> OR .)
    CTEF            reduce using rule 65 (boolean_operator -> OR .)
    CTEC            reduce using rule 65 (boolean_operator -> OR .)
    CTES            reduce using rule 65 (boolean_operator -> OR .)
    CTEB            reduce using rule 65 (boolean_operator -> OR .)


state 65

    (49) g_expression -> g_expression comparison_operator . m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    m_expression                   shift and go to state 89
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 66

    (58) comparison_operator -> LESS .

    LPAREN          reduce using rule 58 (comparison_operator -> LESS .)
    ID              reduce using rule 58 (comparison_operator -> LESS .)
    CTEI            reduce using rule 58 (comparison_operator -> LESS .)
    CTEF            reduce using rule 58 (comparison_operator -> LESS .)
    CTEC            reduce using rule 58 (comparison_operator -> LESS .)
    CTES            reduce using rule 58 (comparison_operator -> LESS .)
    CTEB            reduce using rule 58 (comparison_operator -> LESS .)


state 67

    (59) comparison_operator -> GREATER .

    LPAREN          reduce using rule 59 (comparison_operator -> GREATER .)
    ID              reduce using rule 59 (comparison_operator -> GREATER .)
    CTEI            reduce using rule 59 (comparison_operator -> GREATER .)
    CTEF            reduce using rule 59 (comparison_operator -> GREATER .)
    CTEC            reduce using rule 59 (comparison_operator -> GREATER .)
    CTES            reduce using rule 59 (comparison_operator -> GREATER .)
    CTEB            reduce using rule 59 (comparison_operator -> GREATER .)


state 68

    (60) comparison_operator -> EQUALS .

    LPAREN          reduce using rule 60 (comparison_operator -> EQUALS .)
    ID              reduce using rule 60 (comparison_operator -> EQUALS .)
    CTEI            reduce using rule 60 (comparison_operator -> EQUALS .)
    CTEF            reduce using rule 60 (comparison_operator -> EQUALS .)
    CTEC            reduce using rule 60 (comparison_operator -> EQUALS .)
    CTES            reduce using rule 60 (comparison_operator -> EQUALS .)
    CTEB            reduce using rule 60 (comparison_operator -> EQUALS .)


state 69

    (61) comparison_operator -> NOTEQUAL .

    LPAREN          reduce using rule 61 (comparison_operator -> NOTEQUAL .)
    ID              reduce using rule 61 (comparison_operator -> NOTEQUAL .)
    CTEI            reduce using rule 61 (comparison_operator -> NOTEQUAL .)
    CTEF            reduce using rule 61 (comparison_operator -> NOTEQUAL .)
    CTEC            reduce using rule 61 (comparison_operator -> NOTEQUAL .)
    CTES            reduce using rule 61 (comparison_operator -> NOTEQUAL .)
    CTEB            reduce using rule 61 (comparison_operator -> NOTEQUAL .)


state 70

    (51) m_expression -> m_expression addition_operator . term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    term                           shift and go to state 90
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 71

    (62) addition_operator -> PLUS .

    LPAREN          reduce using rule 62 (addition_operator -> PLUS .)
    ID              reduce using rule 62 (addition_operator -> PLUS .)
    CTEI            reduce using rule 62 (addition_operator -> PLUS .)
    CTEF            reduce using rule 62 (addition_operator -> PLUS .)
    CTEC            reduce using rule 62 (addition_operator -> PLUS .)
    CTES            reduce using rule 62 (addition_operator -> PLUS .)
    CTEB            reduce using rule 62 (addition_operator -> PLUS .)


state 72

    (63) addition_operator -> MINUS .

    LPAREN          reduce using rule 63 (addition_operator -> MINUS .)
    ID              reduce using rule 63 (addition_operator -> MINUS .)
    CTEI            reduce using rule 63 (addition_operator -> MINUS .)
    CTEF            reduce using rule 63 (addition_operator -> MINUS .)
    CTEC            reduce using rule 63 (addition_operator -> MINUS .)
    CTES            reduce using rule 63 (addition_operator -> MINUS .)
    CTEB            reduce using rule 63 (addition_operator -> MINUS .)


state 73

    (53) term -> factor multiplication_operator . term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    factor                         shift and go to state 46
    term                           shift and go to state 91
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 74

    (66) multiplication_operator -> TIMES .

    LPAREN          reduce using rule 66 (multiplication_operator -> TIMES .)
    ID              reduce using rule 66 (multiplication_operator -> TIMES .)
    CTEI            reduce using rule 66 (multiplication_operator -> TIMES .)
    CTEF            reduce using rule 66 (multiplication_operator -> TIMES .)
    CTEC            reduce using rule 66 (multiplication_operator -> TIMES .)
    CTES            reduce using rule 66 (multiplication_operator -> TIMES .)
    CTEB            reduce using rule 66 (multiplication_operator -> TIMES .)


state 75

    (67) multiplication_operator -> DIVIDE .

    LPAREN          reduce using rule 67 (multiplication_operator -> DIVIDE .)
    ID              reduce using rule 67 (multiplication_operator -> DIVIDE .)
    CTEI            reduce using rule 67 (multiplication_operator -> DIVIDE .)
    CTEF            reduce using rule 67 (multiplication_operator -> DIVIDE .)
    CTEC            reduce using rule 67 (multiplication_operator -> DIVIDE .)
    CTES            reduce using rule 67 (multiplication_operator -> DIVIDE .)
    CTEB            reduce using rule 67 (multiplication_operator -> DIVIDE .)


state 76

    (56) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 92


state 77

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 93


state 78

    (23) parameter -> simple_type . ID

    ID              shift and go to state 94


state 79

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters . RPAREN var_declarations LBRACE statements RBRACE
    (20) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 95
    COMMA           shift and go to state 96


state 80

    (21) parameters -> parameter .

    RPAREN          reduce using rule 21 (parameters -> parameter .)
    COMMA           reduce using rule 21 (parameters -> parameter .)


state 81

    (22) parameters -> empty .

    RPAREN          reduce using rule 22 (parameters -> empty .)
    COMMA           reduce using rule 22 (parameters -> empty .)


state 82

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters . RPAREN var_declarations LBRACE statements RBRACE
    (20) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 97
    COMMA           shift and go to state 96


state 83

    (40) invocation -> ID LPAREN expressions . RPAREN SEMICOLON
    (41) expressions -> expressions . COMMA expression

    RPAREN          shift and go to state 98
    COMMA           shift and go to state 99


state 84

    (42) expressions -> expression .

    RPAREN          reduce using rule 42 (expressions -> expression .)
    COMMA           reduce using rule 42 (expressions -> expression .)


state 85

    (43) expressions -> empty .

    RPAREN          reduce using rule 43 (expressions -> empty .)
    COMMA           reduce using rule 43 (expressions -> empty .)


state 86

    (19) variable -> ID LBRACK expression RBRACK LBRACK . expression RBRACK
    (44) expression -> . t_expression
    (45) expression -> . t_expression ASSIGN t_expression
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    expression                     shift and go to state 100
    t_expression                   shift and go to state 42
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 87

    (45) expression -> t_expression ASSIGN t_expression .
    (47) t_expression -> t_expression . boolean_operator g_expression
    (64) boolean_operator -> . AND
    (65) boolean_operator -> . OR

    RBRACK          reduce using rule 45 (expression -> t_expression ASSIGN t_expression .)
    RPAREN          reduce using rule 45 (expression -> t_expression ASSIGN t_expression .)
    COMMA           reduce using rule 45 (expression -> t_expression ASSIGN t_expression .)
    SEMICOLON       reduce using rule 45 (expression -> t_expression ASSIGN t_expression .)
    AND             shift and go to state 63
    OR              shift and go to state 64

    boolean_operator               shift and go to state 62

state 88

    (47) t_expression -> t_expression boolean_operator g_expression .
    (49) g_expression -> g_expression . comparison_operator m_expression
    (58) comparison_operator -> . LESS
    (59) comparison_operator -> . GREATER
    (60) comparison_operator -> . EQUALS
    (61) comparison_operator -> . NOTEQUAL

    ASSIGN          reduce using rule 47 (t_expression -> t_expression boolean_operator g_expression .)
    AND             reduce using rule 47 (t_expression -> t_expression boolean_operator g_expression .)
    OR              reduce using rule 47 (t_expression -> t_expression boolean_operator g_expression .)
    RBRACK          reduce using rule 47 (t_expression -> t_expression boolean_operator g_expression .)
    RPAREN          reduce using rule 47 (t_expression -> t_expression boolean_operator g_expression .)
    COMMA           reduce using rule 47 (t_expression -> t_expression boolean_operator g_expression .)
    SEMICOLON       reduce using rule 47 (t_expression -> t_expression boolean_operator g_expression .)
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUAL        shift and go to state 69

    comparison_operator            shift and go to state 65

state 89

    (49) g_expression -> g_expression comparison_operator m_expression .
    (51) m_expression -> m_expression . addition_operator term
    (62) addition_operator -> . PLUS
    (63) addition_operator -> . MINUS

    LESS            reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    GREATER         reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    EQUALS          reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    NOTEQUAL        reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    ASSIGN          reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    AND             reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    OR              reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    RBRACK          reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    RPAREN          reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    COMMA           reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    SEMICOLON       reduce using rule 49 (g_expression -> g_expression comparison_operator m_expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72

    addition_operator              shift and go to state 70

state 90

    (51) m_expression -> m_expression addition_operator term .

    PLUS            reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    MINUS           reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    LESS            reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    GREATER         reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    EQUALS          reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    NOTEQUAL        reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    ASSIGN          reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    AND             reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    OR              reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    RBRACK          reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    RPAREN          reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    COMMA           reduce using rule 51 (m_expression -> m_expression addition_operator term .)
    SEMICOLON       reduce using rule 51 (m_expression -> m_expression addition_operator term .)


state 91

    (53) term -> factor multiplication_operator term .

    PLUS            reduce using rule 53 (term -> factor multiplication_operator term .)
    MINUS           reduce using rule 53 (term -> factor multiplication_operator term .)
    LESS            reduce using rule 53 (term -> factor multiplication_operator term .)
    GREATER         reduce using rule 53 (term -> factor multiplication_operator term .)
    EQUALS          reduce using rule 53 (term -> factor multiplication_operator term .)
    NOTEQUAL        reduce using rule 53 (term -> factor multiplication_operator term .)
    ASSIGN          reduce using rule 53 (term -> factor multiplication_operator term .)
    AND             reduce using rule 53 (term -> factor multiplication_operator term .)
    OR              reduce using rule 53 (term -> factor multiplication_operator term .)
    RBRACK          reduce using rule 53 (term -> factor multiplication_operator term .)
    RPAREN          reduce using rule 53 (term -> factor multiplication_operator term .)
    COMMA           reduce using rule 53 (term -> factor multiplication_operator term .)
    SEMICOLON       reduce using rule 53 (term -> factor multiplication_operator term .)


state 92

    (56) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 56 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 56 (factor -> LPAREN expression RPAREN .)


state 93

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE . statements RBRACE
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (78) empty -> .
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 78 (empty -> .)
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

  ! ID              [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! READ            [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]

    statements                     shift and go to state 101
    statement                      shift and go to state 102
    empty                          shift and go to state 103
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 94

    (23) parameter -> simple_type ID .

    RPAREN          reduce using rule 23 (parameter -> simple_type ID .)
    COMMA           reduce using rule 23 (parameter -> simple_type ID .)


state 95

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN . var_declarations LBRACE statements RBRACE
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (78) empty -> .

    VARIABLE        shift and go to state 9
    LBRACE          reduce using rule 78 (empty -> .)

    var_declarations               shift and go to state 116
    var_declaration                shift and go to state 7
    empty                          shift and go to state 8

state 96

    (20) parameters -> parameters COMMA . parameter
    (23) parameter -> . simple_type ID
    (68) simple_type -> . INT
    (69) simple_type -> . FLOAT
    (70) simple_type -> . CHAR
    (71) simple_type -> . STRING
    (72) simple_type -> . BOOLEAN

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOLEAN         shift and go to state 20

    parameter                      shift and go to state 117
    simple_type                    shift and go to state 78

state 97

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN . var_declarations LBRACE statements RBRACE
    (11) var_declarations -> . var_declaration var_declarations
    (12) var_declarations -> . var_declaration
    (13) var_declarations -> . empty
    (14) var_declaration -> . VARIABLE simple_type variables SEMICOLON
    (78) empty -> .

    VARIABLE        shift and go to state 9
    LBRACE          reduce using rule 78 (empty -> .)

    var_declarations               shift and go to state 118
    var_declaration                shift and go to state 7
    empty                          shift and go to state 8

state 98

    (40) invocation -> ID LPAREN expressions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 119


state 99

    (41) expressions -> expressions COMMA . expression
    (44) expression -> . t_expression
    (45) expression -> . t_expression ASSIGN t_expression
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    expression                     shift and go to state 120
    t_expression                   shift and go to state 42
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 100

    (19) variable -> ID LBRACK expression RBRACK LBRACK expression . RBRACK

    RBRACK          shift and go to state 121


state 101

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements . RBRACE
    (24) statements -> statements . statement
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 122
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

    statement                      shift and go to state 123
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 102

    (25) statements -> statement .

    RBRACE          reduce using rule 25 (statements -> statement .)
    ID              reduce using rule 25 (statements -> statement .)
    IF              reduce using rule 25 (statements -> statement .)
    READ            reduce using rule 25 (statements -> statement .)
    RETURN          reduce using rule 25 (statements -> statement .)
    PRINT           reduce using rule 25 (statements -> statement .)


state 103

    (26) statements -> empty .

    RBRACE          reduce using rule 26 (statements -> empty .)
    ID              reduce using rule 26 (statements -> empty .)
    IF              reduce using rule 26 (statements -> empty .)
    READ            reduce using rule 26 (statements -> empty .)
    RETURN          reduce using rule 26 (statements -> empty .)
    PRINT           reduce using rule 26 (statements -> empty .)


state 104

    (27) statement -> assingation .

    RBRACE          reduce using rule 27 (statement -> assingation .)
    ID              reduce using rule 27 (statement -> assingation .)
    IF              reduce using rule 27 (statement -> assingation .)
    READ            reduce using rule 27 (statement -> assingation .)
    RETURN          reduce using rule 27 (statement -> assingation .)
    PRINT           reduce using rule 27 (statement -> assingation .)


state 105

    (28) statement -> invocation .

    RBRACE          reduce using rule 28 (statement -> invocation .)
    ID              reduce using rule 28 (statement -> invocation .)
    IF              reduce using rule 28 (statement -> invocation .)
    READ            reduce using rule 28 (statement -> invocation .)
    RETURN          reduce using rule 28 (statement -> invocation .)
    PRINT           reduce using rule 28 (statement -> invocation .)


state 106

    (29) statement -> if .

    RBRACE          reduce using rule 29 (statement -> if .)
    ID              reduce using rule 29 (statement -> if .)
    IF              reduce using rule 29 (statement -> if .)
    READ            reduce using rule 29 (statement -> if .)
    RETURN          reduce using rule 29 (statement -> if .)
    PRINT           reduce using rule 29 (statement -> if .)


state 107

    (30) statement -> read .

    RBRACE          reduce using rule 30 (statement -> read .)
    ID              reduce using rule 30 (statement -> read .)
    IF              reduce using rule 30 (statement -> read .)
    READ            reduce using rule 30 (statement -> read .)
    RETURN          reduce using rule 30 (statement -> read .)
    PRINT           reduce using rule 30 (statement -> read .)


state 108

    (31) statement -> return .

    RBRACE          reduce using rule 31 (statement -> return .)
    ID              reduce using rule 31 (statement -> return .)
    IF              reduce using rule 31 (statement -> return .)
    READ            reduce using rule 31 (statement -> return .)
    RETURN          reduce using rule 31 (statement -> return .)
    PRINT           reduce using rule 31 (statement -> return .)


state 109

    (32) statement -> print .

    RBRACE          reduce using rule 32 (statement -> print .)
    ID              reduce using rule 32 (statement -> print .)
    IF              reduce using rule 32 (statement -> print .)
    READ            reduce using rule 32 (statement -> print .)
    RETURN          reduce using rule 32 (statement -> print .)
    PRINT           reduce using rule 32 (statement -> print .)


state 110

    (39) assingation -> variable . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 124


state 111

    (40) invocation -> ID . LPAREN expressions RPAREN SEMICOLON
    (17) variable -> ID .
    (18) variable -> ID . LBRACK expression RBRACK
    (19) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    LPAREN          shift and go to state 59
    ASSIGN          reduce using rule 17 (variable -> ID .)
    LBRACK          shift and go to state 35


state 112

    (35) if -> IF . LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> IF . LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 125


state 113

    (38) read -> READ . LPAREN variable RPAREN SEMICOLON

    LPAREN          shift and go to state 126


state 114

    (37) return -> RETURN . expression SEMICOLON
    (44) expression -> . t_expression
    (45) expression -> . t_expression ASSIGN t_expression
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    expression                     shift and go to state 127
    t_expression                   shift and go to state 42
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 115

    (33) print -> PRINT . LPAREN expression RPAREN SEMICOLON
    (34) print -> PRINT . LPAREN CTES RPAREN SEMICOLON

    LPAREN          shift and go to state 128


state 116

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 129


state 117

    (20) parameters -> parameters COMMA parameter .

    RPAREN          reduce using rule 20 (parameters -> parameters COMMA parameter .)
    COMMA           reduce using rule 20 (parameters -> parameters COMMA parameter .)


state 118

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 130


state 119

    (40) invocation -> ID LPAREN expressions RPAREN SEMICOLON .

    TIMES           reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    PLUS            reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    MINUS           reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    LESS            reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    GREATER         reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    EQUALS          reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    ASSIGN          reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    AND             reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    OR              reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RBRACK          reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RPAREN          reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    COMMA           reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RBRACE          reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    ID              reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    IF              reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    READ            reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    RETURN          reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)
    PRINT           reduce using rule 40 (invocation -> ID LPAREN expressions RPAREN SEMICOLON .)


state 120

    (41) expressions -> expressions COMMA expression .

    RPAREN          reduce using rule 41 (expressions -> expressions COMMA expression .)
    COMMA           reduce using rule 41 (expressions -> expressions COMMA expression .)


state 121

    (19) variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .

    COMMA           reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    TIMES           reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    PLUS            reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    MINUS           reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESS            reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATER         reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    EQUALS          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    AND             reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    OR              reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RBRACK          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RPAREN          reduce using rule 19 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)


state 122

    (9) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .

    END             reduce using rule 9 (main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .)


state 123

    (24) statements -> statements statement .

    RBRACE          reduce using rule 24 (statements -> statements statement .)
    ID              reduce using rule 24 (statements -> statements statement .)
    IF              reduce using rule 24 (statements -> statements statement .)
    READ            reduce using rule 24 (statements -> statements statement .)
    RETURN          reduce using rule 24 (statements -> statements statement .)
    PRINT           reduce using rule 24 (statements -> statements statement .)


state 124

    (39) assingation -> variable ASSIGN . expression SEMICOLON
    (44) expression -> . t_expression
    (45) expression -> . t_expression ASSIGN t_expression
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    variable                       shift and go to state 47
    expression                     shift and go to state 131
    t_expression                   shift and go to state 42
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 125

    (35) if -> IF LPAREN . expression RPAREN LBRACE statements RBRACE
    (36) if -> IF LPAREN . expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (44) expression -> . t_expression
    (45) expression -> . t_expression ASSIGN t_expression
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTES            shift and go to state 54
    CTEB            shift and go to state 55

    expression                     shift and go to state 132
    t_expression                   shift and go to state 42
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 126

    (38) read -> READ LPAREN . variable RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 28

    variable                       shift and go to state 133

state 127

    (37) return -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 134


state 128

    (33) print -> PRINT LPAREN . expression RPAREN SEMICOLON
    (34) print -> PRINT LPAREN . CTES RPAREN SEMICOLON
    (44) expression -> . t_expression
    (45) expression -> . t_expression ASSIGN t_expression
    (46) t_expression -> . g_expression
    (47) t_expression -> . t_expression boolean_operator g_expression
    (48) g_expression -> . m_expression
    (49) g_expression -> . g_expression comparison_operator m_expression
    (50) m_expression -> . term
    (51) m_expression -> . m_expression addition_operator term
    (52) term -> . factor
    (53) term -> . factor multiplication_operator term
    (54) factor -> . variable
    (55) factor -> . cte
    (56) factor -> . LPAREN expression RPAREN
    (57) factor -> . invocation
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (73) cte -> . CTEI
    (74) cte -> . CTEF
    (75) cte -> . CTEC
    (76) cte -> . CTES
    (77) cte -> . CTEB
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON

    CTES            shift and go to state 136
    LPAREN          shift and go to state 49
    ID              shift and go to state 40
    CTEI            shift and go to state 51
    CTEF            shift and go to state 52
    CTEC            shift and go to state 53
    CTEB            shift and go to state 55

    expression                     shift and go to state 135
    t_expression                   shift and go to state 42
    g_expression                   shift and go to state 43
    m_expression                   shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 46
    variable                       shift and go to state 47
    cte                            shift and go to state 48
    invocation                     shift and go to state 50

state 129

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE . statements RBRACE
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (78) empty -> .
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 78 (empty -> .)
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

  ! ID              [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! READ            [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]

    statements                     shift and go to state 137
    statement                      shift and go to state 102
    empty                          shift and go to state 103
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 130

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE . statements RBRACE
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (78) empty -> .
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 78 (empty -> .)
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

  ! ID              [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! READ            [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]

    statements                     shift and go to state 138
    statement                      shift and go to state 102
    empty                          shift and go to state 103
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 131

    (39) assingation -> variable ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 139


state 132

    (35) if -> IF LPAREN expression . RPAREN LBRACE statements RBRACE
    (36) if -> IF LPAREN expression . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 140


state 133

    (38) read -> READ LPAREN variable . RPAREN SEMICOLON

    RPAREN          shift and go to state 141


state 134

    (37) return -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 37 (return -> RETURN expression SEMICOLON .)
    ID              reduce using rule 37 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 37 (return -> RETURN expression SEMICOLON .)
    READ            reduce using rule 37 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 37 (return -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 37 (return -> RETURN expression SEMICOLON .)


state 135

    (33) print -> PRINT LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 142


state 136

    (34) print -> PRINT LPAREN CTES . RPAREN SEMICOLON
    (76) cte -> CTES .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 143
    TIMES           reduce using rule 76 (cte -> CTES .)
    DIVIDE          reduce using rule 76 (cte -> CTES .)
    PLUS            reduce using rule 76 (cte -> CTES .)
    MINUS           reduce using rule 76 (cte -> CTES .)
    LESS            reduce using rule 76 (cte -> CTES .)
    GREATER         reduce using rule 76 (cte -> CTES .)
    EQUALS          reduce using rule 76 (cte -> CTES .)
    NOTEQUAL        reduce using rule 76 (cte -> CTES .)
    ASSIGN          reduce using rule 76 (cte -> CTES .)
    AND             reduce using rule 76 (cte -> CTES .)
    OR              reduce using rule 76 (cte -> CTES .)

  ! RPAREN          [ reduce using rule 76 (cte -> CTES .) ]


state 137

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements . RBRACE
    (24) statements -> statements . statement
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 144
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

    statement                      shift and go to state 123
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 138

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements . RBRACE
    (24) statements -> statements . statement
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 145
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

    statement                      shift and go to state 123
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 139

    (39) assingation -> variable ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 39 (assingation -> variable ASSIGN expression SEMICOLON .)
    ID              reduce using rule 39 (assingation -> variable ASSIGN expression SEMICOLON .)
    IF              reduce using rule 39 (assingation -> variable ASSIGN expression SEMICOLON .)
    READ            reduce using rule 39 (assingation -> variable ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 39 (assingation -> variable ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 39 (assingation -> variable ASSIGN expression SEMICOLON .)


state 140

    (35) if -> IF LPAREN expression RPAREN . LBRACE statements RBRACE
    (36) if -> IF LPAREN expression RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 146


state 141

    (38) read -> READ LPAREN variable RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 147


state 142

    (33) print -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 148


state 143

    (34) print -> PRINT LPAREN CTES RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 149


state 144

    (6) function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .

    MAIN            reduce using rule 6 (function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 6 (function -> FUNCTION simple_type ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .)


state 145

    (7) function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .

    MAIN            reduce using rule 7 (function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 7 (function -> FUNCTION VOID ID LPAREN function_scope parameters RPAREN var_declarations LBRACE statements RBRACE .)


state 146

    (35) if -> IF LPAREN expression RPAREN LBRACE . statements RBRACE
    (36) if -> IF LPAREN expression RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (78) empty -> .
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 78 (empty -> .)
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

  ! ID              [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! READ            [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]

    statements                     shift and go to state 150
    statement                      shift and go to state 102
    empty                          shift and go to state 103
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 147

    (38) read -> READ LPAREN variable RPAREN SEMICOLON .

    RBRACE          reduce using rule 38 (read -> READ LPAREN variable RPAREN SEMICOLON .)
    ID              reduce using rule 38 (read -> READ LPAREN variable RPAREN SEMICOLON .)
    IF              reduce using rule 38 (read -> READ LPAREN variable RPAREN SEMICOLON .)
    READ            reduce using rule 38 (read -> READ LPAREN variable RPAREN SEMICOLON .)
    RETURN          reduce using rule 38 (read -> READ LPAREN variable RPAREN SEMICOLON .)
    PRINT           reduce using rule 38 (read -> READ LPAREN variable RPAREN SEMICOLON .)


state 148

    (33) print -> PRINT LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 33 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 33 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 33 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    READ            reduce using rule 33 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 33 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 33 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 149

    (34) print -> PRINT LPAREN CTES RPAREN SEMICOLON .

    RBRACE          reduce using rule 34 (print -> PRINT LPAREN CTES RPAREN SEMICOLON .)
    ID              reduce using rule 34 (print -> PRINT LPAREN CTES RPAREN SEMICOLON .)
    IF              reduce using rule 34 (print -> PRINT LPAREN CTES RPAREN SEMICOLON .)
    READ            reduce using rule 34 (print -> PRINT LPAREN CTES RPAREN SEMICOLON .)
    RETURN          reduce using rule 34 (print -> PRINT LPAREN CTES RPAREN SEMICOLON .)
    PRINT           reduce using rule 34 (print -> PRINT LPAREN CTES RPAREN SEMICOLON .)


state 150

    (35) if -> IF LPAREN expression RPAREN LBRACE statements . RBRACE
    (36) if -> IF LPAREN expression RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (24) statements -> statements . statement
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 151
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

    statement                      shift and go to state 123
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 151

    (35) if -> IF LPAREN expression RPAREN LBRACE statements RBRACE .
    (36) if -> IF LPAREN expression RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    RBRACE          reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    READ            reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 35 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 152


state 152

    (36) if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 153


state 153

    (36) if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (24) statements -> . statements statement
    (25) statements -> . statement
    (26) statements -> . empty
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (78) empty -> .
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 78 (empty -> .)
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

  ! ID              [ reduce using rule 78 (empty -> .) ]
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! READ            [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! PRINT           [ reduce using rule 78 (empty -> .) ]

    statements                     shift and go to state 154
    statement                      shift and go to state 102
    empty                          shift and go to state 103
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 154

    (36) if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (24) statements -> statements . statement
    (27) statement -> . assingation
    (28) statement -> . invocation
    (29) statement -> . if
    (30) statement -> . read
    (31) statement -> . return
    (32) statement -> . print
    (39) assingation -> . variable ASSIGN expression SEMICOLON
    (40) invocation -> . ID LPAREN expressions RPAREN SEMICOLON
    (35) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (36) if -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (38) read -> . READ LPAREN variable RPAREN SEMICOLON
    (37) return -> . RETURN expression SEMICOLON
    (33) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (34) print -> . PRINT LPAREN CTES RPAREN SEMICOLON
    (17) variable -> . ID
    (18) variable -> . ID LBRACK expression RBRACK
    (19) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    RBRACE          shift and go to state 155
    ID              shift and go to state 111
    IF              shift and go to state 112
    READ            shift and go to state 113
    RETURN          shift and go to state 114
    PRINT           shift and go to state 115

    statement                      shift and go to state 123
    assingation                    shift and go to state 104
    invocation                     shift and go to state 105
    if                             shift and go to state 106
    read                           shift and go to state 107
    return                         shift and go to state 108
    print                          shift and go to state 109
    variable                       shift and go to state 110

state 155

    (36) if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    RBRACE          reduce using rule 36 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ID              reduce using rule 36 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 36 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    READ            reduce using rule 36 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RETURN          reduce using rule 36 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    PRINT           reduce using rule 36 (if -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for IF in state 93 resolved as shift
WARNING: shift/reduce conflict for READ in state 93 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 93 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
WARNING: shift/reduce conflict for READ in state 129 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 129 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 129 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for IF in state 130 resolved as shift
WARNING: shift/reduce conflict for READ in state 130 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 130 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 130 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 146 resolved as shift
WARNING: shift/reduce conflict for IF in state 146 resolved as shift
WARNING: shift/reduce conflict for READ in state 146 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 146 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for IF in state 153 resolved as shift
WARNING: shift/reduce conflict for READ in state 153 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 153 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 153 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (var_declarations -> var_declaration)
WARNING: rejected rule (empty -> <empty>) in state 7
