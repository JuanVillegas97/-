Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    STRING
    THEN

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END
Rule 2     global_scope -> empty
Rule 3     functions -> functions function
Rule 4     functions -> function
Rule 5     functions -> empty
Rule 6     function -> FUNCTION function_signature function_body
Rule 7     function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
Rule 8     function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
Rule 9     function_body -> LBRACE statements return RBRACE
Rule 10    function_body -> LBRACE statements RBRACE
Rule 11    return -> RETURN expressions SEMICOLON
Rule 12    return -> RETURN SEMICOLON
Rule 13    return -> empty
Rule 14    function_1 -> empty
Rule 15    main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
Rule 16    main_scope -> empty
Rule 17    var_declarations -> var_declaration_list
Rule 18    var_declarations -> empty
Rule 19    var_declaration_list -> var_declaration var_declarations
Rule 20    var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
Rule 21    open_var_declaration -> empty
Rule 22    close_var_declaration -> empty
Rule 23    variables -> variable
Rule 24    variables -> variable COMMA variables
Rule 25    variable -> ID
Rule 26    variable -> ID LBRACK expression RBRACK
Rule 27    variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK
Rule 28    parameters -> parameters COMMA parameter
Rule 29    parameters -> parameter
Rule 30    parameters -> empty
Rule 31    parameter -> simple_type ID
Rule 32    statements -> statements statement
Rule 33    statements -> statement
Rule 34    statements -> empty
Rule 35    statement -> read
Rule 36    statement -> assing_to_call
Rule 37    statement -> assingation
Rule 38    statement -> for
Rule 39    statement -> do_while
Rule 40    statement -> while
Rule 41    statement -> if_else
Rule 42    statement -> invocation
Rule 43    statement -> if
Rule 44    statement -> return
Rule 45    statement -> print
Rule 46    assing_to_call -> variable ASSIGN invocation
Rule 47    do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
Rule 48    for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
Rule 49    for_1 -> empty
Rule 50    for_2 -> empty
Rule 51    for_3 -> empty
Rule 52    for_4 -> empty
Rule 53    while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
Rule 54    breadcrumb -> empty
Rule 55    if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
Rule 56    if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
Rule 57    gotot -> empty
Rule 58    goto -> empty
Rule 59    gotof -> empty
Rule 60    read -> READ LPAREN variable_list RPAREN SEMICOLON
Rule 61    variable_list -> variable
Rule 62    variable_list -> variable_list COMMA variable
Rule 63    invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
Rule 64    invocation_1 -> empty
Rule 65    invocation_2 -> empty
Rule 66    invocation_3 -> empty
Rule 67    invocation_4 -> empty
Rule 68    invocation_5 -> empty
Rule 69    invocation_6 -> empty
Rule 70    expressions -> expressions COMMA invocation_4 expression invocation_3
Rule 71    expressions -> expression invocation_3
Rule 72    expressions -> empty
Rule 73    expression -> t_expression
Rule 74    expression -> NOT t_expression
Rule 75    print -> PRINT LPAREN print_arguments RPAREN SEMICOLON
Rule 76    print_arguments -> print_argument
Rule 77    print_arguments -> print_arguments COMMA print_argument
Rule 78    print_argument -> CTES
Rule 79    print_argument -> expression
Rule 80    assingation -> variable ASSIGN expression SEMICOLON
Rule 81    t_expression -> g_expression
Rule 82    t_expression -> t_expression boolean_operator g_expression
Rule 83    g_expression -> m_expression
Rule 84    g_expression -> g_expression comparison_operator m_expression
Rule 85    m_expression -> term
Rule 86    m_expression -> m_expression addition_operator term
Rule 87    term -> factor
Rule 88    term -> term multiplication_operator factor
Rule 89    factor -> variable
Rule 90    factor -> cte
Rule 91    factor -> invocation
Rule 92    factor -> expression_parenthesis
Rule 93    expression_parenthesis -> LPAREN expression RPAREN
Rule 94    comparison_operator -> LESS
Rule 95    comparison_operator -> GREATER
Rule 96    comparison_operator -> EQUALS
Rule 97    comparison_operator -> NOTEQUAL
Rule 98    comparison_operator -> GREATERTHAN
Rule 99    comparison_operator -> LESSTHAN
Rule 100   addition_operator -> PLUS
Rule 101   addition_operator -> MINUS
Rule 102   boolean_operator -> AND
Rule 103   boolean_operator -> OR
Rule 104   multiplication_operator -> TIMES
Rule 105   multiplication_operator -> DIVIDE
Rule 106   simple_type -> INT
Rule 107   simple_type -> FLOAT
Rule 108   simple_type -> CHAR
Rule 109   simple_type -> BOOLEAN
Rule 110   cte -> CTEI
Rule 111   cte -> CTEF
Rule 112   cte -> CTEC
Rule 113   cte -> CTEB
Rule 114   empty -> <empty>

Terminals, with rules where they appear

AND                  : 102
ASSIGN               : 46 48 80
BOOLEAN              : 109
CHAR                 : 108
COLON                : 
COMMA                : 24 28 62 70 77
COMMENT              : 
CTEB                 : 113
CTEC                 : 112
CTEF                 : 111
CTEI                 : 110
CTES                 : 78
DIVIDE               : 105
DO                   : 47 48
ELSE                 : 56
END                  : 1
EQUALS               : 96
FLOAT                : 107
FOR                  : 48
FROM                 : 48
FUNCTION             : 6
GREATER              : 95
GREATERTHAN          : 98
ID                   : 1 7 8 25 26 27 31 48 63
IF                   : 55 56
INT                  : 106
LBRACE               : 9 10 15 47 48 53 55 56 56
LBRACK               : 26 27 27
LESS                 : 94
LESSTHAN             : 99
LPAREN               : 7 8 15 47 48 53 55 56 60 63 75 93
MAIN                 : 15
MINUS                : 101
NOT                  : 74
NOTEQUAL             : 97
OR                   : 103
PLUS                 : 100
PRINT                : 75
PROGRAM              : 1
RBRACE               : 9 10 15 47 48 53 55 56 56
RBRACK               : 26 27 27
READ                 : 60
RETURN               : 11 12
RPAREN               : 7 8 15 47 48 53 55 56 60 63 75 93
SEMICOLON            : 1 11 12 20 47 60 63 75 80
STRING               : 
THEN                 : 
TIMES                : 104
VARIABLE             : 20
VOID                 : 8
WHILE                : 47 53
error                : 

Nonterminals, with rules where they appear

addition_operator    : 86
assing_to_call       : 36
assingation          : 37
boolean_operator     : 82
breadcrumb           : 47 53
close_var_declaration : 7 8 20
comparison_operator  : 84
cte                  : 90
do_while             : 39
empty                : 2 5 13 14 16 18 21 22 30 34 49 50 51 52 54 57 58 59 64 65 66 67 68 69 72
expression           : 26 27 27 47 48 48 53 55 56 70 71 79 80 93
expression_parenthesis : 92
expressions          : 11 63 70
factor               : 87 88
for                  : 38
for_1                : 48
for_2                : 48
for_3                : 48
for_4                : 48
function             : 3 4
function_1           : 7 8
function_body        : 6
function_signature   : 6
functions            : 1 3
g_expression         : 81 82 84
global_scope         : 1
goto                 : 56
gotof                : 53 55 56
gotot                : 47
if                   : 43
if_else              : 41
invocation           : 42 46 91
invocation_1         : 63
invocation_2         : 63
invocation_3         : 70 71
invocation_4         : 70
invocation_5         : 63
invocation_6         : 63
m_expression         : 83 84 86
main                 : 1
main_scope           : 15
multiplication_operator : 88
open_var_declaration : 7 8 20
parameter            : 28 29
parameters           : 7 8 28
print                : 45
print_argument       : 76 77
print_arguments      : 75 77
program              : 0
read                 : 35
return               : 9 44
simple_type          : 7 20 31
statement            : 32 33
statements           : 9 10 15 32 47 48 53 55 56 56
t_expression         : 73 74 82
term                 : 85 86 88
var_declaration      : 19
var_declaration_list : 17
var_declarations     : 1 7 8 15 19
variable             : 23 24 46 61 62 80 89
variable_list        : 60 62
variables            : 20 24
while                : 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON global_scope var_declarations functions main END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON global_scope var_declarations functions main END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON global_scope var_declarations functions main END

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . global_scope var_declarations functions main END
    (2) global_scope -> . empty
    (114) empty -> .

    VARIABLE        reduce using rule 114 (empty -> .)
    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)

    global_scope                   shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) program -> PROGRAM ID SEMICOLON global_scope . var_declarations functions main END
    (17) var_declarations -> . var_declaration_list
    (18) var_declarations -> . empty
    (19) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (20) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 7
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 6

    (2) global_scope -> empty .

    VARIABLE        reduce using rule 2 (global_scope -> empty .)
    FUNCTION        reduce using rule 2 (global_scope -> empty .)
    MAIN            reduce using rule 2 (global_scope -> empty .)


state 7

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations . functions main END
    (3) functions -> . functions function
    (4) functions -> . function
    (5) functions -> . empty
    (6) function -> . FUNCTION function_signature function_body
    (114) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 114 (empty -> .)

  ! FUNCTION        [ reduce using rule 114 (empty -> .) ]

    functions                      shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 8

    (17) var_declarations -> var_declaration_list .

    FUNCTION        reduce using rule 17 (var_declarations -> var_declaration_list .)
    MAIN            reduce using rule 17 (var_declarations -> var_declaration_list .)
    LBRACE          reduce using rule 17 (var_declarations -> var_declaration_list .)


state 9

    (18) var_declarations -> empty .

    FUNCTION        reduce using rule 18 (var_declarations -> empty .)
    MAIN            reduce using rule 18 (var_declarations -> empty .)
    LBRACE          reduce using rule 18 (var_declarations -> empty .)


state 10

    (19) var_declaration_list -> var_declaration . var_declarations
    (17) var_declarations -> . var_declaration_list
    (18) var_declarations -> . empty
    (19) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (20) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)
    LBRACE          reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declaration                shift and go to state 10
    var_declarations               shift and go to state 16
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9

state 11

    (20) var_declaration -> VARIABLE . open_var_declaration simple_type variables SEMICOLON close_var_declaration
    (21) open_var_declaration -> . empty
    (114) empty -> .

    INT             reduce using rule 114 (empty -> .)
    FLOAT           reduce using rule 114 (empty -> .)
    CHAR            reduce using rule 114 (empty -> .)
    BOOLEAN         reduce using rule 114 (empty -> .)

    open_var_declaration           shift and go to state 17
    empty                          shift and go to state 18

state 12

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions . main END
    (3) functions -> functions . function
    (15) main -> . MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
    (6) function -> . FUNCTION function_signature function_body

    MAIN            shift and go to state 21
    FUNCTION        shift and go to state 15

    main                           shift and go to state 19
    function                       shift and go to state 20

state 13

    (4) functions -> function .

    MAIN            reduce using rule 4 (functions -> function .)
    FUNCTION        reduce using rule 4 (functions -> function .)


state 14

    (5) functions -> empty .

    MAIN            reduce using rule 5 (functions -> empty .)
    FUNCTION        reduce using rule 5 (functions -> empty .)


state 15

    (6) function -> FUNCTION . function_signature function_body
    (7) function_signature -> . simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (8) function_signature -> . VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (106) simple_type -> . INT
    (107) simple_type -> . FLOAT
    (108) simple_type -> . CHAR
    (109) simple_type -> . BOOLEAN

    VOID            shift and go to state 24
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    function_signature             shift and go to state 22
    simple_type                    shift and go to state 23

state 16

    (19) var_declaration_list -> var_declaration var_declarations .

    FUNCTION        reduce using rule 19 (var_declaration_list -> var_declaration var_declarations .)
    MAIN            reduce using rule 19 (var_declaration_list -> var_declaration var_declarations .)
    LBRACE          reduce using rule 19 (var_declaration_list -> var_declaration var_declarations .)


state 17

    (20) var_declaration -> VARIABLE open_var_declaration . simple_type variables SEMICOLON close_var_declaration
    (106) simple_type -> . INT
    (107) simple_type -> . FLOAT
    (108) simple_type -> . CHAR
    (109) simple_type -> . BOOLEAN

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    simple_type                    shift and go to state 29

state 18

    (21) open_var_declaration -> empty .

    INT             reduce using rule 21 (open_var_declaration -> empty .)
    FLOAT           reduce using rule 21 (open_var_declaration -> empty .)
    CHAR            reduce using rule 21 (open_var_declaration -> empty .)
    BOOLEAN         reduce using rule 21 (open_var_declaration -> empty .)
    COMMA           reduce using rule 21 (open_var_declaration -> empty .)
    RPAREN          reduce using rule 21 (open_var_declaration -> empty .)


state 19

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main . END

    END             shift and go to state 30


state 20

    (3) functions -> functions function .

    MAIN            reduce using rule 3 (functions -> functions function .)
    FUNCTION        reduce using rule 3 (functions -> functions function .)


state 21

    (15) main -> MAIN . LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE

    LPAREN          shift and go to state 31


state 22

    (6) function -> FUNCTION function_signature . function_body
    (9) function_body -> . LBRACE statements return RBRACE
    (10) function_body -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 33

    function_body                  shift and go to state 32

state 23

    (7) function_signature -> simple_type . ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    ID              shift and go to state 34


state 24

    (8) function_signature -> VOID . ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    ID              shift and go to state 35


state 25

    (106) simple_type -> INT .

    ID              reduce using rule 106 (simple_type -> INT .)


state 26

    (107) simple_type -> FLOAT .

    ID              reduce using rule 107 (simple_type -> FLOAT .)


state 27

    (108) simple_type -> CHAR .

    ID              reduce using rule 108 (simple_type -> CHAR .)


state 28

    (109) simple_type -> BOOLEAN .

    ID              reduce using rule 109 (simple_type -> BOOLEAN .)


state 29

    (20) var_declaration -> VARIABLE open_var_declaration simple_type . variables SEMICOLON close_var_declaration
    (23) variables -> . variable
    (24) variables -> . variable COMMA variables
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 38

    variables                      shift and go to state 36
    variable                       shift and go to state 37

state 30

    (1) program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON global_scope var_declarations functions main END .)


state 31

    (15) main -> MAIN LPAREN . RPAREN main_scope var_declarations LBRACE statements RBRACE

    RPAREN          shift and go to state 39


state 32

    (6) function -> FUNCTION function_signature function_body .

    MAIN            reduce using rule 6 (function -> FUNCTION function_signature function_body .)
    FUNCTION        reduce using rule 6 (function -> FUNCTION function_signature function_body .)


state 33

    (9) function_body -> LBRACE . statements return RBRACE
    (10) function_body -> LBRACE . statements RBRACE
    (32) statements -> . statements statement
    (33) statements -> . statement
    (34) statements -> . empty
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (114) empty -> .
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 114 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statements                     shift and go to state 40
    return                         shift and go to state 41
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 34

    (7) function_signature -> simple_type ID . function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (14) function_1 -> . empty
    (114) empty -> .

    LPAREN          reduce using rule 114 (empty -> .)

    function_1                     shift and go to state 63
    empty                          shift and go to state 64

state 35

    (8) function_signature -> VOID ID . function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (14) function_1 -> . empty
    (114) empty -> .

    LPAREN          reduce using rule 114 (empty -> .)

    function_1                     shift and go to state 65
    empty                          shift and go to state 64

state 36

    (20) var_declaration -> VARIABLE open_var_declaration simple_type variables . SEMICOLON close_var_declaration

    SEMICOLON       shift and go to state 66


state 37

    (23) variables -> variable .
    (24) variables -> variable . COMMA variables

    SEMICOLON       reduce using rule 23 (variables -> variable .)
    COMMA           shift and go to state 67


state 38

    (25) variable -> ID .
    (26) variable -> ID . LBRACK expression RBRACK
    (27) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK

    COMMA           reduce using rule 25 (variable -> ID .)
    SEMICOLON       reduce using rule 25 (variable -> ID .)
    RPAREN          reduce using rule 25 (variable -> ID .)
    LBRACK          shift and go to state 68


state 39

    (15) main -> MAIN LPAREN RPAREN . main_scope var_declarations LBRACE statements RBRACE
    (16) main_scope -> . empty
    (114) empty -> .

    VARIABLE        reduce using rule 114 (empty -> .)
    LBRACE          reduce using rule 114 (empty -> .)

    main_scope                     shift and go to state 69
    empty                          shift and go to state 70

state 40

    (9) function_body -> LBRACE statements . return RBRACE
    (10) function_body -> LBRACE statements . RBRACE
    (32) statements -> statements . statement
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (114) empty -> .
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          shift and go to state 72
    RETURN          shift and go to state 61
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    PRINT           shift and go to state 62

  ! RBRACE          [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    return                         shift and go to state 71
    statement                      shift and go to state 73
    empty                          shift and go to state 74
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 41

    (44) statement -> return .

    RBRACE          reduce using rule 44 (statement -> return .)
    RETURN          reduce using rule 44 (statement -> return .)
    READ            reduce using rule 44 (statement -> return .)
    FOR             reduce using rule 44 (statement -> return .)
    DO              reduce using rule 44 (statement -> return .)
    WHILE           reduce using rule 44 (statement -> return .)
    IF              reduce using rule 44 (statement -> return .)
    ID              reduce using rule 44 (statement -> return .)
    PRINT           reduce using rule 44 (statement -> return .)


state 42

    (33) statements -> statement .

    RBRACE          reduce using rule 33 (statements -> statement .)
    RETURN          reduce using rule 33 (statements -> statement .)
    READ            reduce using rule 33 (statements -> statement .)
    FOR             reduce using rule 33 (statements -> statement .)
    DO              reduce using rule 33 (statements -> statement .)
    WHILE           reduce using rule 33 (statements -> statement .)
    IF              reduce using rule 33 (statements -> statement .)
    ID              reduce using rule 33 (statements -> statement .)
    PRINT           reduce using rule 33 (statements -> statement .)


state 43

    (34) statements -> empty .
    (13) return -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 13 (return -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (return -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 13 (return -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (return -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 13 (return -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (return -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 13 (return -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 13 (return -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (return -> empty .)
    RBRACE          reduce using rule 13 (return -> empty .)
    RETURN          reduce using rule 13 (return -> empty .)
    READ            reduce using rule 13 (return -> empty .)
    FOR             reduce using rule 13 (return -> empty .)
    DO              reduce using rule 13 (return -> empty .)
    WHILE           reduce using rule 13 (return -> empty .)
    IF              reduce using rule 13 (return -> empty .)
    ID              reduce using rule 13 (return -> empty .)
    PRINT           reduce using rule 13 (return -> empty .)

  ! RBRACE          [ reduce using rule 34 (statements -> empty .) ]
  ! RETURN          [ reduce using rule 34 (statements -> empty .) ]
  ! READ            [ reduce using rule 34 (statements -> empty .) ]
  ! FOR             [ reduce using rule 34 (statements -> empty .) ]
  ! DO              [ reduce using rule 34 (statements -> empty .) ]
  ! WHILE           [ reduce using rule 34 (statements -> empty .) ]
  ! IF              [ reduce using rule 34 (statements -> empty .) ]
  ! ID              [ reduce using rule 34 (statements -> empty .) ]
  ! PRINT           [ reduce using rule 34 (statements -> empty .) ]


state 44

    (35) statement -> read .

    RBRACE          reduce using rule 35 (statement -> read .)
    RETURN          reduce using rule 35 (statement -> read .)
    READ            reduce using rule 35 (statement -> read .)
    FOR             reduce using rule 35 (statement -> read .)
    DO              reduce using rule 35 (statement -> read .)
    WHILE           reduce using rule 35 (statement -> read .)
    IF              reduce using rule 35 (statement -> read .)
    ID              reduce using rule 35 (statement -> read .)
    PRINT           reduce using rule 35 (statement -> read .)


state 45

    (36) statement -> assing_to_call .

    RBRACE          reduce using rule 36 (statement -> assing_to_call .)
    RETURN          reduce using rule 36 (statement -> assing_to_call .)
    READ            reduce using rule 36 (statement -> assing_to_call .)
    FOR             reduce using rule 36 (statement -> assing_to_call .)
    DO              reduce using rule 36 (statement -> assing_to_call .)
    WHILE           reduce using rule 36 (statement -> assing_to_call .)
    IF              reduce using rule 36 (statement -> assing_to_call .)
    ID              reduce using rule 36 (statement -> assing_to_call .)
    PRINT           reduce using rule 36 (statement -> assing_to_call .)


state 46

    (37) statement -> assingation .

    RBRACE          reduce using rule 37 (statement -> assingation .)
    RETURN          reduce using rule 37 (statement -> assingation .)
    READ            reduce using rule 37 (statement -> assingation .)
    FOR             reduce using rule 37 (statement -> assingation .)
    DO              reduce using rule 37 (statement -> assingation .)
    WHILE           reduce using rule 37 (statement -> assingation .)
    IF              reduce using rule 37 (statement -> assingation .)
    ID              reduce using rule 37 (statement -> assingation .)
    PRINT           reduce using rule 37 (statement -> assingation .)


state 47

    (38) statement -> for .

    RBRACE          reduce using rule 38 (statement -> for .)
    RETURN          reduce using rule 38 (statement -> for .)
    READ            reduce using rule 38 (statement -> for .)
    FOR             reduce using rule 38 (statement -> for .)
    DO              reduce using rule 38 (statement -> for .)
    WHILE           reduce using rule 38 (statement -> for .)
    IF              reduce using rule 38 (statement -> for .)
    ID              reduce using rule 38 (statement -> for .)
    PRINT           reduce using rule 38 (statement -> for .)


state 48

    (39) statement -> do_while .

    RBRACE          reduce using rule 39 (statement -> do_while .)
    RETURN          reduce using rule 39 (statement -> do_while .)
    READ            reduce using rule 39 (statement -> do_while .)
    FOR             reduce using rule 39 (statement -> do_while .)
    DO              reduce using rule 39 (statement -> do_while .)
    WHILE           reduce using rule 39 (statement -> do_while .)
    IF              reduce using rule 39 (statement -> do_while .)
    ID              reduce using rule 39 (statement -> do_while .)
    PRINT           reduce using rule 39 (statement -> do_while .)


state 49

    (40) statement -> while .

    RBRACE          reduce using rule 40 (statement -> while .)
    RETURN          reduce using rule 40 (statement -> while .)
    READ            reduce using rule 40 (statement -> while .)
    FOR             reduce using rule 40 (statement -> while .)
    DO              reduce using rule 40 (statement -> while .)
    WHILE           reduce using rule 40 (statement -> while .)
    IF              reduce using rule 40 (statement -> while .)
    ID              reduce using rule 40 (statement -> while .)
    PRINT           reduce using rule 40 (statement -> while .)


state 50

    (41) statement -> if_else .

    RBRACE          reduce using rule 41 (statement -> if_else .)
    RETURN          reduce using rule 41 (statement -> if_else .)
    READ            reduce using rule 41 (statement -> if_else .)
    FOR             reduce using rule 41 (statement -> if_else .)
    DO              reduce using rule 41 (statement -> if_else .)
    WHILE           reduce using rule 41 (statement -> if_else .)
    IF              reduce using rule 41 (statement -> if_else .)
    ID              reduce using rule 41 (statement -> if_else .)
    PRINT           reduce using rule 41 (statement -> if_else .)


state 51

    (42) statement -> invocation .

    RBRACE          reduce using rule 42 (statement -> invocation .)
    RETURN          reduce using rule 42 (statement -> invocation .)
    READ            reduce using rule 42 (statement -> invocation .)
    FOR             reduce using rule 42 (statement -> invocation .)
    DO              reduce using rule 42 (statement -> invocation .)
    WHILE           reduce using rule 42 (statement -> invocation .)
    IF              reduce using rule 42 (statement -> invocation .)
    ID              reduce using rule 42 (statement -> invocation .)
    PRINT           reduce using rule 42 (statement -> invocation .)


state 52

    (43) statement -> if .

    RBRACE          reduce using rule 43 (statement -> if .)
    RETURN          reduce using rule 43 (statement -> if .)
    READ            reduce using rule 43 (statement -> if .)
    FOR             reduce using rule 43 (statement -> if .)
    DO              reduce using rule 43 (statement -> if .)
    WHILE           reduce using rule 43 (statement -> if .)
    IF              reduce using rule 43 (statement -> if .)
    ID              reduce using rule 43 (statement -> if .)
    PRINT           reduce using rule 43 (statement -> if .)


state 53

    (45) statement -> print .

    RBRACE          reduce using rule 45 (statement -> print .)
    RETURN          reduce using rule 45 (statement -> print .)
    READ            reduce using rule 45 (statement -> print .)
    FOR             reduce using rule 45 (statement -> print .)
    DO              reduce using rule 45 (statement -> print .)
    WHILE           reduce using rule 45 (statement -> print .)
    IF              reduce using rule 45 (statement -> print .)
    ID              reduce using rule 45 (statement -> print .)
    PRINT           reduce using rule 45 (statement -> print .)


state 54

    (60) read -> READ . LPAREN variable_list RPAREN SEMICOLON

    LPAREN          shift and go to state 75


state 55

    (46) assing_to_call -> variable . ASSIGN invocation
    (80) assingation -> variable . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 76


state 56

    (48) for -> FOR . LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4

    LPAREN          shift and go to state 77


state 57

    (63) invocation -> ID . invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (25) variable -> ID .
    (26) variable -> ID . LBRACK expression RBRACK
    (27) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK
    (64) invocation_1 -> . empty
    (114) empty -> .

    ASSIGN          reduce using rule 25 (variable -> ID .)
    TIMES           reduce using rule 25 (variable -> ID .)
    DIVIDE          reduce using rule 25 (variable -> ID .)
    PLUS            reduce using rule 25 (variable -> ID .)
    MINUS           reduce using rule 25 (variable -> ID .)
    LESS            reduce using rule 25 (variable -> ID .)
    GREATER         reduce using rule 25 (variable -> ID .)
    EQUALS          reduce using rule 25 (variable -> ID .)
    NOTEQUAL        reduce using rule 25 (variable -> ID .)
    GREATERTHAN     reduce using rule 25 (variable -> ID .)
    LESSTHAN        reduce using rule 25 (variable -> ID .)
    AND             reduce using rule 25 (variable -> ID .)
    OR              reduce using rule 25 (variable -> ID .)
    SEMICOLON       reduce using rule 25 (variable -> ID .)
    LBRACK          shift and go to state 68
    LPAREN          reduce using rule 114 (empty -> .)

    invocation_1                   shift and go to state 78
    empty                          shift and go to state 79

state 58

    (47) do_while -> DO . breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (54) breadcrumb -> . empty
    (114) empty -> .

    LBRACE          reduce using rule 114 (empty -> .)

    breadcrumb                     shift and go to state 80
    empty                          shift and go to state 81

state 59

    (53) while -> WHILE . breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (54) breadcrumb -> . empty
    (114) empty -> .

    LPAREN          reduce using rule 114 (empty -> .)

    breadcrumb                     shift and go to state 82
    empty                          shift and go to state 81

state 60

    (56) if_else -> IF . LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (55) if -> IF . LPAREN expression RPAREN gotof LBRACE statements RBRACE

    LPAREN          shift and go to state 83


state 61

    (11) return -> RETURN . expressions SEMICOLON
    (12) return -> RETURN . SEMICOLON
    (70) expressions -> . expressions COMMA invocation_4 expression invocation_3
    (71) expressions -> . expression invocation_3
    (72) expressions -> . empty
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (114) empty -> .
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 85
    NOT             shift and go to state 89
    COMMA           reduce using rule 114 (empty -> .)
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

  ! SEMICOLON       [ reduce using rule 114 (empty -> .) ]

    expressions                    shift and go to state 84
    expression                     shift and go to state 86
    empty                          shift and go to state 87
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 62

    (75) print -> PRINT . LPAREN print_arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 104


state 63

    (7) function_signature -> simple_type ID function_1 . LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    LPAREN          shift and go to state 105


state 64

    (14) function_1 -> empty .

    LPAREN          reduce using rule 14 (function_1 -> empty .)


state 65

    (8) function_signature -> VOID ID function_1 . LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations

    LPAREN          shift and go to state 106


state 66

    (20) var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON . close_var_declaration
    (22) close_var_declaration -> . empty
    (114) empty -> .

    VARIABLE        reduce using rule 114 (empty -> .)
    FUNCTION        reduce using rule 114 (empty -> .)
    MAIN            reduce using rule 114 (empty -> .)
    LBRACE          reduce using rule 114 (empty -> .)

    close_var_declaration          shift and go to state 107
    empty                          shift and go to state 108

state 67

    (24) variables -> variable COMMA . variables
    (23) variables -> . variable
    (24) variables -> . variable COMMA variables
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 38

    variable                       shift and go to state 37
    variables                      shift and go to state 109

state 68

    (26) variable -> ID LBRACK . expression RBRACK
    (27) variable -> ID LBRACK . expression RBRACK LBRACK expression RBRACK
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expression                     shift and go to state 110
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 69

    (15) main -> MAIN LPAREN RPAREN main_scope . var_declarations LBRACE statements RBRACE
    (17) var_declarations -> . var_declaration_list
    (18) var_declarations -> . empty
    (19) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (20) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    LBRACE          reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 111
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 70

    (16) main_scope -> empty .

    VARIABLE        reduce using rule 16 (main_scope -> empty .)
    LBRACE          reduce using rule 16 (main_scope -> empty .)


state 71

    (9) function_body -> LBRACE statements return . RBRACE
    (44) statement -> return .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 112
    RETURN          reduce using rule 44 (statement -> return .)
    READ            reduce using rule 44 (statement -> return .)
    FOR             reduce using rule 44 (statement -> return .)
    DO              reduce using rule 44 (statement -> return .)
    WHILE           reduce using rule 44 (statement -> return .)
    IF              reduce using rule 44 (statement -> return .)
    ID              reduce using rule 44 (statement -> return .)
    PRINT           reduce using rule 44 (statement -> return .)

  ! RBRACE          [ reduce using rule 44 (statement -> return .) ]


state 72

    (10) function_body -> LBRACE statements RBRACE .

    MAIN            reduce using rule 10 (function_body -> LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 10 (function_body -> LBRACE statements RBRACE .)


state 73

    (32) statements -> statements statement .

    RBRACE          reduce using rule 32 (statements -> statements statement .)
    RETURN          reduce using rule 32 (statements -> statements statement .)
    READ            reduce using rule 32 (statements -> statements statement .)
    FOR             reduce using rule 32 (statements -> statements statement .)
    DO              reduce using rule 32 (statements -> statements statement .)
    WHILE           reduce using rule 32 (statements -> statements statement .)
    IF              reduce using rule 32 (statements -> statements statement .)
    ID              reduce using rule 32 (statements -> statements statement .)
    PRINT           reduce using rule 32 (statements -> statements statement .)


state 74

    (13) return -> empty .

    RBRACE          reduce using rule 13 (return -> empty .)
    RETURN          reduce using rule 13 (return -> empty .)
    READ            reduce using rule 13 (return -> empty .)
    FOR             reduce using rule 13 (return -> empty .)
    DO              reduce using rule 13 (return -> empty .)
    WHILE           reduce using rule 13 (return -> empty .)
    IF              reduce using rule 13 (return -> empty .)
    ID              reduce using rule 13 (return -> empty .)
    PRINT           reduce using rule 13 (return -> empty .)


state 75

    (60) read -> READ LPAREN . variable_list RPAREN SEMICOLON
    (61) variable_list -> . variable
    (62) variable_list -> . variable_list COMMA variable
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 38

    variable_list                  shift and go to state 113
    variable                       shift and go to state 114

state 76

    (46) assing_to_call -> variable ASSIGN . invocation
    (80) assingation -> variable ASSIGN . expression SEMICOLON
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 57
    NOT             shift and go to state 89
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    variable                       shift and go to state 94
    invocation                     shift and go to state 115
    expression                     shift and go to state 116
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    cte                            shift and go to state 95
    expression_parenthesis         shift and go to state 97

state 77

    (48) for -> FOR LPAREN . ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4

    ID              shift and go to state 117


state 78

    (63) invocation -> ID invocation_1 . LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6

    LPAREN          shift and go to state 118


state 79

    (64) invocation_1 -> empty .

    LPAREN          reduce using rule 64 (invocation_1 -> empty .)


state 80

    (47) do_while -> DO breadcrumb . LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON

    LBRACE          shift and go to state 119


state 81

    (54) breadcrumb -> empty .

    LBRACE          reduce using rule 54 (breadcrumb -> empty .)
    LPAREN          reduce using rule 54 (breadcrumb -> empty .)


state 82

    (53) while -> WHILE breadcrumb . LPAREN expression RPAREN gotof LBRACE statements RBRACE

    LPAREN          shift and go to state 120


state 83

    (56) if_else -> IF LPAREN . expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (55) if -> IF LPAREN . expression RPAREN gotof LBRACE statements RBRACE
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expression                     shift and go to state 121
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 84

    (11) return -> RETURN expressions . SEMICOLON
    (70) expressions -> expressions . COMMA invocation_4 expression invocation_3

    SEMICOLON       shift and go to state 122
    COMMA           shift and go to state 123


state 85

    (12) return -> RETURN SEMICOLON .

    RBRACE          reduce using rule 12 (return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 12 (return -> RETURN SEMICOLON .)
    READ            reduce using rule 12 (return -> RETURN SEMICOLON .)
    FOR             reduce using rule 12 (return -> RETURN SEMICOLON .)
    DO              reduce using rule 12 (return -> RETURN SEMICOLON .)
    WHILE           reduce using rule 12 (return -> RETURN SEMICOLON .)
    IF              reduce using rule 12 (return -> RETURN SEMICOLON .)
    ID              reduce using rule 12 (return -> RETURN SEMICOLON .)
    PRINT           reduce using rule 12 (return -> RETURN SEMICOLON .)


state 86

    (71) expressions -> expression . invocation_3
    (66) invocation_3 -> . empty
    (114) empty -> .

    SEMICOLON       reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)

    invocation_3                   shift and go to state 124
    empty                          shift and go to state 125

state 87

    (72) expressions -> empty .

    SEMICOLON       reduce using rule 72 (expressions -> empty .)
    COMMA           reduce using rule 72 (expressions -> empty .)
    RPAREN          reduce using rule 72 (expressions -> empty .)


state 88

    (73) expression -> t_expression .
    (82) t_expression -> t_expression . boolean_operator g_expression
    (102) boolean_operator -> . AND
    (103) boolean_operator -> . OR

    SEMICOLON       reduce using rule 73 (expression -> t_expression .)
    COMMA           reduce using rule 73 (expression -> t_expression .)
    RBRACK          reduce using rule 73 (expression -> t_expression .)
    RPAREN          reduce using rule 73 (expression -> t_expression .)
    FROM            reduce using rule 73 (expression -> t_expression .)
    AND             shift and go to state 127
    OR              shift and go to state 128

    boolean_operator               shift and go to state 126

state 89

    (74) expression -> NOT . t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    t_expression                   shift and go to state 129
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 90

    (81) t_expression -> g_expression .
    (84) g_expression -> g_expression . comparison_operator m_expression
    (94) comparison_operator -> . LESS
    (95) comparison_operator -> . GREATER
    (96) comparison_operator -> . EQUALS
    (97) comparison_operator -> . NOTEQUAL
    (98) comparison_operator -> . GREATERTHAN
    (99) comparison_operator -> . LESSTHAN

    AND             reduce using rule 81 (t_expression -> g_expression .)
    OR              reduce using rule 81 (t_expression -> g_expression .)
    SEMICOLON       reduce using rule 81 (t_expression -> g_expression .)
    COMMA           reduce using rule 81 (t_expression -> g_expression .)
    RBRACK          reduce using rule 81 (t_expression -> g_expression .)
    RPAREN          reduce using rule 81 (t_expression -> g_expression .)
    FROM            reduce using rule 81 (t_expression -> g_expression .)
    LESS            shift and go to state 131
    GREATER         shift and go to state 132
    EQUALS          shift and go to state 133
    NOTEQUAL        shift and go to state 134
    GREATERTHAN     shift and go to state 135
    LESSTHAN        shift and go to state 136

    comparison_operator            shift and go to state 130

state 91

    (83) g_expression -> m_expression .
    (86) m_expression -> m_expression . addition_operator term
    (100) addition_operator -> . PLUS
    (101) addition_operator -> . MINUS

    LESS            reduce using rule 83 (g_expression -> m_expression .)
    GREATER         reduce using rule 83 (g_expression -> m_expression .)
    EQUALS          reduce using rule 83 (g_expression -> m_expression .)
    NOTEQUAL        reduce using rule 83 (g_expression -> m_expression .)
    GREATERTHAN     reduce using rule 83 (g_expression -> m_expression .)
    LESSTHAN        reduce using rule 83 (g_expression -> m_expression .)
    AND             reduce using rule 83 (g_expression -> m_expression .)
    OR              reduce using rule 83 (g_expression -> m_expression .)
    SEMICOLON       reduce using rule 83 (g_expression -> m_expression .)
    COMMA           reduce using rule 83 (g_expression -> m_expression .)
    RBRACK          reduce using rule 83 (g_expression -> m_expression .)
    RPAREN          reduce using rule 83 (g_expression -> m_expression .)
    FROM            reduce using rule 83 (g_expression -> m_expression .)
    PLUS            shift and go to state 138
    MINUS           shift and go to state 139

    addition_operator              shift and go to state 137

state 92

    (85) m_expression -> term .
    (88) term -> term . multiplication_operator factor
    (104) multiplication_operator -> . TIMES
    (105) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 85 (m_expression -> term .)
    MINUS           reduce using rule 85 (m_expression -> term .)
    LESS            reduce using rule 85 (m_expression -> term .)
    GREATER         reduce using rule 85 (m_expression -> term .)
    EQUALS          reduce using rule 85 (m_expression -> term .)
    NOTEQUAL        reduce using rule 85 (m_expression -> term .)
    GREATERTHAN     reduce using rule 85 (m_expression -> term .)
    LESSTHAN        reduce using rule 85 (m_expression -> term .)
    AND             reduce using rule 85 (m_expression -> term .)
    OR              reduce using rule 85 (m_expression -> term .)
    SEMICOLON       reduce using rule 85 (m_expression -> term .)
    COMMA           reduce using rule 85 (m_expression -> term .)
    RBRACK          reduce using rule 85 (m_expression -> term .)
    RPAREN          reduce using rule 85 (m_expression -> term .)
    FROM            reduce using rule 85 (m_expression -> term .)
    TIMES           shift and go to state 141
    DIVIDE          shift and go to state 142

    multiplication_operator        shift and go to state 140

state 93

    (87) term -> factor .

    TIMES           reduce using rule 87 (term -> factor .)
    DIVIDE          reduce using rule 87 (term -> factor .)
    PLUS            reduce using rule 87 (term -> factor .)
    MINUS           reduce using rule 87 (term -> factor .)
    LESS            reduce using rule 87 (term -> factor .)
    GREATER         reduce using rule 87 (term -> factor .)
    EQUALS          reduce using rule 87 (term -> factor .)
    NOTEQUAL        reduce using rule 87 (term -> factor .)
    GREATERTHAN     reduce using rule 87 (term -> factor .)
    LESSTHAN        reduce using rule 87 (term -> factor .)
    AND             reduce using rule 87 (term -> factor .)
    OR              reduce using rule 87 (term -> factor .)
    SEMICOLON       reduce using rule 87 (term -> factor .)
    COMMA           reduce using rule 87 (term -> factor .)
    RBRACK          reduce using rule 87 (term -> factor .)
    RPAREN          reduce using rule 87 (term -> factor .)
    FROM            reduce using rule 87 (term -> factor .)


state 94

    (89) factor -> variable .

    TIMES           reduce using rule 89 (factor -> variable .)
    DIVIDE          reduce using rule 89 (factor -> variable .)
    PLUS            reduce using rule 89 (factor -> variable .)
    MINUS           reduce using rule 89 (factor -> variable .)
    LESS            reduce using rule 89 (factor -> variable .)
    GREATER         reduce using rule 89 (factor -> variable .)
    EQUALS          reduce using rule 89 (factor -> variable .)
    NOTEQUAL        reduce using rule 89 (factor -> variable .)
    GREATERTHAN     reduce using rule 89 (factor -> variable .)
    LESSTHAN        reduce using rule 89 (factor -> variable .)
    AND             reduce using rule 89 (factor -> variable .)
    OR              reduce using rule 89 (factor -> variable .)
    SEMICOLON       reduce using rule 89 (factor -> variable .)
    COMMA           reduce using rule 89 (factor -> variable .)
    RBRACK          reduce using rule 89 (factor -> variable .)
    RPAREN          reduce using rule 89 (factor -> variable .)
    FROM            reduce using rule 89 (factor -> variable .)


state 95

    (90) factor -> cte .

    TIMES           reduce using rule 90 (factor -> cte .)
    DIVIDE          reduce using rule 90 (factor -> cte .)
    PLUS            reduce using rule 90 (factor -> cte .)
    MINUS           reduce using rule 90 (factor -> cte .)
    LESS            reduce using rule 90 (factor -> cte .)
    GREATER         reduce using rule 90 (factor -> cte .)
    EQUALS          reduce using rule 90 (factor -> cte .)
    NOTEQUAL        reduce using rule 90 (factor -> cte .)
    GREATERTHAN     reduce using rule 90 (factor -> cte .)
    LESSTHAN        reduce using rule 90 (factor -> cte .)
    AND             reduce using rule 90 (factor -> cte .)
    OR              reduce using rule 90 (factor -> cte .)
    SEMICOLON       reduce using rule 90 (factor -> cte .)
    COMMA           reduce using rule 90 (factor -> cte .)
    RBRACK          reduce using rule 90 (factor -> cte .)
    RPAREN          reduce using rule 90 (factor -> cte .)
    FROM            reduce using rule 90 (factor -> cte .)


state 96

    (91) factor -> invocation .

    TIMES           reduce using rule 91 (factor -> invocation .)
    DIVIDE          reduce using rule 91 (factor -> invocation .)
    PLUS            reduce using rule 91 (factor -> invocation .)
    MINUS           reduce using rule 91 (factor -> invocation .)
    LESS            reduce using rule 91 (factor -> invocation .)
    GREATER         reduce using rule 91 (factor -> invocation .)
    EQUALS          reduce using rule 91 (factor -> invocation .)
    NOTEQUAL        reduce using rule 91 (factor -> invocation .)
    GREATERTHAN     reduce using rule 91 (factor -> invocation .)
    LESSTHAN        reduce using rule 91 (factor -> invocation .)
    AND             reduce using rule 91 (factor -> invocation .)
    OR              reduce using rule 91 (factor -> invocation .)
    SEMICOLON       reduce using rule 91 (factor -> invocation .)
    COMMA           reduce using rule 91 (factor -> invocation .)
    RBRACK          reduce using rule 91 (factor -> invocation .)
    RPAREN          reduce using rule 91 (factor -> invocation .)
    FROM            reduce using rule 91 (factor -> invocation .)


state 97

    (92) factor -> expression_parenthesis .

    TIMES           reduce using rule 92 (factor -> expression_parenthesis .)
    DIVIDE          reduce using rule 92 (factor -> expression_parenthesis .)
    PLUS            reduce using rule 92 (factor -> expression_parenthesis .)
    MINUS           reduce using rule 92 (factor -> expression_parenthesis .)
    LESS            reduce using rule 92 (factor -> expression_parenthesis .)
    GREATER         reduce using rule 92 (factor -> expression_parenthesis .)
    EQUALS          reduce using rule 92 (factor -> expression_parenthesis .)
    NOTEQUAL        reduce using rule 92 (factor -> expression_parenthesis .)
    GREATERTHAN     reduce using rule 92 (factor -> expression_parenthesis .)
    LESSTHAN        reduce using rule 92 (factor -> expression_parenthesis .)
    AND             reduce using rule 92 (factor -> expression_parenthesis .)
    OR              reduce using rule 92 (factor -> expression_parenthesis .)
    SEMICOLON       reduce using rule 92 (factor -> expression_parenthesis .)
    COMMA           reduce using rule 92 (factor -> expression_parenthesis .)
    RBRACK          reduce using rule 92 (factor -> expression_parenthesis .)
    RPAREN          reduce using rule 92 (factor -> expression_parenthesis .)
    FROM            reduce using rule 92 (factor -> expression_parenthesis .)


state 98

    (25) variable -> ID .
    (26) variable -> ID . LBRACK expression RBRACK
    (27) variable -> ID . LBRACK expression RBRACK LBRACK expression RBRACK
    (63) invocation -> ID . invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (64) invocation_1 -> . empty
    (114) empty -> .

    TIMES           reduce using rule 25 (variable -> ID .)
    DIVIDE          reduce using rule 25 (variable -> ID .)
    PLUS            reduce using rule 25 (variable -> ID .)
    MINUS           reduce using rule 25 (variable -> ID .)
    LESS            reduce using rule 25 (variable -> ID .)
    GREATER         reduce using rule 25 (variable -> ID .)
    EQUALS          reduce using rule 25 (variable -> ID .)
    NOTEQUAL        reduce using rule 25 (variable -> ID .)
    GREATERTHAN     reduce using rule 25 (variable -> ID .)
    LESSTHAN        reduce using rule 25 (variable -> ID .)
    AND             reduce using rule 25 (variable -> ID .)
    OR              reduce using rule 25 (variable -> ID .)
    SEMICOLON       reduce using rule 25 (variable -> ID .)
    COMMA           reduce using rule 25 (variable -> ID .)
    RBRACK          reduce using rule 25 (variable -> ID .)
    RPAREN          reduce using rule 25 (variable -> ID .)
    FROM            reduce using rule 25 (variable -> ID .)
    LBRACK          shift and go to state 68
    LPAREN          reduce using rule 114 (empty -> .)

    invocation_1                   shift and go to state 78
    empty                          shift and go to state 79

state 99

    (110) cte -> CTEI .

    TIMES           reduce using rule 110 (cte -> CTEI .)
    DIVIDE          reduce using rule 110 (cte -> CTEI .)
    PLUS            reduce using rule 110 (cte -> CTEI .)
    MINUS           reduce using rule 110 (cte -> CTEI .)
    LESS            reduce using rule 110 (cte -> CTEI .)
    GREATER         reduce using rule 110 (cte -> CTEI .)
    EQUALS          reduce using rule 110 (cte -> CTEI .)
    NOTEQUAL        reduce using rule 110 (cte -> CTEI .)
    GREATERTHAN     reduce using rule 110 (cte -> CTEI .)
    LESSTHAN        reduce using rule 110 (cte -> CTEI .)
    AND             reduce using rule 110 (cte -> CTEI .)
    OR              reduce using rule 110 (cte -> CTEI .)
    SEMICOLON       reduce using rule 110 (cte -> CTEI .)
    COMMA           reduce using rule 110 (cte -> CTEI .)
    RBRACK          reduce using rule 110 (cte -> CTEI .)
    RPAREN          reduce using rule 110 (cte -> CTEI .)
    FROM            reduce using rule 110 (cte -> CTEI .)


state 100

    (111) cte -> CTEF .

    TIMES           reduce using rule 111 (cte -> CTEF .)
    DIVIDE          reduce using rule 111 (cte -> CTEF .)
    PLUS            reduce using rule 111 (cte -> CTEF .)
    MINUS           reduce using rule 111 (cte -> CTEF .)
    LESS            reduce using rule 111 (cte -> CTEF .)
    GREATER         reduce using rule 111 (cte -> CTEF .)
    EQUALS          reduce using rule 111 (cte -> CTEF .)
    NOTEQUAL        reduce using rule 111 (cte -> CTEF .)
    GREATERTHAN     reduce using rule 111 (cte -> CTEF .)
    LESSTHAN        reduce using rule 111 (cte -> CTEF .)
    AND             reduce using rule 111 (cte -> CTEF .)
    OR              reduce using rule 111 (cte -> CTEF .)
    SEMICOLON       reduce using rule 111 (cte -> CTEF .)
    COMMA           reduce using rule 111 (cte -> CTEF .)
    RBRACK          reduce using rule 111 (cte -> CTEF .)
    RPAREN          reduce using rule 111 (cte -> CTEF .)
    FROM            reduce using rule 111 (cte -> CTEF .)


state 101

    (112) cte -> CTEC .

    TIMES           reduce using rule 112 (cte -> CTEC .)
    DIVIDE          reduce using rule 112 (cte -> CTEC .)
    PLUS            reduce using rule 112 (cte -> CTEC .)
    MINUS           reduce using rule 112 (cte -> CTEC .)
    LESS            reduce using rule 112 (cte -> CTEC .)
    GREATER         reduce using rule 112 (cte -> CTEC .)
    EQUALS          reduce using rule 112 (cte -> CTEC .)
    NOTEQUAL        reduce using rule 112 (cte -> CTEC .)
    GREATERTHAN     reduce using rule 112 (cte -> CTEC .)
    LESSTHAN        reduce using rule 112 (cte -> CTEC .)
    AND             reduce using rule 112 (cte -> CTEC .)
    OR              reduce using rule 112 (cte -> CTEC .)
    SEMICOLON       reduce using rule 112 (cte -> CTEC .)
    COMMA           reduce using rule 112 (cte -> CTEC .)
    RBRACK          reduce using rule 112 (cte -> CTEC .)
    RPAREN          reduce using rule 112 (cte -> CTEC .)
    FROM            reduce using rule 112 (cte -> CTEC .)


state 102

    (113) cte -> CTEB .

    TIMES           reduce using rule 113 (cte -> CTEB .)
    DIVIDE          reduce using rule 113 (cte -> CTEB .)
    PLUS            reduce using rule 113 (cte -> CTEB .)
    MINUS           reduce using rule 113 (cte -> CTEB .)
    LESS            reduce using rule 113 (cte -> CTEB .)
    GREATER         reduce using rule 113 (cte -> CTEB .)
    EQUALS          reduce using rule 113 (cte -> CTEB .)
    NOTEQUAL        reduce using rule 113 (cte -> CTEB .)
    GREATERTHAN     reduce using rule 113 (cte -> CTEB .)
    LESSTHAN        reduce using rule 113 (cte -> CTEB .)
    AND             reduce using rule 113 (cte -> CTEB .)
    OR              reduce using rule 113 (cte -> CTEB .)
    SEMICOLON       reduce using rule 113 (cte -> CTEB .)
    COMMA           reduce using rule 113 (cte -> CTEB .)
    RBRACK          reduce using rule 113 (cte -> CTEB .)
    RPAREN          reduce using rule 113 (cte -> CTEB .)
    FROM            reduce using rule 113 (cte -> CTEB .)


state 103

    (93) expression_parenthesis -> LPAREN . expression RPAREN
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expression                     shift and go to state 143
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 104

    (75) print -> PRINT LPAREN . print_arguments RPAREN SEMICOLON
    (76) print_arguments -> . print_argument
    (77) print_arguments -> . print_arguments COMMA print_argument
    (78) print_argument -> . CTES
    (79) print_argument -> . expression
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    CTES            shift and go to state 146
    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    print_arguments                shift and go to state 144
    print_argument                 shift and go to state 145
    expression                     shift and go to state 147
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 105

    (7) function_signature -> simple_type ID function_1 LPAREN . open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (21) open_var_declaration -> . empty
    (114) empty -> .

    INT             reduce using rule 114 (empty -> .)
    FLOAT           reduce using rule 114 (empty -> .)
    CHAR            reduce using rule 114 (empty -> .)
    BOOLEAN         reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)

    open_var_declaration           shift and go to state 148
    empty                          shift and go to state 18

state 106

    (8) function_signature -> VOID ID function_1 LPAREN . open_var_declaration parameters close_var_declaration RPAREN var_declarations
    (21) open_var_declaration -> . empty
    (114) empty -> .

    INT             reduce using rule 114 (empty -> .)
    FLOAT           reduce using rule 114 (empty -> .)
    CHAR            reduce using rule 114 (empty -> .)
    BOOLEAN         reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)

    open_var_declaration           shift and go to state 149
    empty                          shift and go to state 18

state 107

    (20) var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .

    VARIABLE        reduce using rule 20 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    FUNCTION        reduce using rule 20 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    MAIN            reduce using rule 20 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)
    LBRACE          reduce using rule 20 (var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration .)


state 108

    (22) close_var_declaration -> empty .

    VARIABLE        reduce using rule 22 (close_var_declaration -> empty .)
    FUNCTION        reduce using rule 22 (close_var_declaration -> empty .)
    MAIN            reduce using rule 22 (close_var_declaration -> empty .)
    LBRACE          reduce using rule 22 (close_var_declaration -> empty .)
    RPAREN          reduce using rule 22 (close_var_declaration -> empty .)


state 109

    (24) variables -> variable COMMA variables .

    SEMICOLON       reduce using rule 24 (variables -> variable COMMA variables .)


state 110

    (26) variable -> ID LBRACK expression . RBRACK
    (27) variable -> ID LBRACK expression . RBRACK LBRACK expression RBRACK

    RBRACK          shift and go to state 150


state 111

    (15) main -> MAIN LPAREN RPAREN main_scope var_declarations . LBRACE statements RBRACE

    LBRACE          shift and go to state 151


state 112

    (9) function_body -> LBRACE statements return RBRACE .

    MAIN            reduce using rule 9 (function_body -> LBRACE statements return RBRACE .)
    FUNCTION        reduce using rule 9 (function_body -> LBRACE statements return RBRACE .)


state 113

    (60) read -> READ LPAREN variable_list . RPAREN SEMICOLON
    (62) variable_list -> variable_list . COMMA variable

    RPAREN          shift and go to state 152
    COMMA           shift and go to state 153


state 114

    (61) variable_list -> variable .

    RPAREN          reduce using rule 61 (variable_list -> variable .)
    COMMA           reduce using rule 61 (variable_list -> variable .)


state 115

    (46) assing_to_call -> variable ASSIGN invocation .
    (91) factor -> invocation .

    RBRACE          reduce using rule 46 (assing_to_call -> variable ASSIGN invocation .)
    RETURN          reduce using rule 46 (assing_to_call -> variable ASSIGN invocation .)
    READ            reduce using rule 46 (assing_to_call -> variable ASSIGN invocation .)
    FOR             reduce using rule 46 (assing_to_call -> variable ASSIGN invocation .)
    DO              reduce using rule 46 (assing_to_call -> variable ASSIGN invocation .)
    WHILE           reduce using rule 46 (assing_to_call -> variable ASSIGN invocation .)
    IF              reduce using rule 46 (assing_to_call -> variable ASSIGN invocation .)
    ID              reduce using rule 46 (assing_to_call -> variable ASSIGN invocation .)
    PRINT           reduce using rule 46 (assing_to_call -> variable ASSIGN invocation .)
    TIMES           reduce using rule 91 (factor -> invocation .)
    DIVIDE          reduce using rule 91 (factor -> invocation .)
    PLUS            reduce using rule 91 (factor -> invocation .)
    MINUS           reduce using rule 91 (factor -> invocation .)
    LESS            reduce using rule 91 (factor -> invocation .)
    GREATER         reduce using rule 91 (factor -> invocation .)
    EQUALS          reduce using rule 91 (factor -> invocation .)
    NOTEQUAL        reduce using rule 91 (factor -> invocation .)
    GREATERTHAN     reduce using rule 91 (factor -> invocation .)
    LESSTHAN        reduce using rule 91 (factor -> invocation .)
    AND             reduce using rule 91 (factor -> invocation .)
    OR              reduce using rule 91 (factor -> invocation .)
    SEMICOLON       reduce using rule 91 (factor -> invocation .)


state 116

    (80) assingation -> variable ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 154


state 117

    (48) for -> FOR LPAREN ID . for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (49) for_1 -> . empty
    (114) empty -> .

    ASSIGN          reduce using rule 114 (empty -> .)

    for_1                          shift and go to state 155
    empty                          shift and go to state 156

state 118

    (63) invocation -> ID invocation_1 LPAREN . invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (65) invocation_2 -> . empty
    (114) empty -> .

    NOT             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEB            reduce using rule 114 (empty -> .)
    LPAREN          reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)

    invocation_2                   shift and go to state 157
    empty                          shift and go to state 158

state 119

    (47) do_while -> DO breadcrumb LBRACE . statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (32) statements -> . statements statement
    (33) statements -> . statement
    (34) statements -> . empty
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (114) empty -> .
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 114 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statements                     shift and go to state 159
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 120

    (53) while -> WHILE breadcrumb LPAREN . expression RPAREN gotof LBRACE statements RBRACE
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expression                     shift and go to state 160
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 121

    (56) if_else -> IF LPAREN expression . RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (55) if -> IF LPAREN expression . RPAREN gotof LBRACE statements RBRACE

    RPAREN          shift and go to state 161


state 122

    (11) return -> RETURN expressions SEMICOLON .

    RBRACE          reduce using rule 11 (return -> RETURN expressions SEMICOLON .)
    RETURN          reduce using rule 11 (return -> RETURN expressions SEMICOLON .)
    READ            reduce using rule 11 (return -> RETURN expressions SEMICOLON .)
    FOR             reduce using rule 11 (return -> RETURN expressions SEMICOLON .)
    DO              reduce using rule 11 (return -> RETURN expressions SEMICOLON .)
    WHILE           reduce using rule 11 (return -> RETURN expressions SEMICOLON .)
    IF              reduce using rule 11 (return -> RETURN expressions SEMICOLON .)
    ID              reduce using rule 11 (return -> RETURN expressions SEMICOLON .)
    PRINT           reduce using rule 11 (return -> RETURN expressions SEMICOLON .)


state 123

    (70) expressions -> expressions COMMA . invocation_4 expression invocation_3
    (67) invocation_4 -> . empty
    (114) empty -> .

    NOT             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    CTEI            reduce using rule 114 (empty -> .)
    CTEF            reduce using rule 114 (empty -> .)
    CTEC            reduce using rule 114 (empty -> .)
    CTEB            reduce using rule 114 (empty -> .)
    LPAREN          reduce using rule 114 (empty -> .)

    invocation_4                   shift and go to state 162
    empty                          shift and go to state 163

state 124

    (71) expressions -> expression invocation_3 .

    SEMICOLON       reduce using rule 71 (expressions -> expression invocation_3 .)
    COMMA           reduce using rule 71 (expressions -> expression invocation_3 .)
    RPAREN          reduce using rule 71 (expressions -> expression invocation_3 .)


state 125

    (66) invocation_3 -> empty .

    SEMICOLON       reduce using rule 66 (invocation_3 -> empty .)
    COMMA           reduce using rule 66 (invocation_3 -> empty .)
    RPAREN          reduce using rule 66 (invocation_3 -> empty .)


state 126

    (82) t_expression -> t_expression boolean_operator . g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    g_expression                   shift and go to state 164
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 127

    (102) boolean_operator -> AND .

    ID              reduce using rule 102 (boolean_operator -> AND .)
    CTEI            reduce using rule 102 (boolean_operator -> AND .)
    CTEF            reduce using rule 102 (boolean_operator -> AND .)
    CTEC            reduce using rule 102 (boolean_operator -> AND .)
    CTEB            reduce using rule 102 (boolean_operator -> AND .)
    LPAREN          reduce using rule 102 (boolean_operator -> AND .)


state 128

    (103) boolean_operator -> OR .

    ID              reduce using rule 103 (boolean_operator -> OR .)
    CTEI            reduce using rule 103 (boolean_operator -> OR .)
    CTEF            reduce using rule 103 (boolean_operator -> OR .)
    CTEC            reduce using rule 103 (boolean_operator -> OR .)
    CTEB            reduce using rule 103 (boolean_operator -> OR .)
    LPAREN          reduce using rule 103 (boolean_operator -> OR .)


state 129

    (74) expression -> NOT t_expression .
    (82) t_expression -> t_expression . boolean_operator g_expression
    (102) boolean_operator -> . AND
    (103) boolean_operator -> . OR

    SEMICOLON       reduce using rule 74 (expression -> NOT t_expression .)
    COMMA           reduce using rule 74 (expression -> NOT t_expression .)
    RBRACK          reduce using rule 74 (expression -> NOT t_expression .)
    RPAREN          reduce using rule 74 (expression -> NOT t_expression .)
    FROM            reduce using rule 74 (expression -> NOT t_expression .)
    AND             shift and go to state 127
    OR              shift and go to state 128

    boolean_operator               shift and go to state 126

state 130

    (84) g_expression -> g_expression comparison_operator . m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    m_expression                   shift and go to state 165
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 131

    (94) comparison_operator -> LESS .

    ID              reduce using rule 94 (comparison_operator -> LESS .)
    CTEI            reduce using rule 94 (comparison_operator -> LESS .)
    CTEF            reduce using rule 94 (comparison_operator -> LESS .)
    CTEC            reduce using rule 94 (comparison_operator -> LESS .)
    CTEB            reduce using rule 94 (comparison_operator -> LESS .)
    LPAREN          reduce using rule 94 (comparison_operator -> LESS .)


state 132

    (95) comparison_operator -> GREATER .

    ID              reduce using rule 95 (comparison_operator -> GREATER .)
    CTEI            reduce using rule 95 (comparison_operator -> GREATER .)
    CTEF            reduce using rule 95 (comparison_operator -> GREATER .)
    CTEC            reduce using rule 95 (comparison_operator -> GREATER .)
    CTEB            reduce using rule 95 (comparison_operator -> GREATER .)
    LPAREN          reduce using rule 95 (comparison_operator -> GREATER .)


state 133

    (96) comparison_operator -> EQUALS .

    ID              reduce using rule 96 (comparison_operator -> EQUALS .)
    CTEI            reduce using rule 96 (comparison_operator -> EQUALS .)
    CTEF            reduce using rule 96 (comparison_operator -> EQUALS .)
    CTEC            reduce using rule 96 (comparison_operator -> EQUALS .)
    CTEB            reduce using rule 96 (comparison_operator -> EQUALS .)
    LPAREN          reduce using rule 96 (comparison_operator -> EQUALS .)


state 134

    (97) comparison_operator -> NOTEQUAL .

    ID              reduce using rule 97 (comparison_operator -> NOTEQUAL .)
    CTEI            reduce using rule 97 (comparison_operator -> NOTEQUAL .)
    CTEF            reduce using rule 97 (comparison_operator -> NOTEQUAL .)
    CTEC            reduce using rule 97 (comparison_operator -> NOTEQUAL .)
    CTEB            reduce using rule 97 (comparison_operator -> NOTEQUAL .)
    LPAREN          reduce using rule 97 (comparison_operator -> NOTEQUAL .)


state 135

    (98) comparison_operator -> GREATERTHAN .

    ID              reduce using rule 98 (comparison_operator -> GREATERTHAN .)
    CTEI            reduce using rule 98 (comparison_operator -> GREATERTHAN .)
    CTEF            reduce using rule 98 (comparison_operator -> GREATERTHAN .)
    CTEC            reduce using rule 98 (comparison_operator -> GREATERTHAN .)
    CTEB            reduce using rule 98 (comparison_operator -> GREATERTHAN .)
    LPAREN          reduce using rule 98 (comparison_operator -> GREATERTHAN .)


state 136

    (99) comparison_operator -> LESSTHAN .

    ID              reduce using rule 99 (comparison_operator -> LESSTHAN .)
    CTEI            reduce using rule 99 (comparison_operator -> LESSTHAN .)
    CTEF            reduce using rule 99 (comparison_operator -> LESSTHAN .)
    CTEC            reduce using rule 99 (comparison_operator -> LESSTHAN .)
    CTEB            reduce using rule 99 (comparison_operator -> LESSTHAN .)
    LPAREN          reduce using rule 99 (comparison_operator -> LESSTHAN .)


state 137

    (86) m_expression -> m_expression addition_operator . term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    term                           shift and go to state 166
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 138

    (100) addition_operator -> PLUS .

    ID              reduce using rule 100 (addition_operator -> PLUS .)
    CTEI            reduce using rule 100 (addition_operator -> PLUS .)
    CTEF            reduce using rule 100 (addition_operator -> PLUS .)
    CTEC            reduce using rule 100 (addition_operator -> PLUS .)
    CTEB            reduce using rule 100 (addition_operator -> PLUS .)
    LPAREN          reduce using rule 100 (addition_operator -> PLUS .)


state 139

    (101) addition_operator -> MINUS .

    ID              reduce using rule 101 (addition_operator -> MINUS .)
    CTEI            reduce using rule 101 (addition_operator -> MINUS .)
    CTEF            reduce using rule 101 (addition_operator -> MINUS .)
    CTEC            reduce using rule 101 (addition_operator -> MINUS .)
    CTEB            reduce using rule 101 (addition_operator -> MINUS .)
    LPAREN          reduce using rule 101 (addition_operator -> MINUS .)


state 140

    (88) term -> term multiplication_operator . factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    factor                         shift and go to state 167
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 141

    (104) multiplication_operator -> TIMES .

    ID              reduce using rule 104 (multiplication_operator -> TIMES .)
    CTEI            reduce using rule 104 (multiplication_operator -> TIMES .)
    CTEF            reduce using rule 104 (multiplication_operator -> TIMES .)
    CTEC            reduce using rule 104 (multiplication_operator -> TIMES .)
    CTEB            reduce using rule 104 (multiplication_operator -> TIMES .)
    LPAREN          reduce using rule 104 (multiplication_operator -> TIMES .)


state 142

    (105) multiplication_operator -> DIVIDE .

    ID              reduce using rule 105 (multiplication_operator -> DIVIDE .)
    CTEI            reduce using rule 105 (multiplication_operator -> DIVIDE .)
    CTEF            reduce using rule 105 (multiplication_operator -> DIVIDE .)
    CTEC            reduce using rule 105 (multiplication_operator -> DIVIDE .)
    CTEB            reduce using rule 105 (multiplication_operator -> DIVIDE .)
    LPAREN          reduce using rule 105 (multiplication_operator -> DIVIDE .)


state 143

    (93) expression_parenthesis -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 168


state 144

    (75) print -> PRINT LPAREN print_arguments . RPAREN SEMICOLON
    (77) print_arguments -> print_arguments . COMMA print_argument

    RPAREN          shift and go to state 169
    COMMA           shift and go to state 170


state 145

    (76) print_arguments -> print_argument .

    RPAREN          reduce using rule 76 (print_arguments -> print_argument .)
    COMMA           reduce using rule 76 (print_arguments -> print_argument .)


state 146

    (78) print_argument -> CTES .

    RPAREN          reduce using rule 78 (print_argument -> CTES .)
    COMMA           reduce using rule 78 (print_argument -> CTES .)


state 147

    (79) print_argument -> expression .

    RPAREN          reduce using rule 79 (print_argument -> expression .)
    COMMA           reduce using rule 79 (print_argument -> expression .)


state 148

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration . parameters close_var_declaration RPAREN var_declarations
    (28) parameters -> . parameters COMMA parameter
    (29) parameters -> . parameter
    (30) parameters -> . empty
    (31) parameter -> . simple_type ID
    (114) empty -> .
    (106) simple_type -> . INT
    (107) simple_type -> . FLOAT
    (108) simple_type -> . CHAR
    (109) simple_type -> . BOOLEAN

    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    simple_type                    shift and go to state 171
    parameters                     shift and go to state 172
    parameter                      shift and go to state 173
    empty                          shift and go to state 174

state 149

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration . parameters close_var_declaration RPAREN var_declarations
    (28) parameters -> . parameters COMMA parameter
    (29) parameters -> . parameter
    (30) parameters -> . empty
    (31) parameter -> . simple_type ID
    (114) empty -> .
    (106) simple_type -> . INT
    (107) simple_type -> . FLOAT
    (108) simple_type -> . CHAR
    (109) simple_type -> . BOOLEAN

    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    parameters                     shift and go to state 175
    parameter                      shift and go to state 173
    empty                          shift and go to state 174
    simple_type                    shift and go to state 171

state 150

    (26) variable -> ID LBRACK expression RBRACK .
    (27) variable -> ID LBRACK expression RBRACK . LBRACK expression RBRACK

    COMMA           reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    TIMES           reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    PLUS            reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    MINUS           reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    LESS            reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    GREATER         reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    EQUALS          reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    AND             reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    OR              reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    RBRACK          reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    RPAREN          reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    FROM            reduce using rule 26 (variable -> ID LBRACK expression RBRACK .)
    LBRACK          shift and go to state 176


state 151

    (15) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE . statements RBRACE
    (32) statements -> . statements statement
    (33) statements -> . statement
    (34) statements -> . empty
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (114) empty -> .
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 114 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statements                     shift and go to state 177
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 152

    (60) read -> READ LPAREN variable_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 178


state 153

    (62) variable_list -> variable_list COMMA . variable
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

    ID              shift and go to state 38

    variable                       shift and go to state 179

state 154

    (80) assingation -> variable ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 80 (assingation -> variable ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 80 (assingation -> variable ASSIGN expression SEMICOLON .)
    READ            reduce using rule 80 (assingation -> variable ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 80 (assingation -> variable ASSIGN expression SEMICOLON .)
    DO              reduce using rule 80 (assingation -> variable ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 80 (assingation -> variable ASSIGN expression SEMICOLON .)
    IF              reduce using rule 80 (assingation -> variable ASSIGN expression SEMICOLON .)
    ID              reduce using rule 80 (assingation -> variable ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 80 (assingation -> variable ASSIGN expression SEMICOLON .)


state 155

    (48) for -> FOR LPAREN ID for_1 . ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4

    ASSIGN          shift and go to state 180


state 156

    (49) for_1 -> empty .

    ASSIGN          reduce using rule 49 (for_1 -> empty .)


state 157

    (63) invocation -> ID invocation_1 LPAREN invocation_2 . expressions RPAREN invocation_5 SEMICOLON invocation_6
    (70) expressions -> . expressions COMMA invocation_4 expression invocation_3
    (71) expressions -> . expression invocation_3
    (72) expressions -> . empty
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (114) empty -> .
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    RPAREN          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expressions                    shift and go to state 181
    expression                     shift and go to state 86
    empty                          shift and go to state 87
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 158

    (65) invocation_2 -> empty .

    NOT             reduce using rule 65 (invocation_2 -> empty .)
    ID              reduce using rule 65 (invocation_2 -> empty .)
    CTEI            reduce using rule 65 (invocation_2 -> empty .)
    CTEF            reduce using rule 65 (invocation_2 -> empty .)
    CTEC            reduce using rule 65 (invocation_2 -> empty .)
    CTEB            reduce using rule 65 (invocation_2 -> empty .)
    LPAREN          reduce using rule 65 (invocation_2 -> empty .)
    RPAREN          reduce using rule 65 (invocation_2 -> empty .)
    COMMA           reduce using rule 65 (invocation_2 -> empty .)


state 159

    (47) do_while -> DO breadcrumb LBRACE statements . RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (32) statements -> statements . statement
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (114) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          shift and go to state 182
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! RBRACE          [ reduce using rule 114 (empty -> .) ]
  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55
    empty                          shift and go to state 74

state 160

    (53) while -> WHILE breadcrumb LPAREN expression . RPAREN gotof LBRACE statements RBRACE

    RPAREN          shift and go to state 183


state 161

    (56) if_else -> IF LPAREN expression RPAREN . gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (55) if -> IF LPAREN expression RPAREN . gotof LBRACE statements RBRACE
    (59) gotof -> . empty
    (114) empty -> .

    LBRACE          reduce using rule 114 (empty -> .)

    gotof                          shift and go to state 184
    empty                          shift and go to state 185

state 162

    (70) expressions -> expressions COMMA invocation_4 . expression invocation_3
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expression                     shift and go to state 186
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 163

    (67) invocation_4 -> empty .

    NOT             reduce using rule 67 (invocation_4 -> empty .)
    ID              reduce using rule 67 (invocation_4 -> empty .)
    CTEI            reduce using rule 67 (invocation_4 -> empty .)
    CTEF            reduce using rule 67 (invocation_4 -> empty .)
    CTEC            reduce using rule 67 (invocation_4 -> empty .)
    CTEB            reduce using rule 67 (invocation_4 -> empty .)
    LPAREN          reduce using rule 67 (invocation_4 -> empty .)


state 164

    (82) t_expression -> t_expression boolean_operator g_expression .
    (84) g_expression -> g_expression . comparison_operator m_expression
    (94) comparison_operator -> . LESS
    (95) comparison_operator -> . GREATER
    (96) comparison_operator -> . EQUALS
    (97) comparison_operator -> . NOTEQUAL
    (98) comparison_operator -> . GREATERTHAN
    (99) comparison_operator -> . LESSTHAN

    AND             reduce using rule 82 (t_expression -> t_expression boolean_operator g_expression .)
    OR              reduce using rule 82 (t_expression -> t_expression boolean_operator g_expression .)
    SEMICOLON       reduce using rule 82 (t_expression -> t_expression boolean_operator g_expression .)
    COMMA           reduce using rule 82 (t_expression -> t_expression boolean_operator g_expression .)
    RBRACK          reduce using rule 82 (t_expression -> t_expression boolean_operator g_expression .)
    RPAREN          reduce using rule 82 (t_expression -> t_expression boolean_operator g_expression .)
    FROM            reduce using rule 82 (t_expression -> t_expression boolean_operator g_expression .)
    LESS            shift and go to state 131
    GREATER         shift and go to state 132
    EQUALS          shift and go to state 133
    NOTEQUAL        shift and go to state 134
    GREATERTHAN     shift and go to state 135
    LESSTHAN        shift and go to state 136

    comparison_operator            shift and go to state 130

state 165

    (84) g_expression -> g_expression comparison_operator m_expression .
    (86) m_expression -> m_expression . addition_operator term
    (100) addition_operator -> . PLUS
    (101) addition_operator -> . MINUS

    LESS            reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    GREATER         reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    EQUALS          reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    NOTEQUAL        reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    GREATERTHAN     reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    LESSTHAN        reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    AND             reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    OR              reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    SEMICOLON       reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    COMMA           reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    RBRACK          reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    RPAREN          reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    FROM            reduce using rule 84 (g_expression -> g_expression comparison_operator m_expression .)
    PLUS            shift and go to state 138
    MINUS           shift and go to state 139

    addition_operator              shift and go to state 137

state 166

    (86) m_expression -> m_expression addition_operator term .
    (88) term -> term . multiplication_operator factor
    (104) multiplication_operator -> . TIMES
    (105) multiplication_operator -> . DIVIDE

    PLUS            reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    MINUS           reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    LESS            reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    GREATER         reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    EQUALS          reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    NOTEQUAL        reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    GREATERTHAN     reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    LESSTHAN        reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    AND             reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    OR              reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    SEMICOLON       reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    COMMA           reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    RBRACK          reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    RPAREN          reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    FROM            reduce using rule 86 (m_expression -> m_expression addition_operator term .)
    TIMES           shift and go to state 141
    DIVIDE          shift and go to state 142

    multiplication_operator        shift and go to state 140

state 167

    (88) term -> term multiplication_operator factor .

    TIMES           reduce using rule 88 (term -> term multiplication_operator factor .)
    DIVIDE          reduce using rule 88 (term -> term multiplication_operator factor .)
    PLUS            reduce using rule 88 (term -> term multiplication_operator factor .)
    MINUS           reduce using rule 88 (term -> term multiplication_operator factor .)
    LESS            reduce using rule 88 (term -> term multiplication_operator factor .)
    GREATER         reduce using rule 88 (term -> term multiplication_operator factor .)
    EQUALS          reduce using rule 88 (term -> term multiplication_operator factor .)
    NOTEQUAL        reduce using rule 88 (term -> term multiplication_operator factor .)
    GREATERTHAN     reduce using rule 88 (term -> term multiplication_operator factor .)
    LESSTHAN        reduce using rule 88 (term -> term multiplication_operator factor .)
    AND             reduce using rule 88 (term -> term multiplication_operator factor .)
    OR              reduce using rule 88 (term -> term multiplication_operator factor .)
    SEMICOLON       reduce using rule 88 (term -> term multiplication_operator factor .)
    COMMA           reduce using rule 88 (term -> term multiplication_operator factor .)
    RBRACK          reduce using rule 88 (term -> term multiplication_operator factor .)
    RPAREN          reduce using rule 88 (term -> term multiplication_operator factor .)
    FROM            reduce using rule 88 (term -> term multiplication_operator factor .)


state 168

    (93) expression_parenthesis -> LPAREN expression RPAREN .

    TIMES           reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESS            reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    AND             reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    OR              reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)
    FROM            reduce using rule 93 (expression_parenthesis -> LPAREN expression RPAREN .)


state 169

    (75) print -> PRINT LPAREN print_arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 187


state 170

    (77) print_arguments -> print_arguments COMMA . print_argument
    (78) print_argument -> . CTES
    (79) print_argument -> . expression
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    CTES            shift and go to state 146
    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    print_argument                 shift and go to state 188
    expression                     shift and go to state 147
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 171

    (31) parameter -> simple_type . ID

    ID              shift and go to state 189


state 172

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters . close_var_declaration RPAREN var_declarations
    (28) parameters -> parameters . COMMA parameter
    (22) close_var_declaration -> . empty
    (114) empty -> .

    COMMA           shift and go to state 191
    RPAREN          reduce using rule 114 (empty -> .)

    close_var_declaration          shift and go to state 190
    empty                          shift and go to state 108

state 173

    (29) parameters -> parameter .

    COMMA           reduce using rule 29 (parameters -> parameter .)
    RPAREN          reduce using rule 29 (parameters -> parameter .)


state 174

    (30) parameters -> empty .

    COMMA           reduce using rule 30 (parameters -> empty .)
    RPAREN          reduce using rule 30 (parameters -> empty .)


state 175

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters . close_var_declaration RPAREN var_declarations
    (28) parameters -> parameters . COMMA parameter
    (22) close_var_declaration -> . empty
    (114) empty -> .

    COMMA           shift and go to state 191
    RPAREN          reduce using rule 114 (empty -> .)

    close_var_declaration          shift and go to state 192
    empty                          shift and go to state 108

state 176

    (27) variable -> ID LBRACK expression RBRACK LBRACK . expression RBRACK
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expression                     shift and go to state 193
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 177

    (15) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements . RBRACE
    (32) statements -> statements . statement
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (114) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          shift and go to state 194
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! RBRACE          [ reduce using rule 114 (empty -> .) ]
  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55
    empty                          shift and go to state 74

state 178

    (60) read -> READ LPAREN variable_list RPAREN SEMICOLON .

    RBRACE          reduce using rule 60 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 60 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    READ            reduce using rule 60 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    FOR             reduce using rule 60 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    DO              reduce using rule 60 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 60 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    IF              reduce using rule 60 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    ID              reduce using rule 60 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 60 (read -> READ LPAREN variable_list RPAREN SEMICOLON .)


state 179

    (62) variable_list -> variable_list COMMA variable .

    RPAREN          reduce using rule 62 (variable_list -> variable_list COMMA variable .)
    COMMA           reduce using rule 62 (variable_list -> variable_list COMMA variable .)


state 180

    (48) for -> FOR LPAREN ID for_1 ASSIGN . expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expression                     shift and go to state 195
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 181

    (63) invocation -> ID invocation_1 LPAREN invocation_2 expressions . RPAREN invocation_5 SEMICOLON invocation_6
    (70) expressions -> expressions . COMMA invocation_4 expression invocation_3

    RPAREN          shift and go to state 196
    COMMA           shift and go to state 123


state 182

    (47) do_while -> DO breadcrumb LBRACE statements RBRACE . WHILE LPAREN expression RPAREN gotot SEMICOLON

    WHILE           shift and go to state 197


state 183

    (53) while -> WHILE breadcrumb LPAREN expression RPAREN . gotof LBRACE statements RBRACE
    (59) gotof -> . empty
    (114) empty -> .

    LBRACE          reduce using rule 114 (empty -> .)

    gotof                          shift and go to state 198
    empty                          shift and go to state 185

state 184

    (56) if_else -> IF LPAREN expression RPAREN gotof . LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (55) if -> IF LPAREN expression RPAREN gotof . LBRACE statements RBRACE

    LBRACE          shift and go to state 199


state 185

    (59) gotof -> empty .

    LBRACE          reduce using rule 59 (gotof -> empty .)


state 186

    (70) expressions -> expressions COMMA invocation_4 expression . invocation_3
    (66) invocation_3 -> . empty
    (114) empty -> .

    SEMICOLON       reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)

    invocation_3                   shift and go to state 200
    empty                          shift and go to state 125

state 187

    (75) print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .

    RBRACE          reduce using rule 75 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    RETURN          reduce using rule 75 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    READ            reduce using rule 75 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    FOR             reduce using rule 75 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    DO              reduce using rule 75 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    WHILE           reduce using rule 75 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    IF              reduce using rule 75 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    ID              reduce using rule 75 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    PRINT           reduce using rule 75 (print -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)


state 188

    (77) print_arguments -> print_arguments COMMA print_argument .

    RPAREN          reduce using rule 77 (print_arguments -> print_arguments COMMA print_argument .)
    COMMA           reduce using rule 77 (print_arguments -> print_arguments COMMA print_argument .)


state 189

    (31) parameter -> simple_type ID .

    COMMA           reduce using rule 31 (parameter -> simple_type ID .)
    RPAREN          reduce using rule 31 (parameter -> simple_type ID .)


state 190

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration . RPAREN var_declarations

    RPAREN          shift and go to state 201


state 191

    (28) parameters -> parameters COMMA . parameter
    (31) parameter -> . simple_type ID
    (106) simple_type -> . INT
    (107) simple_type -> . FLOAT
    (108) simple_type -> . CHAR
    (109) simple_type -> . BOOLEAN

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27
    BOOLEAN         shift and go to state 28

    parameter                      shift and go to state 202
    simple_type                    shift and go to state 171

state 192

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration . RPAREN var_declarations

    RPAREN          shift and go to state 203


state 193

    (27) variable -> ID LBRACK expression RBRACK LBRACK expression . RBRACK

    RBRACK          shift and go to state 204


state 194

    (15) main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .

    END             reduce using rule 15 (main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE .)


state 195

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression . for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (50) for_2 -> . empty
    (114) empty -> .

    FROM            reduce using rule 114 (empty -> .)

    for_2                          shift and go to state 205
    empty                          shift and go to state 206

state 196

    (63) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN . invocation_5 SEMICOLON invocation_6
    (68) invocation_5 -> . empty
    (114) empty -> .

    SEMICOLON       reduce using rule 114 (empty -> .)

    invocation_5                   shift and go to state 207
    empty                          shift and go to state 208

state 197

    (47) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE . LPAREN expression RPAREN gotot SEMICOLON

    LPAREN          shift and go to state 209


state 198

    (53) while -> WHILE breadcrumb LPAREN expression RPAREN gotof . LBRACE statements RBRACE

    LBRACE          shift and go to state 210


state 199

    (56) if_else -> IF LPAREN expression RPAREN gotof LBRACE . statements RBRACE ELSE goto LBRACE statements RBRACE
    (55) if -> IF LPAREN expression RPAREN gotof LBRACE . statements RBRACE
    (32) statements -> . statements statement
    (33) statements -> . statement
    (34) statements -> . empty
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (114) empty -> .
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 114 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statements                     shift and go to state 211
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 200

    (70) expressions -> expressions COMMA invocation_4 expression invocation_3 .

    SEMICOLON       reduce using rule 70 (expressions -> expressions COMMA invocation_4 expression invocation_3 .)
    COMMA           reduce using rule 70 (expressions -> expressions COMMA invocation_4 expression invocation_3 .)
    RPAREN          reduce using rule 70 (expressions -> expressions COMMA invocation_4 expression invocation_3 .)


state 201

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN . var_declarations
    (17) var_declarations -> . var_declaration_list
    (18) var_declarations -> . empty
    (19) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (20) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    LBRACE          reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 212
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 202

    (28) parameters -> parameters COMMA parameter .

    COMMA           reduce using rule 28 (parameters -> parameters COMMA parameter .)
    RPAREN          reduce using rule 28 (parameters -> parameters COMMA parameter .)


state 203

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN . var_declarations
    (17) var_declarations -> . var_declaration_list
    (18) var_declarations -> . empty
    (19) var_declaration_list -> . var_declaration var_declarations
    (114) empty -> .
    (20) var_declaration -> . VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration

    LBRACE          reduce using rule 114 (empty -> .)
    VARIABLE        shift and go to state 11

    var_declarations               shift and go to state 213
    var_declaration_list           shift and go to state 8
    empty                          shift and go to state 9
    var_declaration                shift and go to state 10

state 204

    (27) variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .

    COMMA           reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    ASSIGN          reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    TIMES           reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    PLUS            reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    MINUS           reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESS            reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATER         reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    EQUALS          reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    NOTEQUAL        reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    GREATERTHAN     reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    LESSTHAN        reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    AND             reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    OR              reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RBRACK          reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    RPAREN          reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)
    FROM            reduce using rule 27 (variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK .)


state 205

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 . FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4

    FROM            shift and go to state 214


state 206

    (50) for_2 -> empty .

    FROM            reduce using rule 50 (for_2 -> empty .)


state 207

    (63) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 . SEMICOLON invocation_6

    SEMICOLON       shift and go to state 215


state 208

    (68) invocation_5 -> empty .

    SEMICOLON       reduce using rule 68 (invocation_5 -> empty .)


state 209

    (47) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN . expression RPAREN gotot SEMICOLON
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expression                     shift and go to state 216
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 210

    (53) while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE . statements RBRACE
    (32) statements -> . statements statement
    (33) statements -> . statement
    (34) statements -> . empty
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (114) empty -> .
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 114 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statements                     shift and go to state 217
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 211

    (56) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements . RBRACE ELSE goto LBRACE statements RBRACE
    (55) if -> IF LPAREN expression RPAREN gotof LBRACE statements . RBRACE
    (32) statements -> statements . statement
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (114) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          shift and go to state 218
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! RBRACE          [ reduce using rule 114 (empty -> .) ]
  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55
    empty                          shift and go to state 74

state 212

    (7) function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .

    LBRACE          reduce using rule 7 (function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .)


state 213

    (8) function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .

    LBRACE          reduce using rule 8 (function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations .)


state 214

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM . expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (73) expression -> . t_expression
    (74) expression -> . NOT t_expression
    (81) t_expression -> . g_expression
    (82) t_expression -> . t_expression boolean_operator g_expression
    (83) g_expression -> . m_expression
    (84) g_expression -> . g_expression comparison_operator m_expression
    (85) m_expression -> . term
    (86) m_expression -> . m_expression addition_operator term
    (87) term -> . factor
    (88) term -> . term multiplication_operator factor
    (89) factor -> . variable
    (90) factor -> . cte
    (91) factor -> . invocation
    (92) factor -> . expression_parenthesis
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (110) cte -> . CTEI
    (111) cte -> . CTEF
    (112) cte -> . CTEC
    (113) cte -> . CTEB
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (93) expression_parenthesis -> . LPAREN expression RPAREN

    NOT             shift and go to state 89
    ID              shift and go to state 98
    CTEI            shift and go to state 99
    CTEF            shift and go to state 100
    CTEC            shift and go to state 101
    CTEB            shift and go to state 102
    LPAREN          shift and go to state 103

    expression                     shift and go to state 219
    t_expression                   shift and go to state 88
    g_expression                   shift and go to state 90
    m_expression                   shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    variable                       shift and go to state 94
    cte                            shift and go to state 95
    invocation                     shift and go to state 96
    expression_parenthesis         shift and go to state 97

state 215

    (63) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON . invocation_6
    (69) invocation_6 -> . empty
    (114) empty -> .

    RBRACE          reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    READ            reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    PRINT           reduce using rule 114 (empty -> .)
    TIMES           reduce using rule 114 (empty -> .)
    DIVIDE          reduce using rule 114 (empty -> .)
    PLUS            reduce using rule 114 (empty -> .)
    MINUS           reduce using rule 114 (empty -> .)
    LESS            reduce using rule 114 (empty -> .)
    GREATER         reduce using rule 114 (empty -> .)
    EQUALS          reduce using rule 114 (empty -> .)
    NOTEQUAL        reduce using rule 114 (empty -> .)
    GREATERTHAN     reduce using rule 114 (empty -> .)
    LESSTHAN        reduce using rule 114 (empty -> .)
    AND             reduce using rule 114 (empty -> .)
    OR              reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    RBRACK          reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)
    FROM            reduce using rule 114 (empty -> .)

    invocation_6                   shift and go to state 220
    empty                          shift and go to state 221

state 216

    (47) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression . RPAREN gotot SEMICOLON

    RPAREN          shift and go to state 222


state 217

    (53) while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements . RBRACE
    (32) statements -> statements . statement
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (114) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          shift and go to state 223
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! RBRACE          [ reduce using rule 114 (empty -> .) ]
  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55
    empty                          shift and go to state 74

state 218

    (56) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE . ELSE goto LBRACE statements RBRACE
    (55) if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .

    ELSE            shift and go to state 224
    RBRACE          reduce using rule 55 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    RETURN          reduce using rule 55 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    READ            reduce using rule 55 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    FOR             reduce using rule 55 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    DO              reduce using rule 55 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    WHILE           reduce using rule 55 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    IF              reduce using rule 55 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    ID              reduce using rule 55 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    PRINT           reduce using rule 55 (if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE .)


state 219

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression . RPAREN for_3 DO LBRACE statements RBRACE for_4

    RPAREN          shift and go to state 225


state 220

    (63) invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .

    RBRACE          reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    RETURN          reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    READ            reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    FOR             reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    DO              reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    WHILE           reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    IF              reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    ID              reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    PRINT           reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    TIMES           reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    DIVIDE          reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    PLUS            reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    MINUS           reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    LESS            reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    GREATER         reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    EQUALS          reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    NOTEQUAL        reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    GREATERTHAN     reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    LESSTHAN        reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    AND             reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    OR              reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    SEMICOLON       reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    COMMA           reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    RBRACK          reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    RPAREN          reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)
    FROM            reduce using rule 63 (invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6 .)


state 221

    (69) invocation_6 -> empty .

    RBRACE          reduce using rule 69 (invocation_6 -> empty .)
    RETURN          reduce using rule 69 (invocation_6 -> empty .)
    READ            reduce using rule 69 (invocation_6 -> empty .)
    FOR             reduce using rule 69 (invocation_6 -> empty .)
    DO              reduce using rule 69 (invocation_6 -> empty .)
    WHILE           reduce using rule 69 (invocation_6 -> empty .)
    IF              reduce using rule 69 (invocation_6 -> empty .)
    ID              reduce using rule 69 (invocation_6 -> empty .)
    PRINT           reduce using rule 69 (invocation_6 -> empty .)
    TIMES           reduce using rule 69 (invocation_6 -> empty .)
    DIVIDE          reduce using rule 69 (invocation_6 -> empty .)
    PLUS            reduce using rule 69 (invocation_6 -> empty .)
    MINUS           reduce using rule 69 (invocation_6 -> empty .)
    LESS            reduce using rule 69 (invocation_6 -> empty .)
    GREATER         reduce using rule 69 (invocation_6 -> empty .)
    EQUALS          reduce using rule 69 (invocation_6 -> empty .)
    NOTEQUAL        reduce using rule 69 (invocation_6 -> empty .)
    GREATERTHAN     reduce using rule 69 (invocation_6 -> empty .)
    LESSTHAN        reduce using rule 69 (invocation_6 -> empty .)
    AND             reduce using rule 69 (invocation_6 -> empty .)
    OR              reduce using rule 69 (invocation_6 -> empty .)
    SEMICOLON       reduce using rule 69 (invocation_6 -> empty .)
    COMMA           reduce using rule 69 (invocation_6 -> empty .)
    RBRACK          reduce using rule 69 (invocation_6 -> empty .)
    RPAREN          reduce using rule 69 (invocation_6 -> empty .)
    FROM            reduce using rule 69 (invocation_6 -> empty .)


state 222

    (47) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN . gotot SEMICOLON
    (57) gotot -> . empty
    (114) empty -> .

    SEMICOLON       reduce using rule 114 (empty -> .)

    gotot                          shift and go to state 226
    empty                          shift and go to state 227

state 223

    (53) while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .

    RBRACE          reduce using rule 53 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    RETURN          reduce using rule 53 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    READ            reduce using rule 53 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    FOR             reduce using rule 53 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    DO              reduce using rule 53 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    WHILE           reduce using rule 53 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    IF              reduce using rule 53 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    ID              reduce using rule 53 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)
    PRINT           reduce using rule 53 (while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE .)


state 224

    (56) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE . goto LBRACE statements RBRACE
    (58) goto -> . empty
    (114) empty -> .

    LBRACE          reduce using rule 114 (empty -> .)

    goto                           shift and go to state 228
    empty                          shift and go to state 229

state 225

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN . for_3 DO LBRACE statements RBRACE for_4
    (51) for_3 -> . empty
    (114) empty -> .

    DO              reduce using rule 114 (empty -> .)

    for_3                          shift and go to state 230
    empty                          shift and go to state 231

state 226

    (47) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot . SEMICOLON

    SEMICOLON       shift and go to state 232


state 227

    (57) gotot -> empty .

    SEMICOLON       reduce using rule 57 (gotot -> empty .)


state 228

    (56) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto . LBRACE statements RBRACE

    LBRACE          shift and go to state 233


state 229

    (58) goto -> empty .

    LBRACE          reduce using rule 58 (goto -> empty .)


state 230

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 . DO LBRACE statements RBRACE for_4

    DO              shift and go to state 234


state 231

    (51) for_3 -> empty .

    DO              reduce using rule 51 (for_3 -> empty .)


state 232

    (47) do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .

    RBRACE          reduce using rule 47 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    RETURN          reduce using rule 47 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    READ            reduce using rule 47 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    FOR             reduce using rule 47 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    DO              reduce using rule 47 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    WHILE           reduce using rule 47 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    IF              reduce using rule 47 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    ID              reduce using rule 47 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)
    PRINT           reduce using rule 47 (do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON .)


state 233

    (56) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE . statements RBRACE
    (32) statements -> . statements statement
    (33) statements -> . statement
    (34) statements -> . empty
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (114) empty -> .
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 114 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statements                     shift and go to state 235
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 234

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO . LBRACE statements RBRACE for_4

    LBRACE          shift and go to state 236


state 235

    (56) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements . RBRACE
    (32) statements -> statements . statement
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (114) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          shift and go to state 237
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! RBRACE          [ reduce using rule 114 (empty -> .) ]
  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55
    empty                          shift and go to state 74

state 236

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE . statements RBRACE for_4
    (32) statements -> . statements statement
    (33) statements -> . statement
    (34) statements -> . empty
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (114) empty -> .
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK

  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          reduce using rule 114 (empty -> .)
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statements                     shift and go to state 238
    statement                      shift and go to state 42
    empty                          shift and go to state 43
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55

state 237

    (56) if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .

    RBRACE          reduce using rule 56 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    RETURN          reduce using rule 56 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    READ            reduce using rule 56 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    FOR             reduce using rule 56 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    DO              reduce using rule 56 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    WHILE           reduce using rule 56 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    IF              reduce using rule 56 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    ID              reduce using rule 56 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)
    PRINT           reduce using rule 56 (if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE .)


state 238

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements . RBRACE for_4
    (32) statements -> statements . statement
    (35) statement -> . read
    (36) statement -> . assing_to_call
    (37) statement -> . assingation
    (38) statement -> . for
    (39) statement -> . do_while
    (40) statement -> . while
    (41) statement -> . if_else
    (42) statement -> . invocation
    (43) statement -> . if
    (44) statement -> . return
    (45) statement -> . print
    (60) read -> . READ LPAREN variable_list RPAREN SEMICOLON
    (46) assing_to_call -> . variable ASSIGN invocation
    (80) assingation -> . variable ASSIGN expression SEMICOLON
    (48) for -> . FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
    (47) do_while -> . DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
    (53) while -> . WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (56) if_else -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
    (63) invocation -> . ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
    (55) if -> . IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
    (11) return -> . RETURN expressions SEMICOLON
    (12) return -> . RETURN SEMICOLON
    (13) return -> . empty
    (75) print -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (25) variable -> . ID
    (26) variable -> . ID LBRACK expression RBRACK
    (27) variable -> . ID LBRACK expression RBRACK LBRACK expression RBRACK
    (114) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          shift and go to state 239
    READ            shift and go to state 54
    FOR             shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    IF              shift and go to state 60
    ID              shift and go to state 57
    RETURN          shift and go to state 61
    PRINT           shift and go to state 62

  ! RBRACE          [ reduce using rule 114 (empty -> .) ]
  ! READ            [ reduce using rule 114 (empty -> .) ]
  ! FOR             [ reduce using rule 114 (empty -> .) ]
  ! DO              [ reduce using rule 114 (empty -> .) ]
  ! WHILE           [ reduce using rule 114 (empty -> .) ]
  ! IF              [ reduce using rule 114 (empty -> .) ]
  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! RETURN          [ reduce using rule 114 (empty -> .) ]
  ! PRINT           [ reduce using rule 114 (empty -> .) ]

    statement                      shift and go to state 73
    read                           shift and go to state 44
    assing_to_call                 shift and go to state 45
    assingation                    shift and go to state 46
    for                            shift and go to state 47
    do_while                       shift and go to state 48
    while                          shift and go to state 49
    if_else                        shift and go to state 50
    invocation                     shift and go to state 51
    if                             shift and go to state 52
    return                         shift and go to state 41
    print                          shift and go to state 53
    variable                       shift and go to state 55
    empty                          shift and go to state 74

state 239

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE . for_4
    (52) for_4 -> . empty
    (114) empty -> .

    RBRACE          reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    READ            reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    PRINT           reduce using rule 114 (empty -> .)

    for_4                          shift and go to state 240
    empty                          shift and go to state 241

state 240

    (48) for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .

    RBRACE          reduce using rule 48 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    RETURN          reduce using rule 48 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    READ            reduce using rule 48 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    FOR             reduce using rule 48 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    DO              reduce using rule 48 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    WHILE           reduce using rule 48 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    IF              reduce using rule 48 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    ID              reduce using rule 48 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)
    PRINT           reduce using rule 48 (for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4 .)


state 241

    (52) for_4 -> empty .

    RBRACE          reduce using rule 52 (for_4 -> empty .)
    RETURN          reduce using rule 52 (for_4 -> empty .)
    READ            reduce using rule 52 (for_4 -> empty .)
    FOR             reduce using rule 52 (for_4 -> empty .)
    DO              reduce using rule 52 (for_4 -> empty .)
    WHILE           reduce using rule 52 (for_4 -> empty .)
    IF              reduce using rule 52 (for_4 -> empty .)
    ID              reduce using rule 52 (for_4 -> empty .)
    PRINT           reduce using rule 52 (for_4 -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 7 resolved as shift
WARNING: shift/reduce conflict for READ in state 33 resolved as shift
WARNING: shift/reduce conflict for FOR in state 33 resolved as shift
WARNING: shift/reduce conflict for DO in state 33 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 33 resolved as shift
WARNING: shift/reduce conflict for IF in state 33 resolved as shift
WARNING: shift/reduce conflict for ID in state 33 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 33 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 33 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 40 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 40 resolved as shift
WARNING: shift/reduce conflict for READ in state 40 resolved as shift
WARNING: shift/reduce conflict for FOR in state 40 resolved as shift
WARNING: shift/reduce conflict for DO in state 40 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 40 resolved as shift
WARNING: shift/reduce conflict for IF in state 40 resolved as shift
WARNING: shift/reduce conflict for ID in state 40 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 40 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 61 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 71 resolved as shift
WARNING: shift/reduce conflict for READ in state 119 resolved as shift
WARNING: shift/reduce conflict for FOR in state 119 resolved as shift
WARNING: shift/reduce conflict for DO in state 119 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 119 resolved as shift
WARNING: shift/reduce conflict for IF in state 119 resolved as shift
WARNING: shift/reduce conflict for ID in state 119 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 119 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 119 resolved as shift
WARNING: shift/reduce conflict for READ in state 151 resolved as shift
WARNING: shift/reduce conflict for FOR in state 151 resolved as shift
WARNING: shift/reduce conflict for DO in state 151 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 151 resolved as shift
WARNING: shift/reduce conflict for IF in state 151 resolved as shift
WARNING: shift/reduce conflict for ID in state 151 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 151 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 151 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 159 resolved as shift
WARNING: shift/reduce conflict for READ in state 159 resolved as shift
WARNING: shift/reduce conflict for FOR in state 159 resolved as shift
WARNING: shift/reduce conflict for DO in state 159 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 159 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 159 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 177 resolved as shift
WARNING: shift/reduce conflict for READ in state 177 resolved as shift
WARNING: shift/reduce conflict for FOR in state 177 resolved as shift
WARNING: shift/reduce conflict for DO in state 177 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 177 resolved as shift
WARNING: shift/reduce conflict for IF in state 177 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 177 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 177 resolved as shift
WARNING: shift/reduce conflict for READ in state 199 resolved as shift
WARNING: shift/reduce conflict for FOR in state 199 resolved as shift
WARNING: shift/reduce conflict for DO in state 199 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 199 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 199 resolved as shift
WARNING: shift/reduce conflict for READ in state 210 resolved as shift
WARNING: shift/reduce conflict for FOR in state 210 resolved as shift
WARNING: shift/reduce conflict for DO in state 210 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 210 resolved as shift
WARNING: shift/reduce conflict for IF in state 210 resolved as shift
WARNING: shift/reduce conflict for ID in state 210 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 210 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 210 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 211 resolved as shift
WARNING: shift/reduce conflict for READ in state 211 resolved as shift
WARNING: shift/reduce conflict for FOR in state 211 resolved as shift
WARNING: shift/reduce conflict for DO in state 211 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 211 resolved as shift
WARNING: shift/reduce conflict for IF in state 211 resolved as shift
WARNING: shift/reduce conflict for ID in state 211 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 211 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 211 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 217 resolved as shift
WARNING: shift/reduce conflict for READ in state 217 resolved as shift
WARNING: shift/reduce conflict for FOR in state 217 resolved as shift
WARNING: shift/reduce conflict for DO in state 217 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 217 resolved as shift
WARNING: shift/reduce conflict for IF in state 217 resolved as shift
WARNING: shift/reduce conflict for ID in state 217 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 217 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 217 resolved as shift
WARNING: shift/reduce conflict for READ in state 233 resolved as shift
WARNING: shift/reduce conflict for FOR in state 233 resolved as shift
WARNING: shift/reduce conflict for DO in state 233 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 233 resolved as shift
WARNING: shift/reduce conflict for IF in state 233 resolved as shift
WARNING: shift/reduce conflict for ID in state 233 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 233 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 233 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 235 resolved as shift
WARNING: shift/reduce conflict for READ in state 235 resolved as shift
WARNING: shift/reduce conflict for FOR in state 235 resolved as shift
WARNING: shift/reduce conflict for DO in state 235 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 235 resolved as shift
WARNING: shift/reduce conflict for IF in state 235 resolved as shift
WARNING: shift/reduce conflict for ID in state 235 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 235 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 235 resolved as shift
WARNING: shift/reduce conflict for READ in state 236 resolved as shift
WARNING: shift/reduce conflict for FOR in state 236 resolved as shift
WARNING: shift/reduce conflict for DO in state 236 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 236 resolved as shift
WARNING: shift/reduce conflict for IF in state 236 resolved as shift
WARNING: shift/reduce conflict for ID in state 236 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 236 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 236 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 238 resolved as shift
WARNING: shift/reduce conflict for READ in state 238 resolved as shift
WARNING: shift/reduce conflict for FOR in state 238 resolved as shift
WARNING: shift/reduce conflict for DO in state 238 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 238 resolved as shift
WARNING: shift/reduce conflict for IF in state 238 resolved as shift
WARNING: shift/reduce conflict for ID in state 238 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 238 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 238 resolved as shift
WARNING: reduce/reduce conflict in state 43 resolved using rule (return -> empty)
WARNING: rejected rule (statements -> empty) in state 43
WARNING: Rule (statements -> empty) is never reduced
