Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    FALSE
    STRING
    THEN
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON global_scope var_declarations set_num_temp functions main END
Rule 2     set_num_tem -> empty
Rule 3     global_scope -> empty
Rule 4     functions -> functions function
Rule 5     functions -> function
Rule 6     functions -> empty
Rule 7     function -> FUNCTION function_signature function_body
Rule 8     function_signature -> simple_type ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
Rule 9     function_signature -> VOID ID function_1 LPAREN open_var_declaration parameters close_var_declaration RPAREN var_declarations
Rule 10    function_body -> LBRACE statements return_stmt RBRACE
Rule 11    function_body -> LBRACE statements RBRACE
Rule 12    return_stmt -> RETURN expression SEMICOLON
Rule 13    return_stmt -> RETURN SEMICOLON
Rule 14    function_1 -> empty
Rule 15    main -> MAIN LPAREN RPAREN main_scope var_declarations LBRACE statements RBRACE
Rule 16    main_scope -> empty
Rule 17    var_declarations -> var_declaration_list
Rule 18    var_declarations -> empty
Rule 19    var_declaration_list -> var_declaration var_declarations
Rule 20    var_declaration -> VARIABLE open_var_declaration simple_type variables SEMICOLON close_var_declaration
Rule 21    open_var_declaration -> empty
Rule 22    close_var_declaration -> empty
Rule 23    variables -> variable
Rule 24    variables -> variable COMMA variables
Rule 25    variable -> ID
Rule 26    variable -> ID LBRACK expression RBRACK
Rule 27    variable -> ID LBRACK expression RBRACK LBRACK expression RBRACK
Rule 28    parameters -> parameters COMMA parameter
Rule 29    parameters -> parameter
Rule 30    parameters -> empty
Rule 31    parameter -> simple_type ID
Rule 32    statements -> statements statement
Rule 33    statements -> statement
Rule 34    statements -> empty
Rule 35    statement -> read
Rule 36    statement -> for
Rule 37    statement -> do_while
Rule 38    statement -> while
Rule 39    statement -> if_else
Rule 40    statement -> invocation
Rule 41    statement -> if
Rule 42    statement -> assingation
Rule 43    statement -> return
Rule 44    statement -> print
Rule 45    do_while -> DO breadcrumb LBRACE statements RBRACE WHILE LPAREN expression RPAREN gotot SEMICOLON
Rule 46    for -> FOR LPAREN ID for_1 ASSIGN expression for_2 FROM expression RPAREN for_3 DO LBRACE statements RBRACE for_4
Rule 47    for_1 -> empty
Rule 48    for_2 -> empty
Rule 49    for_3 -> empty
Rule 50    for_4 -> empty
Rule 51    while -> WHILE breadcrumb LPAREN expression RPAREN gotof LBRACE statements RBRACE
Rule 52    breadcrumb -> empty
Rule 53    if -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE
Rule 54    if_else -> IF LPAREN expression RPAREN gotof LBRACE statements RBRACE ELSE goto LBRACE statements RBRACE
Rule 55    gotot -> empty
Rule 56    goto -> empty
Rule 57    gotof -> empty
Rule 58    return -> RETURN expression SEMICOLON
Rule 59    read -> READ LPAREN variable_list RPAREN SEMICOLON
Rule 60    variable_list -> variable
Rule 61    variable_list -> variable_list COMMA variable
Rule 62    invocation -> ID invocation_1 LPAREN invocation_2 expressions RPAREN invocation_5 SEMICOLON invocation_6
Rule 63    invocation_1 -> empty
Rule 64    invocation_2 -> empty
Rule 65    invocation_3 -> empty
Rule 66    invocation_4 -> empty
Rule 67    invocation_5 -> empty
Rule 68    invocation_6 -> empty
Rule 69    expressions -> expressions COMMA invocation_4 expression invocation_3
Rule 70    expressions -> expression invocation_3
Rule 71    expressions -> empty
Rule 72    expression -> t_expression
Rule 73    expression -> NOT t_expression
Rule 74    print -> PRINT LPAREN print_arguments RPAREN SEMICOLON
Rule 75    print_arguments -> print_argument
Rule 76    print_arguments -> print_arguments COMMA print_argument
Rule 77    print_argument -> CTES
Rule 78    print_argument -> expression
Rule 79    assingation -> variable ASSIGN expression SEMICOLON
Rule 80    t_expression -> g_expression
Rule 81    t_expression -> t_expression boolean_operator g_expression
Rule 82    g_expression -> m_expression
Rule 83    g_expression -> g_expression comparison_operator m_expression
Rule 84    m_expression -> term
Rule 85    m_expression -> m_expression addition_operator term
Rule 86    term -> factor
Rule 87    term -> term multiplication_operator factor
Rule 88    factor -> variable
Rule 89    factor -> cte
Rule 90    factor -> expression_parenthesis
Rule 91    factor -> invocation
Rule 92    expression_parenthesis -> LPAREN expression RPAREN
Rule 93    comparison_operator -> LESS
Rule 94    comparison_operator -> GREATER
Rule 95    comparison_operator -> EQUALS
Rule 96    comparison_operator -> NOTEQUAL
Rule 97    comparison_operator -> GREATERTHAN
Rule 98    comparison_operator -> LESSTHAN
Rule 99    addition_operator -> PLUS
Rule 100   addition_operator -> MINUS
Rule 101   boolean_operator -> AND
Rule 102   boolean_operator -> OR
Rule 103   multiplication_operator -> TIMES
Rule 104   multiplication_operator -> DIVIDE
Rule 105   simple_type -> INT
Rule 106   simple_type -> FLOAT
Rule 107   simple_type -> CHAR
Rule 108   simple_type -> BOOLEAN
Rule 109   cte -> CTEI
Rule 110   cte -> CTEF
Rule 111   cte -> CTEC
Rule 112   cte -> CTEB
Rule 113   empty -> <empty>

Terminals, with rules where they appear

AND                  : 101
ASSIGN               : 46 79
BOOLEAN              : 108
CHAR                 : 107
COLON                : 
COMMA                : 24 28 61 69 76
COMMENT              : 
CTEB                 : 112
CTEC                 : 111
CTEF                 : 110
CTEI                 : 109
CTES                 : 77
DIVIDE               : 104
DO                   : 45 46
ELSE                 : 54
END                  : 1
EQUALS               : 95
FALSE                : 
FLOAT                : 106
FOR                  : 46
FROM                 : 46
FUNCTION             : 7
GREATER              : 94
GREATERTHAN          : 97
ID                   : 1 8 9 25 26 27 31 46 62
IF                   : 53 54
INT                  : 105
LBRACE               : 10 11 15 45 46 51 53 54 54
LBRACK               : 26 27 27
LESS                 : 93
LESSTHAN             : 98
LPAREN               : 8 9 15 45 46 51 53 54 59 62 74 92
MAIN                 : 15
MINUS                : 100
NOT                  : 73
NOTEQUAL             : 96
OR                   : 102
PLUS                 : 99
PRINT                : 74
PROGRAM              : 1
RBRACE               : 10 11 15 45 46 51 53 54 54
RBRACK               : 26 27 27
READ                 : 59
RETURN               : 12 13 58
RPAREN               : 8 9 15 45 46 51 53 54 59 62 74 92
SEMICOLON            : 1 12 13 20 45 58 59 62 74 79
STRING               : 
THEN                 : 
TIMES                : 103
TRUE                 : 
VARIABLE             : 20
VOID                 : 9
WHILE                : 45 51
error                : 

Nonterminals, with rules where they appear

addition_operator    : 85
assingation          : 42
boolean_operator     : 81
breadcrumb           : 45 51
close_var_declaration : 8 9 20
comparison_operator  : 83
cte                  : 89
do_while             : 37
empty                : 2 3 6 14 16 18 21 22 30 34 47 48 49 50 52 55 56 57 63 64 65 66 67 68 71
expression           : 12 26 27 27 45 46 46 51 53 54 58 69 70 78 79 92
expression_parenthesis : 90
expressions          : 62 69
factor               : 86 87
for                  : 36
for_1                : 46
for_2                : 46
for_3                : 46
for_4                : 46
function             : 4 5
function_1           : 8 9
function_body        : 7
function_signature   : 7
functions            : 1 4
g_expression         : 80 81 83
global_scope         : 1
goto                 : 54
gotof                : 51 53 54
gotot                : 45
if                   : 41
if_else              : 39
invocation           : 40 91
invocation_1         : 62
invocation_2         : 62
invocation_3         : 69 70
invocation_4         : 69
invocation_5         : 62
invocation_6         : 62
m_expression         : 82 83 85
main                 : 1
main_scope           : 15
multiplication_operator : 87
open_var_declaration : 8 9 20
parameter            : 28 29
parameters           : 8 9 28
print                : 44
print_argument       : 75 76
print_arguments      : 74 76
program              : 0
read                 : 35
return               : 43
return_stmt          : 10
set_num_tem          : 
set_num_temp         : 1
simple_type          : 8 20 31
statement            : 32 33
statements           : 10 11 15 32 45 46 51 53 54 54
t_expression         : 72 73 81
term                 : 84 85 87
var_declaration      : 19
var_declaration_list : 17
var_declarations     : 1 8 9 15 19
variable             : 23 24 60 61 79 88
variable_list        : 59 61
variables            : 20 24
while                : 38

